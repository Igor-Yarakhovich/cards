{"version":3,"sources":["components/superComponents/superCheckbox/SuperCheckbox.module.css","components/searchProduct/slider/Slider.module.css","components/learnPage/radioButton/RadioButton.module.css","assets/Preloader/Preloader.module.css","features/main/Main.module.css","components/searchProduct/SearchProduct.module.css","components/cards/Cards.module.css","components/packs/Packs.module.css","app/instance.ts","components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","components/profile/editableSpan.tsx","assets/modal/Modal.tsx","components/starRating/StarRating.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","assets/images/letter.svg","components/checkEmail/CheckEmail.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/login/Login.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","components/packs/packsPage-api.ts","components/packs/packsReducer.ts","components/pagination/Pagination.tsx","components/sortButton/SortButton.tsx","assets/images/searchIcon.svg","components/packs/Packs.tsx","components/searchProduct/textField/TextField.tsx","components/searchProduct/slider/Slider.tsx","components/searchProduct/SearchProduct.tsx","components/cards/cardsApi.ts","components/cards/cardsReducer.ts","components/learnPage/radioButton/RadioButton.tsx","components/learnPage/LearnPage.tsx","components/cards/Cards.tsx","features/main/Main.tsx","assets/images/packsList.svg","assets/images/profileIcon.svg","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx","components/profile/Profile.module.css","components/registration/Registration.module.css","features/navbar/Navbar.module.css","components/login/Login.module.css","components/learnPage/LearnPage.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/setPassword/setPassword.module.css","components/checkEmail/CheckEmail.module.css","components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","passwordValidate","value","type","setStatus","setPasswordValidate","SuperInputText","name","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","button","default","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","dispatch","useDispatch","useEffect","setTimeout","validatePassword","length","token","useParams","to","pathname","styles","style","setPasswordWrapper","setPasswordTitle","setPasswordSubTitle","onSubmit","preventDefault","a","response","message","getPassword","passwordRecoveryPassword","placeholder","id","target","setPasswordText","setPasswordBtn","color","authAPI","dat","hidePassword","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","setHidePasswordAC","payload","meAPI","put","delete","initialised","isInitialisedAC","setDataAC","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","autoFocus","onBlur","onDoubleClick","Modal","enableBackground","backgroundStyle","backgroundOnClick","width","height","modalStyle","modalOnClick","show","children","top","left","position","background","opacity","zIndex","onClick","display","flexFlow","alignItems","justifyContent","MyRating","styled","Rating","root","fontSaze","StarRating","starRating","readOnly","precision","defaultValue","size","Profile","email","profile","photo","avatar","login","setShow","inputRef","useRef","startValueHandler","useCallback","then","res","setNameAC","updatedUser","catch","finally","newNameTC","container","profileWrapper","profileLeftBox","profileLeftTop","profileWrapImg","profileAvatarImg","src","alt","profileNameUser","profileUserProf","profilePersonalBtn","profileLeftBottom","profileRightBox","profileRightBoxWrapper","profileRightBoxTitle","TextField","fullWidth","sx","m","margin","focused","profilePersonal","profilePersonalTitle","profilePersonalPhotoWrapper","hidden","ref","profilePersonalSelectPhoto","current","click","profilePersonalNameRow","profilePersonalRowTitle","profilePersonalEmailRow","profileBtnBox","profileBtnCancel","profileBtnSave","passwordRecoveryError","passwordRecoveryStatus","Preloader","preloader","spinner","CheckEmail","checkEmail","checkEmailTitle","checkEmailWrapImg","checkEmailImg","letter","checkEmailSubTitle","checkEmailBottom","checkEmailText","PasswordRecovery","from","passwordRecovery","validateEmail","test","passwordRecoveryWrapper","passwordRecoveryTitle","passwordRecoverySubTitle","console","log","recoveryPassword","passwordRecoveryEmail","passwordRecoveryText","passwordRecoveryButton","passwordRecoveryBottom","passwordRecoveryTextButton","passwordRecoveryLink","registrationAPI","confirmPassword","isLoading","isRegistration","hideConfirmPassword","setEmail","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","disabled","registrationBtnReg","registrationOverlay","Login","formik","useFormik","initialValues","rememberMe","validate","values","errors","resetForm","loginWrapper","loginTitle","loginSubtitle","handleSubmit","loginEmailWrap","loginLabel","loginInput","getFieldProps","touched","loginPasswordWrap","loginPasswordControl","loginLinkForgot","href","loginBottom","loginBtn","loginText","loginLinkSignUp","SuperCheckbox","onChangeChecked","checkbox","checked","htmlFor","SuperComponents","Page404","body404","h2404","h3404","p404","packAPI","params","get","cardsPack","packId","packUserId","page","pageCount","sortPacks","packName","setSortPacksCountAC","getMyPacksTC","userId","getState","packData","packs","user_id","err","TablePaginationDemo","TablePagination","component","count","cardPacksTotalCount","onPageChange","event","newPage","rowsPerPage","onRowsPerPageChange","parseInt","SortButton","main","fontSize","funOne","funTwo","SearchButton","Button","backgroundColor","borderRadius","textTransform","Packs","_id","myUserId","setMyUserId","searchValue","setSearchValue","addMyPacksHandler","addNewPackHandler","newCardsPack","deleteMyPackHandler","cardPacks","deletePackUserIdAC","timer","setPacksNameAC","clearTimeout","packsWrapper","packsLeftBox","showAll","showMy","packsRightBox","packsRightWrapper","packsTitle","packsRightTopBlock","mainSearchWrapper","mainSearchForm","required","mainSearchIcon","icon","variant","header","sortBlock","sort","table","map","index","row","cardsCount","created","user_name","replace","FullWidthTextField","Box","label","valuetext","RangeSlider","setValue","sliderWrapper","sliderTitle","Slider","getAriaLabel","newValue","valueLabelDisplay","getAriaValueText","SearchProduct","search","cardsApi","cardAnswer","cardQuestion","cardsPack_id","min","max","sortCards","cards","cardsTotalCount","setSortCardsAC","getAllCardsTC","RadioButton","radioButton","FormControl","FormLabel","radioButtonTitle","RadioGroup","FormControlLabel","control","Radio","getCard","sum","reduce","acc","card","grade","rand","Math","random","i","newSum","LearnPage","isChecked","setIsChecked","first","setFirst","store","answer","question","shots","rating","more_id","updated","setCard","learnPage","learnPageWrapper","learnPageTitle","learnPageRow","learnPageRowText","learnPageBtnBox","learnPageBtnCancel","learnPageBtnShow","Cards","setCardAnswerAC","cardLearnModalBtnBox","Main","path","element","Navbar","loginHandler","item","isActive","activeStyle","nav","navWrapper","navLogo","navTabs","navTabsItem","navTabsImg","img1","img2","navRight","navTabsItem1","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","copyState","page404","filter","cardPack","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8afd703.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__3d2Wa\",\"sliderTitle\":\"Slider_sliderTitle__233pS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButtonTitle\":\"RadioButton_radioButtonTitle__eo03K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3Amvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchProduct_search__ijYTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardLearnModalBtnBox\":\"Cards_cardLearnModalBtnBox__2U9s6\",\"cardLearnModalBtnCancel\":\"Cards_cardLearnModalBtnCancel__1_ncp\",\"cardLearnModalBtnNext\":\"Cards_cardLearnModalBtnNext__RnYCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__3z8jD\",\"container\":\"Packs_container__3NtQ9\",\"packsWrapper\":\"Packs_packsWrapper__3FsCG\",\"packsLeftBox\":\"Packs_packsLeftBox__1n-NT\",\"packsRightBox\":\"Packs_packsRightBox__1SdN6\",\"packsRightWrapper\":\"Packs_packsRightWrapper__3aOqw\",\"packsTitle\":\"Packs_packsTitle__oMjCB\",\"packsRightTopBlock\":\"Packs_packsRightTopBlock__2s75V\",\"mainSearchWrapper\":\"Packs_mainSearchWrapper__j3WKT\",\"mainSearchForm\":\"Packs_mainSearchForm__2k4FG\",\"mainSearchIcon\":\"Packs_mainSearchIcon__12tjC\",\"showAll\":\"Packs_showAll__snDbY\",\"showMy\":\"Packs_showMy__2D1Sc\",\"header\":\"Packs_header__m8sGr\",\"sort\":\"Packs_sort__1E8gU\",\"sortBlock\":\"Packs_sortBlock__3ldNQ\",\"table\":\"Packs_table__x_FNF\",\"row\":\"Packs_row__3bTRS\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})","import {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType = ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle',\r\n    passwordValidate: ''\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n            case \"SET-PASSWORD/PASSWORD_VALIDATE\":\r\n            return {...state, passwordValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\nexport const setPasswordValidate = (value: string) => ({type: \"SET-PASSWORD/PASSWORD_VALIDATE\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n         await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n    passwordValidate: string\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setPasswordValidate>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        name, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './setPassword.module.css';\r\nimport styles from './setPassword.module.css';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {getPassword, setPasswordError, setPasswordValidate} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\ntype UseStateType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n    const passwordValidate = useSelector<AppRootStateType, string>(state => state.setPassword.passwordValidate);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordError(''))\r\n            }, 4000)\r\n        }\r\n        if (passwordValidate) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [passwordValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validatePassword()\r\n        if (isValidate) {\r\n            e.preventDefault();\r\n            dispatch(getPassword(data))\r\n        } else {\r\n            setData({...data, password: ''})\r\n        }\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        if (!data.password) {\r\n            dispatch(setPasswordValidate('Required password'))\r\n            return false\r\n        } else if (data.password.length > 15) {\r\n            dispatch(setPasswordValidate('Your password should be not longer then 15 characters'));\r\n            return false\r\n        } else {\r\n            dispatch(setPasswordValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const {token} = useParams<string>();\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || passwordValidate ? styles.error : ''\r\n\r\n    return (\r\n\r\n        <div className={style.setPassword}>\r\n            <div className={style.setPasswordWrapper}>\r\n                <h2 className={style.setPasswordTitle}> IT-incubator</h2>\r\n                <h3 className={style.setPasswordSubTitle}>Create new password</h3>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryPassword}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={data.password}\r\n                        onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                    />\r\n\r\n                    <p className={style.setPasswordText}>Create new password and we will send you further instructions\r\n                        to email</p>\r\n\r\n                    <SuperButton\r\n                        className={style.setPasswordBtn}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Create new password\r\n                    </SuperButton>\r\n\r\n                    <div>{error}</div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import {instance} from \"../../app/instance\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType} from \"./loginPage-api\";\r\nimport {isInitialisedAC, setDataAC, SetDataType, SetInitialisedType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    hidePassword: 'text',\r\n    isLoggedIn: false,\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setHidePasswordAC = (hidePassword: string) => ({\r\n    type: 'APP/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\n\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetHidePasswordActionType = ReturnType<typeof setHidePasswordAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType | SetInitialisedType|SetHidePasswordActionType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import {AxiosResponse} from 'axios'\r\nimport {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(setAppErrorAC(null))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import React, {CSSProperties} from 'react';\r\n\r\ninterface IModal {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n}\r\n\r\nconst Modal: React.FC<IModal> = (\r\n    {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return(\r\n        <>\r\n            {enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.90,\r\n                    zIndex: 20,\r\n\r\n                    ...backgroundStyle,\r\n                }}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    // background: '#9890C7',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import style from './StarRating.module.css';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\n\r\nconst MyRating = styled(Rating)({\r\n    root: {\r\n        fontSaze: 12 ,\r\n    },\r\n    '& .MuiRating-iconFilled': {\r\n        color: '#21268F',\r\n    },\r\n    '& .MuiRating-iconEmpty': {\r\n        color: '#D7D8EF',\r\n    },\r\n});\r\n\r\nfunction StarRating() {\r\n\r\n    return ( \r\n        <div className={style.starRating}>\r\n            <MyRating \r\n                readOnly\r\n                precision={0.5}\r\n                defaultValue={3.5}\r\n                size=\"small\"\r\n                />\r\n                \r\n\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default StarRating;","import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {newNameTC} from \"./profileReducer\";\r\nimport {ErrorType, setAppErrorAC} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\n\r\nimport style from './Profile.module.css';\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Modal from \"../../assets/modal/Modal\";\r\n\r\nimport { TextField } from \"@mui/material\";\r\n\r\n\r\n// import { Pagination } from \"../pagination/Pagination\";\r\nimport StarRating from '../starRating/StarRating';\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const handlerUploadClick = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                setAppErrorAC(null)\r\n            }, 4000)\r\n        }\r\n    }, [error])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <section className={style.profile}>\r\n            <div className={style.container}>\r\n                <div className={style.profileWrapper}>\r\n                    <div className={style.profileLeftBox}>\r\n                        <div className={style.profileLeftTop}>\r\n                            <div className={style.profileWrapImg}>\r\n                                <img className={style.profileAvatarImg} src={avatar} alt=\"\"/>\r\n                            </div>\r\n                            <div className={style.profileNameUser}><EditableSpan value={name}\r\n                                                                                 onChange={startValueHandler}/></div>\r\n                            <div className={style.profileUserProf}>Front-end developer</div>\r\n\r\n                            <SuperButton\r\n                                className={style.profilePersonalBtn}\r\n                                color='white'\r\n                                type={\"submit\"}\r\n                                onClick={() => setShow(true)}\r\n                            >\r\n                                Edit profile\r\n                            </SuperButton>\r\n                        </div>\r\n                        <div className={style.profileLeftBottom}>\r\n                            {/*<Slider/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.profileRightBox}>\r\n                        <div className={style.profileRightBoxWrapper}>\r\n                            <h2 className={style.profileRightBoxTitle}>My packs list</h2>\r\n                            <TextField\r\n                                fullWidth sx={{m: 5}}\r\n                                placeholder=\"Search...\"\r\n                                style={{margin: 0}}\r\n                                focused size=\"small\"/>\r\n                            Таблица\r\n                            Pagination\r\n                            <StarRating/>\r\n                           \r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <>\r\n                <Modal\r\n                    enableBackground={true}\r\n                    backgroundOnClick={() => setShow(false)}\r\n                    width={600}\r\n                    height={200}\r\n                    show={show}\r\n                >\r\n                    <section className={style.profilePersonal}>\r\n                        <h2 className={style.profilePersonalTitle}>Personal information</h2>\r\n\r\n                        {error && initialised ? error : (status === 'loading')}\r\n\r\n                        <div className={style.profilePersonalPhotoWrapper}>\r\n                            {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}\r\n                        </div>\r\n\r\n                        <input type=\"file\" hidden={true} ref={inputRef}/>\r\n                        <button className={style.profilePersonalSelectPhoto} onClick={handlerUploadClick}></button>\r\n\r\n                        <div className={style.profilePersonalNameRow}>\r\n                            <span className={style.profilePersonalRowTitle}>Nickname:</span> <br/>\r\n                            <EditableSpan value={name} onChange={startValueHandler}/>\r\n                        </div>\r\n                        <div className={style.profilePersonalEmailRow}>\r\n                            <span className={style.profilePersonalRowTitle}>Email:</span><br/>\r\n                            {email}\r\n                        </div>\r\n\r\n                        <div className={style.profileBtnBox}>\r\n                            <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button>\r\n                            <button className={style.profileBtnSave}>Save</button>\r\n                        </div>\r\n                    </section>\r\n                </Modal>\r\n            </>\r\n\r\n        </section>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle'\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType = {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n    emailValidate: string\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\nimport styles from './Preloader.module.css'\r\n\r\nexport let Preloader = () => {\r\n\r\n    return <div className={styles.preloader}>\r\n        <img alt='' src={spinner}/>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/letter.bc3a4042.svg\";","import React from \"react\";\r\nimport style from './CheckEmail.module.css';\r\nimport letter from './../../assets/images/letter.svg';\r\n\r\ntype CheckEmailPropsType = {\r\n    email: string\r\n}\r\n\r\nfunction CheckEmail(props: CheckEmailPropsType) {\r\n\r\n    return (\r\n        <div className={style.checkEmail}>\r\n            <h2 className={style.checkEmailTitle}>IT-incubator</h2>\r\n            <div className={style.checkEmailWrapImg}>\r\n                <img className={style.checkEmailImg} src={letter} alt=\"\"/>\r\n            </div>\r\n            <h3 className={style.checkEmailSubTitle}>Check Email</h3>\r\n            <div className={style.checkEmailBottom}>\r\n                <span className={style.checkEmailText}>We’ve sent an Email with instructions to <br/></span>\r\n                <span className={style.checkEmailText}>  {props.email} </span>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CheckEmail;","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './PasswordRecovery.module.css';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {\r\n    passwordRecoveryError,\r\n    recoveryPassword,\r\n    recoveryStatusType\r\n} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport CheckEmail from \"../checkEmail/CheckEmail\";\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryError(''))\r\n            }, 4000)\r\n        }\r\n    }, [error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n\r\n        const isValidate = validateEmail()\r\n\r\n        if (isValidate) {\r\n            dispatch(recoveryPassword(data));\r\n            e.preventDefault();\r\n        } else {\r\n            setData({...data, email: ''})\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!data.email) {\r\n            dispatch(passwordRecoveryError('Required email'))\r\n            return false\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n            dispatch(passwordRecoveryError('Invalid email address'))\r\n            return false\r\n        } else {\r\n            dispatch(passwordRecoveryError(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n        return <CheckEmail email={data.email}/>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={style.passwordRecovery}>\r\n            <div className={style.passwordRecoveryWrapper}>\r\n                <h2 className={style.passwordRecoveryTitle}>IT-incubator</h2>\r\n                <h3 className={style.passwordRecoverySubTitle}>Forgot your password?</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryEmail}\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={data.email}\r\n                        onChange={setDataHandler}\r\n                    />\r\n                    <p className={style.passwordRecoveryText}>Enter your email address and we will send you further\r\n                        instructions</p>\r\n                    <div className={styles.error}>{error}</div>\r\n                    <SuperButton\r\n                        className={style.passwordRecoveryButton}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}\r\n                    >\r\n                        Send Instructions\r\n                    </SuperButton>\r\n                </form>\r\n                <div className={style.passwordRecoveryBottom}>\r\n\r\n                    <p className={style.passwordRecoveryTextButton}>Did you remember your password?</p>\r\n\r\n                    <NavLink className={style.passwordRecoveryLink} to={'/login'}>Try logging in</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}> </button>\r\n                        <div style={{color: 'red'}}>{error}</div>\r\n                        {isLoading && <div>загрузка....</div>}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={isLoading} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={isLoading} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC, setHidePasswordAC} from './loginReducer';\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const hidePassword = useSelector<AppRootStateType, string>(state => state.login.hidePassword)\r\n    const dispatch = useDispatch()\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePasswordAC('text'))\r\n        else dispatch(setHidePasswordAC('password'))\r\n\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.loginWrapper}>\r\n                <h2 className={s.loginTitle}>It-incubator</h2>\r\n                <h3 className={s.loginSubtitle}>Sign In</h3>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.loginEmailWrap}>\r\n                        <label className={s.loginLabel}>Email</label>\r\n                        <input className={s.loginInput} type={\"email\"} placeholder={''}\r\n                        {...formik.getFieldProps('email')}/>\r\n                    </div>\r\n                    {formik.touched.email &&\r\n                    formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                    <div className={s.loginPasswordWrap}>\r\n                        <label className={s.loginLabel}>Password</label>\r\n                        <input className={s.loginInput} type={hidePassword} placeholder={''}\r\n                        {...formik.getFieldProps('password')}/>\r\n                        <button type={'button'} className={s.loginPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n\r\n                    </div>\r\n                    {formik.touched.password &&\r\n                    formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                    {/* <div className={s.loginCheckbox}>\r\n                        <input type={'checkbox'}/>\r\n                        <label>Remember me</label>\r\n                        \r\n                    </div> */}\r\n                    {error && error}\r\n                    {status === 'loading' && <Preloader/>}\r\n\r\n                    <a className={s.loginLinkForgot} href={\"#/passwordRecovery\"}>Forgot Password</a>\r\n\r\n                    <div className={s.loginBottom}>\r\n                        <button className={s.loginBtn} type={'submit'} disabled={status === 'loading'}>Login</button>\r\n\r\n                        <p className={s.loginText}>Don’t have an account?</p>\r\n                        <a className={s.loginLinkSignUp} href={'#/registration'}>Sign Up</a>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n// api\r\n\r\nexport const packAPI = {\r\n    getPack(params:ParamsType) {\r\n        return instance.get<PacksResponseType>('cards/pack', {params})\r\n    },\r\n    createPack() {\r\n        return instance.post<NewCardsPackType>('cards/pack', {cardsPack: {name: '7777'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<PacksResponseType>('cards/pack', {params: {id: packId}})\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n\r\n}\r\nexport type NewCardsPackType = {\r\n    newCardsPack: PackUserType\r\n    token: string,\r\n    tokenDeathTime: number\r\n}\r\nexport type PackUserType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    user_name:string\r\n}\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<PackUserType>,\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\nexport type ParamsType={\r\n    page:number\r\n    pageCount:number\r\n    user_id:string\r\n    sortPacks:string\r\n}","import {Dispatch} from \"redux\";\r\nimport {packAPI, PacksResponseType, PackUserType} from \"./packsPage-api\";\r\nimport {setStatusAC, SetStatusType} from \"../login/loginReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\n\r\nconst initialState = {\r\n    data: null as null | PacksResponseType,\r\n    packUserId: '',\r\n    page: 0,\r\n    pageCount: 10,\r\n    sortPacks: '',\r\n    packName: ''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACK-USER-ID\":\r\n            return {...state, packUserId: action.packUserId}\r\n        case \"packs/SET-SORT-PACKS\":\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case \"packs/SET-PAGE\":\r\n            return {...state, page: action.page}\r\n        case \"packs/SET-PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"packs/DELETE-PACK-USER-ID\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    cardPacks: state.data?.cardPacks.filter(cardPack => cardPack._id !== action.packId) as PackUserType[]\r\n                } as PacksResponseType\r\n            }\r\n        case \"packs/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"packs/SET-PACKS-NAME\":\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setPacksDataAC = (data: PacksResponseType) =>\r\n    ({type: 'packs/SET-DATA', data} as const)\r\n\r\nexport const setPageAC = (page: number) =>\r\n    ({type: \"packs/SET-PAGE\", page} as const)\r\n\r\nexport const setPageCountAC = (pageCount: number) =>\r\n    ({type: \"packs/SET-PAGE-COUNT\", pageCount} as const)\r\n\r\nexport const setSortPacksCountAC = (sortPacks: string) =>\r\n    ({type: \"packs/SET-SORT-PACKS\", sortPacks} as const)\r\n\r\nexport const setPackUserIdAC = (packUserId: string) =>\r\n    ({type: \"packs/SET-PACK-USER-ID\", packUserId} as const)\r\n\r\nexport const deletePackUserIdAC = (packId: string) =>\r\n    ({type: \"packs/DELETE-PACK-USER-ID\", packId} as const)\r\n\r\nexport const setPacksNameAC = (packName: string) =>\r\n    ({type: \"packs/SET-PACKS-NAME\", payload: {packName}} as const)\r\n\r\n\r\n\r\n// types\r\nexport type SetPacksDataType = ReturnType<typeof setPacksDataAC>\r\nexport type SetPackUserIdType = ReturnType<typeof setPackUserIdAC>\r\nexport type DeletePackUserIdType = ReturnType<typeof deletePackUserIdAC>\r\n\r\nexport type ActionType = SetPacksDataType\r\n    | SetStatusType\r\n    | SetPackUserIdType\r\n    | DeletePackUserIdType\r\n    | ReturnType<typeof setPageAC>\r\n    | ReturnType<typeof setPageCountAC>\r\n    | ReturnType<typeof setSortPacksCountAC>\r\n    | ReturnType<typeof setPacksNameAC>\r\n\r\n\r\n// thunks\r\n\r\nexport const getMyPacksTC = (userId: string) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    const packData = getState().packs\r\n\r\n\r\n\r\n    const params = {\r\n        page: packData.page + 1,\r\n        pageCount: packData.pageCount,\r\n        user_id: userId,\r\n        sortPacks: packData.sortPacks,\r\n        packName: packData.packName\r\n    }\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.getPack(params)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(setPacksDataAC(res.data))\r\n            dispatch(setPackUserIdAC(userId))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const addPacksTC = (): ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.createPack()\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(getMyPacksTC(res.data.newCardsPack.user_id))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const deleteMyPacksTC = (packId: string): ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.deletePack(packId)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(deletePackUserIdAC(packId))\r\n            dispatch(getMyPacksTC(''))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import * as React from 'react';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setPageAC, setPageCountAC} from '../packs/packsReducer';\r\n\r\ntype PageCountPropsType = {\r\n    cardPacksTotalCount: number,\r\n    page: number,\r\n    pageCount: number\r\n}\r\n\r\nexport default function TablePaginationDemo(props: PageCountPropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChangePage = (\r\n        event: React.MouseEvent<HTMLButtonElement> | null,\r\n        newPage: number,\r\n    ) => {\r\n        dispatch(setPageAC(newPage))\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        dispatch(setPageCountAC(parseInt(event.target.value, 10)))\r\n    };\r\n\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            count={props.cardPacksTotalCount}\r\n            page={props.page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={props.pageCount}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './SortButton.module.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\n\r\ntype PropsSort = {\r\n    funOne:()=>void,\r\n    funTwo:()=>void\r\n}\r\n\r\nexport const SortButton = (props:PropsSort) => {\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <span> <ArrowDropUpIcon color={'primary'} fontSize={'large'} onClick={props.funOne}/> </span>\r\n            <span> <ArrowDropDownIcon color={'primary'} fontSize={'large'} onClick={props.funTwo}/> </span>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/searchIcon.4e9697bd.svg\";","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\n\r\nimport {\r\n    addPacksTC,\r\n    deleteMyPacksTC,\r\n    getMyPacksTC,\r\n    setPacksNameAC,\r\n    setSortPacksCountAC\r\n} from './packsReducer';\r\n\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {Preloader} from '../../assets/Preloader/Preloader';\r\n\r\nimport s from './Packs.module.css';\r\n\r\nimport TablePaginationDemo from '../pagination/Pagination';\r\nimport {Navigate, useNavigate} from 'react-router-dom'\r\nimport {SortButton} from '../sortButton/SortButton';\r\nimport {Button} from '@mui/material';\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\n\r\nimport icon from './../../assets/images/searchIcon.svg';\r\nimport { styled } from '@mui/material/styles';\r\nimport Modal from \"../../assets/modal/Modal\";\r\n\r\n\r\n\r\nconst SearchButton = styled(Button)({\r\n    '&.MuiButton-root': {\r\n        height: 36,\r\n        width: 184,\r\n        backgroundColor: '#21268F',\r\n        color: '#FEFEFF',\r\n        borderRadius: 18,\r\n        textTransform: 'inherit',\r\n    },\r\n});\r\n\r\nexport const Packs = React.memo(() => {\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {data, page, pageCount, packName,sortPacks} = useAppSelector(state => state.packs)\r\n\r\n    const userId = useSelector<AppRootStateType, string>(state => state.profile.data._id)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const dispatch = useDispatch();\r\n    let navigate = useNavigate();\r\n\r\n    const [myUserId, setMyUserId] = useState(true)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (myUserId) {\r\n            dispatch(getMyPacksTC(''))\r\n        }\r\n\r\n    }, [dispatch, page, pageCount, packName,sortPacks])\r\n\r\n\r\n    const addMyPacksHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyUserId(e.currentTarget.checked)\r\n        dispatch(getMyPacksTC(myUserId ? userId : ''))\r\n\r\n        //dispatch(setPackUserIdAC(myUserId ? userId : ''));\r\n    }, [dispatch, setMyUserId, myUserId])\r\n\r\n\r\n    const addNewPackHandler = useCallback(() => {\r\n        dispatch(addPacksTC())\r\n    }, [dispatch])\r\n\r\n    const deleteMyPackHandler = useCallback(() => {\r\n        if (data) {\r\n            dispatch(deleteMyPacksTC(data.cardPacks[0]._id))\r\n\r\n        }\r\n    }, [dispatch, data])\r\n\r\n    function handleClick(packId: string) {\r\n        navigate(`/cards/${packId}`, {replace: true});\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => dispatch(setPacksNameAC(searchValue)), 500)\r\n        return () => clearTimeout(timer)\r\n    }, [searchValue, dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onClickSortPacksNameUpHandler =()=>dispatch(setSortPacksCountAC('1name'))\r\n    const onClickSortPacksNameDownHandler =()=>dispatch(setSortPacksCountAC('0name'))\r\n\r\n    const onClickSortPacksCardsCountUpHandler =()=>dispatch(setSortPacksCountAC('1cardsCount'))\r\n    const onClickSortPacksCardsCountDownHandler =()=>dispatch(setSortPacksCountAC('0cardsCount'))\r\n\r\n    const onClickSortPacksCardsUpdateUpHandler =()=>dispatch(setSortPacksCountAC('1updated'))\r\n    const onClickSortPacksCardsUpdateDownHandler =()=>dispatch(setSortPacksCountAC('0updated'))\r\n\r\n\r\n    return <div className={s.main}> \r\n                <div className={s.container}>\r\n                    <div className={s.packsWrapper}>\r\n                        <div className={s.packsLeftBox}>\r\n                            <div>\r\n                                <input type=\"checkbox\" checked={myUserId} onChange={addMyPacksHandler}/> All packs / My packs\r\n                                {myUserId ? <span className={s.showAll}>ALL PACKS</span> : <span className={s.showMy}>MY PACKS</span>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.packsRightBox}>\r\n                            <div className={s.packsRightWrapper}>\r\n\r\n                                <h2 className={s.packsTitle}>Packs list</h2>\r\n\r\n                                <div className={s.packsRightTopBlock}>\r\n                                    <div className={s.mainSearchWrapper} >\r\n                                        <SuperInputText\r\n                                            className={s.mainSearchForm}\r\n                                            type=\"text\"\r\n                                            required\r\n                                            onChangeText={setSearchValue}\r\n                                            placeholder='Search...'\r\n                                            name={\"Search\"}/>\r\n                                        {!searchValue && <img className={s.mainSearchIcon} src={icon} alt=\"search\"/>}\r\n                                    </div>\r\n                                    {/*onClick={addNewPackHandler}*/}\r\n                                    <SearchButton variant=\"outlined\" onClick={() => setShow(true)}  >Add new pack</SearchButton>\r\n\r\n                                </div>\r\n                                <div className={s.header}>\r\n                                    <div className={s.sortBlock}>Name\r\n                                        <span className={s.sort}>\r\n                                            <SortButton funOne={onClickSortPacksNameUpHandler} funTwo={onClickSortPacksNameDownHandler}/> \r\n                                        </span>\r\n                                    </div>\r\n                                    <div className={s.sortBlock}>Cards \r\n                                        <span className={s.sort}> \r\n                                            <SortButton funOne={onClickSortPacksCardsCountUpHandler} funTwo={onClickSortPacksCardsCountDownHandler}/> \r\n                                        </span>\r\n                                    </div>\r\n                                    <div className={s.sortBlock}>Updated \r\n                                        <span className={s.sort}>\r\n                                            <SortButton funOne={onClickSortPacksCardsUpdateUpHandler} funTwo={onClickSortPacksCardsUpdateDownHandler}/>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className={s.sortBlock}>Created by</div>\r\n                                    <div className={s.sortBlock}>Actions</div>\r\n                                </div>\r\n\r\n                                <div className={s.table}>\r\n                                    {\r\n                                        data.cardPacks.map((value, index) => (\r\n                                            <div key={data.cardPacks[index]._id} className={s.row}>\r\n                                                <div>{data.cardPacks[index].name}</div>\r\n                                                <div>{data.cardPacks[index].cardsCount}</div>\r\n                                                <div>{data.cardPacks[index].created}</div>\r\n                                                <div>{data.cardPacks[index].user_name}</div>\r\n                                                <div>\r\n                                                    <Button color={'success'} variant=\"contained\"\r\n                                                            onClick={() => handleClick(data.cardPacks[index]._id)}\r\n                                                    > Cards</Button>\r\n\r\n                                                    {!myUserId ?\r\n                                                        <span>\r\n                                                        <Button variant=\"contained\"> Update</Button>\r\n                                                        <Button color={'error'} variant=\"contained\" onClick={deleteMyPackHandler}> del</Button>\r\n                                                    </span>\r\n                                                        : ''\r\n                                                    }\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                        ))\r\n                                    }\r\n                                    <Modal\r\n                                        enableBackground={true}\r\n                                        backgroundOnClick={() => setShow(false)}\r\n                                        width={300}\r\n                                        height={200}\r\n                                        // modalOnClick={() => setShow(false)}\r\n                                        show={show}\r\n                                    >\r\n                                        <SuperInputText/>\r\n                                        <button onClick={() => setShow(false)}>Cancel</button>\r\n                                        <button onClick={addNewPackHandler}>Apply</button>\r\n                                    </Modal>\r\n                                </div>\r\n                                <TablePaginationDemo cardPacksTotalCount={data.cardPacksTotalCount} page={page} pageCount={pageCount}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n        \r\n       \r\n\r\n        \r\n       \r\n    </div>\r\n})\r\n\r\n\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nexport default function FullWidthTextField() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n\r\n            }}\r\n        >\r\n            <TextField fullWidth sx={{ m: 5}}  label=\"Search\" placeholder=\"Product name\" focused size=\"small\"/>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport style from './Slider.module.css';\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const [value, setValue] = React.useState<number[]>([0, 100]);\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div className={style.sliderWrapper}>\r\n\r\n           <h3 className={style.sliderTitle}>Number of cards</h3>\r\n\r\n            <Box sx={{ width: 600}}>\r\n                <Slider\r\n                    color={'primary'}\r\n                getAriaLabel={() => 'Temperature range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                />\r\n            </Box>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport TextField from './textField/TextField';\r\nimport Slider from './slider/Slider';\r\nimport {Button} from '@mui/material';\r\nimport style from './SearchProduct.module.css';\r\n\r\nexport default function SearchProduct() {\r\n    return <div className={style.search}>\r\n        <TextField/>\r\n        <Slider/>\r\n\r\n            <Button  variant='outlined' size=\"large\" color={'primary'}>\r\n                Search\r\n            </Button>\r\n\r\n\r\n    </div>\r\n\r\n\r\n}\r\n","import {instance} from \"../../app/instance\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nexport const cardsApi = {\r\n    getCards(cardAnswer: string, cardQuestion: string,\r\n             pageCount: number, cardsPack_id: string, min: number, max: number, sortCards: string,\r\n             page: number) {\r\n        return instance.get<ResponseType>(`/cards/card/`,\r\n            {params: {cardAnswer, cardQuestion, pageCount, cardsPack_id, min, max, sortCards, page}})\r\n    },\r\n    postCard({cardsPack_id, answer, question, grade, shots}: CreateCardType) {\r\n        return instance.post<CardsType, AxiosResponse<ResponseType>>(`/cards/card`,\r\n            {card: {cardsPack_id, answer, question, grade, shots}})\r\n    },\r\n    deleteCard(_id: string) {\r\n        return instance.delete<CardsType, AxiosResponse<ResponseType>>(`/cards/card/?id=${_id}`)\r\n    },\r\n    updateCard({_id, question, answer}: UpdateCardType) {\r\n        return instance.put<CardsType, AxiosResponse<ResponseType>>(`/cards/card/`,\r\n            {card: {_id, question, answer}})\r\n    },\r\n\r\n    getParam(params: ParamsType) {\r\n        return instance.get(`cards/card/${params.cardsPack_id}`)\r\n    },\r\n\r\n    gradeCard(grade: number, card_id: string) {\r\n        return instance.put<AxiosResponse<GradeCardType>>('/cards/grade', {grade, card_id})\r\n    }\r\n}\r\nexport type GradeCardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id:string\r\n    user_id:string\r\n    grade:number\r\n    shots:number\r\n}\r\nexport type CreateCardType = {\r\n    cardsPack_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type CardsType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\ntype UpdateCardType = {\r\n    _id: string\r\n    question: string\r\n    answer: string\r\n}\r\nexport type ResponseType = {\r\n    cards: CardsType[],\r\n    cardsTotalCount: number,\r\n    maxGrade: number,\r\n    mainGrade: number,\r\n    page: number,\r\n    pageCount: number,\r\n    packUserId: string,\r\n}\r\nexport type ParamsType = {\r\n    cardsPack_id: string\r\n}","import {setAppErrorAC, setStatusAC} from \"../login/loginReducer\";\r\nimport {cardsApi, CardsType} from \"./cardsApi\";\r\nimport {AppThunk} from \"../../app/store\";\r\n\r\n\r\nconst initialState = {\r\n    data: null,\r\n    packUserId: '',\r\n    page: 1,\r\n    pageCount: 10,\r\n    sortPacks: '',\r\n    cards: [] as Array<CardsType>,\r\n    min: 0,\r\n    max: 6,\r\n    id: \"\",\r\n    cardAnswer: \"\",\r\n    cardQuestion: \"\",\r\n    cardsPack_id: \"\",\r\n    sortCards: \"0update\",\r\n    cardsTotalCount: 15,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_ANSWER\":\r\n        case \"cards/SET_QUESTION\":\r\n        case \"cards/SET_MAX_CARDS_COUNT\":\r\n        case \"cards/SET_MIN_CARDS_COUNT\":\r\n        case \"cards/SET_CARD_ANSWER\":\r\n        case \"cards/SET_CARD_QUESTION\":\r\n        case \"cards/SET_PAGE_COUNT\":\r\n        case \"cards/SET_PAGE\":\r\n        case \"cards/SET_CARDS_PACK_ID\":\r\n        case \"cards/SET_SORT_CARDS\":\r\n        case \"cards/DELETE_ALL_CARDS\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"cards/SET_ALL_CARDS\":{\r\n            //@ts-ignore\r\n            return {...state, ...action.cards, cardQuestion: state.cardQuestion, cardAnswer: state.cardAnswer}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const setGradeAC = (value: number, id: string) => (({type: \"cards/SET_GRADE\", value, id} as const))\r\nexport const setQuestionAC = (question: string) => ({type: \"cards/SET_QUESTION\", payload: {question}} as const)\r\nexport const setAnswerAC = (answer: string) => ({type: \"cards/SET_ANSWER\", payload: {answer}} as const)\r\nexport const setAllCardsAC = (cards: ResponseType) => ({type: \"cards/SET_ALL_CARDS\", cards} as const)\r\nexport const setCardAnswerAC = (cardAnswer: string) => ({type: \"cards/SET_CARD_ANSWER\", payload: {cardAnswer}} as const)\r\nexport const setCardQuestionAC = (cardQuestion: string) => ({\r\n    type: \"cards/SET_CARD_QUESTION\",\r\n    payload: {cardQuestion}\r\n} as const)\r\nexport const setPageCountAC = (pageCount: number) => ({type: \"cards/SET_PAGE_COUNT\", payload: {pageCount}} as const)\r\nexport const setMinCardsCountAC = (min: number) => ({type: \"cards/SET_MIN_CARDS_COUNT\", payload: {min}} as const)\r\nexport const setMaxCardsCountAC = (max: number) => ({type: \"cards/SET_MAX_CARDS_COUNT\", payload: {max}} as const)\r\nexport const setSortCardsAC = (sortCards: string) => ({type: \"cards/SET_SORT_CARDS\", payload: {sortCards}} as const)\r\nexport const setPageAC = (page: number) => ({type: \"cards/SET_PAGE\", payload: {page}} as const)\r\nexport const deleteAllCardsAC = () => ({\r\n    type: \"cards/DELETE_ALL_CARDS\",\r\n    payload: {cards: [] as Array<CardsType>}\r\n} as const)\r\n\r\nexport const setCardsPack_idAC = (params: string) => ({\r\n    type: \"cards/SET_CARDS_PACK_ID\",\r\n    payload: {cardsPack_id: params}\r\n} as const)\r\n\r\n// Thunk\r\n\r\nexport const getAllCardsTC = (id: string): AppThunk =>\r\n    async (dispatch, getState) => {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        let {cardAnswer, cardQuestion, pageCount, cardsPack_id, min, max, sortCards, page} = getState().cards\r\n        await cardsApi.getCards(cardQuestion, cardAnswer, pageCount, id, min, max, sortCards, page)\r\n            .then(res => {\r\n                //@ts-ignore\r\n                dispatch(setAllCardsAC(res.data))\r\n                dispatch(setStatusAC(\"succeeded\"))\r\n            }).catch(err => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : (err.message + 'some message from backend')\r\n                dispatch(setAppErrorAC(error))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            })\r\n    }\r\n\r\nexport const createNewCardTC = (cardsPack_id: string, question: string, answer: string, grade: number, shots: number): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        await cardsApi.postCard({cardsPack_id, question, answer, grade, shots})\r\n            .then(res => {\r\n                dispatch(setStatusAC(\"succeeded\"))\r\n            }).catch(err => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : (err.message + 'some message from backend')\r\n                dispatch(setAppErrorAC(error))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            })\r\n        dispatch(getAllCardsTC(cardsPack_id))\r\n    }\r\n\r\nexport const deleteCardTC = (id: string, cardsPack_id: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        }).catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\nexport const updateCardTC = (cardsPack_id: string, _id: string, question: string, answer: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.updateCard({_id, question, answer})\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\nexport const gradeCardTC = (grade: number, card_id: string, cardsPack_id: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.gradeCard(grade, card_id)\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\n// Types\r\ntype ActionType =\r\n    ReturnType<typeof setAllCardsAC> |\r\n    ReturnType<typeof setGradeAC> |\r\n    ReturnType<typeof setStatusAC> |\r\n    ReturnType<typeof setAppErrorAC> |\r\n    ReturnType<typeof setCardAnswerAC> |\r\n    ReturnType<typeof setCardQuestionAC> |\r\n    ReturnType<typeof setPageCountAC> |\r\n    ReturnType<typeof setMinCardsCountAC> |\r\n    ReturnType<typeof setMaxCardsCountAC> |\r\n    ReturnType<typeof setSortCardsAC> |\r\n    ReturnType<typeof setPageAC> |\r\n    ReturnType<typeof setCardsPack_idAC> |\r\n    ReturnType<typeof setQuestionAC> |\r\n    ReturnType<typeof setAnswerAC> |\r\n    ReturnType<typeof deleteAllCardsAC>\r\n\r\n","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\n\r\nimport style from './RadioButton.module.css';\r\n\r\n\r\n\r\nfunction RadioButton() {\r\n\r\n    return ( \r\n        <div className={style.radioButton}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel className={style.radioButtonTitle} component=\"legend\">Rate yourself:</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"gender\"\r\n                        defaultValue=\"female\"\r\n                        name=\"radio-buttons-group\"\r\n                        >\r\n                        <FormControlLabel value=\"Did not know\" control={<Radio />} label=\"Did not know\" />\r\n                        <FormControlLabel value=\"Forgot\" control={<Radio />} label=\"Forgot\" />\r\n                        <FormControlLabel value=\"A lot of thought\" control={<Radio />} label=\"A lot of thought\" />\r\n                        <FormControlLabel value=\"Сonfused\" control={<Radio />} label=\"Сonfused\" />\r\n                        <FormControlLabel value=\"Knew the answer\" control={<Radio />} label=\"Knew the answer\" />\r\n                    </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioButton;","import {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {getAllCardsTC} from \"../cards/cardsReducer\";\r\n\r\nimport style from './LearnPage.module.css';\r\nimport RadioButton from \"./radioButton/RadioButton\";\r\n\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const {cards} = useSelector((store: AppRootStateType) => store.cards);\r\n    const {id} = useParams();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (id) {\r\n            dispatch(getAllCardsTC(id));\r\n            setFirst(false);\r\n        }\r\n\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    console.log('render LearnPage');\r\n    return (\r\n        <div className={style.learnPage}>             \r\n            <div className={style.learnPageWrapper}>\r\n                <h2 className={style.learnPageTitle}>Learn <q>Pack Name</q></h2>\r\n\r\n            <div className={style.learnPageRow}>\r\n                <b className={style.learnPageRowText}>Question:   </b>\r\n                <q>{card.question}</q>\r\n            </div>\r\n            {/* <div className={style.learnPageRow}>\r\n                <b className={style.learnPageRowText}>Answer:   </b>\r\n                <q>{card.answer}</q>\r\n            </div> */}\r\n            \r\n            <div className={style.learnPageBtnBox} >\r\n                <button className={style.learnPageBtnCancel}>Cancel</button> \r\n                {/* <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button> */}\r\n                <button className={style.learnPageBtnShow} onClick={() => setIsChecked(true)}>Show answer</button>   \r\n                \r\n               \r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                <div className={style.learnPageRow}>\r\n                    <b className={style.learnPageRowText}>Answer:   </b>\r\n                    <q>{card.answer}</q>\r\n                </div> \r\n                         <RadioButton/>\r\n                    {/* {grades.map((g, i) => (\r\n                        <button className={style.learnPageRadioGroup} \r\n                        key={'grade-' + i} onClick={() => {\r\n                        }}>{g}\r\n                        </button>\r\n                    ))} */}\r\n                    <div className={style.learnPageBtnBox}>\r\n                        <button className={style.learnPageBtnCancel}>Cancel</button> \r\n                        {/* <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button> */}   \r\n                        <button className={style.learnPageBtnShow} onClick={onNext}>Next</button>\r\n                    </div>\r\n                </>\r\n\r\n                \r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;","import React, {useEffect, useState} from 'react';\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {PacksResponseType} from '../packs/packsPage-api';\r\nimport {Navigate, useParams} from 'react-router-dom';\r\nimport {Preloader} from '../../assets/Preloader/Preloader';\r\nimport s from '../packs/Packs.module.css';\r\nimport SearchProduct from '../searchProduct/SearchProduct';\r\nimport {SortButton} from '../sortButton/SortButton';\r\nimport {Button} from '@mui/material';\r\nimport {getAllCardsTC, setCardAnswerAC, setSortCardsAC} from './cardsReducer';\r\nimport TablePaginationDemo from '../pagination/Pagination';\r\nimport LearnPage from '../learnPage/LearnPage';\r\nimport Modal from '../../assets/modal/Modal';\r\n\r\nimport style from './Cards.module.css';\r\n\r\nexport const Cards = React.memo(() => {\r\n\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const [cardId, setCardId] = useState('')\r\n    const {\r\n        cards, page, pageCount, cardsTotalCount,\r\n        sortCards, cardAnswer, cardQuestion\r\n    } = useAppSelector(state => state.cards)\r\n    const data = useSelector<AppRootStateType, null | PacksResponseType>(state => state.packs.data)\r\n\r\n    const dispatch = useDispatch()\r\n    let {packId} = useParams<string>()\r\n\r\n    const [searchValue, setSearchValue] = useState('')\r\n\r\n    const onClickSortCardsQuestionUpHandler = () => dispatch(setSortCardsAC('1question'))\r\n    const onClickSortCardsQuestionDownHandler = () => dispatch(setSortCardsAC('0question'))\r\n\r\n    const onClickSortCardsAnswerUpHandler = () => dispatch(setSortCardsAC('1answer'))\r\n    const onClickSortCardsAnswerDownHandler = () => dispatch(setSortCardsAC('0answer'))\r\n\r\n    const onClickSortCardsGradeUpHandler = () => dispatch(setSortCardsAC('1grade'))\r\n    const onClickSortCardsGradeDownHandler = () => dispatch(setSortCardsAC('0grade'))\r\n\r\n    const onClickSortCardsUpdateUpHandler = () => dispatch(setSortCardsAC('1updated'))\r\n    const onClickSortCardsUpdateDownHandler = () => dispatch(setSortCardsAC('0updated'))\r\n\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            dispatch(setCardAnswerAC(searchValue))\r\n        }, 500)\r\n        return () => clearTimeout(timer)\r\n    }, [searchValue, dispatch])\r\n\r\n    useEffect(() => {\r\n        packId && dispatch(getAllCardsTC(packId))\r\n    }, [cardQuestion, cardAnswer, sortCards, page, pageCount, dispatch, packId])\r\n\r\n    // const createCardHandler = () => {\r\n    //     dispatch(createNewCardTC(cardsPack_id, cardQuestion, cardAnswer, grade, shots))\r\n    // }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <SearchProduct/>\r\n        <div className={s.header}>\r\n            <div className={s.sortBlock}>Question <span className={s.sort}> <SortButton\r\n                funOne={onClickSortCardsQuestionUpHandler} funTwo={onClickSortCardsQuestionDownHandler}/> </span>\r\n            </div>\r\n            <div className={s.sortBlock}>Answer <span className={s.sort}><SortButton\r\n                funOne={onClickSortCardsAnswerUpHandler} funTwo={onClickSortCardsAnswerDownHandler}/></span></div>\r\n            <div className={s.sortBlock}>Grade\r\n                <span className={s.sort}>\r\n                    <SortButton funOne={onClickSortCardsGradeUpHandler}\r\n                                funTwo={onClickSortCardsGradeDownHandler}/>\r\n                </span>\r\n            </div>\r\n            <div className={s.sortBlock}>Updated <span className={s.sort}><SortButton\r\n                funOne={onClickSortCardsUpdateUpHandler} funTwo={onClickSortCardsUpdateDownHandler}/></span>\r\n            </div>\r\n            <div>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                }}>Create card</Button>\r\n                <Button color={'success'} variant=\"contained\" onClick={() => setShow(true)}> Learn</Button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.table}>\r\n            {\r\n                cards.map((value, index) => (\r\n                    <div key={cards[index]._id} className={s.row}>\r\n                        <div>{cards[index].question}</div>\r\n                        <div>{cards[index].answer}</div>\r\n                        <div>{cards[index].grade}</div>\r\n                        <div>{cards[index].updated}</div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n        <TablePaginationDemo cardPacksTotalCount={data.cardPacksTotalCount} page={page} pageCount={pageCount}/>\r\n        <>\r\n            <Modal\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={600}\r\n                height={200}\r\n                // modalOnClick={() => setShow(false)}\r\n\r\n                show={show}\r\n            >\r\n                <LearnPage/>\r\n                <div className={style.cardLearnModalBtnBox}>\r\n                    {/* <button className={style.cardLearnModalBtnCancel} onClick={() => setShow(false)}>Cancel</button>\r\n                <button className={style.cardLearnModalBtnNext}>Next</button> */}\r\n                </div>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n\r\n    </div>\r\n})","import React from \"react\";\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\nimport {Packs} from \"../../components/packs/Packs\";\r\nimport {Cards} from \"../../components/cards/Cards\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n               \r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path='/packs' element={<Packs/>}/>\r\n                <Route path='/cards/:packId/*' element={<Cards/>}/>\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packsList.b2280a70.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.36eee9e3.svg\";","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport img1 from '../../assets/images/packsList.svg';\r\nimport img2 from '../../assets/images/profileIcon.svg';\r\nimport {logOutTC} from \"../../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const loginHandler = isLoggedIn\r\n        ? <span\r\n                   onClick={logOutHandler}\r\n                   className={styles.item}\r\n        >LogOut</span>\r\n        : <NavLink to='/login'\r\n                   className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n        >Login</NavLink>\r\n\r\n\r\n    return <nav className={styles.nav}>\r\n\r\n        <div className={styles.container}>\r\n            <div className={styles.navWrapper}>\r\n\r\n                <div>\r\n                    <h2 className={styles.navLogo}>It-incubator</h2>\r\n                </div>\r\n\r\n                <div className={styles.navTabs}>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/packs'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img1} alt=\"\"/>\r\n                            <span>Packs list</span>\r\n                            \r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/profile'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img2} alt=\"\"/>\r\n                            <span>Profile</span>\r\n                            \r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.navRight}>\r\n\r\n                    <div className={styles.navTabsItem1}>\r\n                        {loginHandler}\r\n                    </div>\r\n                    {/* <div className={styles.navTabsItem}>\r\n                        <NavLink to='/registration'\r\n                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >Registration</NavLink>\r\n                    </div> */}\r\n                    {/* <div className={styles.navTabsItem}>\r\n                        <NavLink to='/passwordRecovery'\r\n                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >PasswordRecovery</NavLink>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {Preloader} from \"../assets/Preloader/Preloader\";\r\n\r\nconst App = () => {\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    if (!initialised) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import {AnyAction, applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/packsReducer\";\r\nimport {cardsReducer} from \"../components/cards/cardsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n    packs:packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AnyAction>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2k3lE\",\"container\":\"Profile_container__2arr8\",\"profileWrapper\":\"Profile_profileWrapper__1SbwQ\",\"profileLeftBox\":\"Profile_profileLeftBox__2wC7R\",\"profileLeftTop\":\"Profile_profileLeftTop__2W404\",\"profileWrapImg\":\"Profile_profileWrapImg__3zGz_\",\"profileNameUser\":\"Profile_profileNameUser__bPAkn\",\"profileUserProf\":\"Profile_profileUserProf__1adsL\",\"profilePersonalBtn\":\"Profile_profilePersonalBtn__3PJp8\",\"profileRightBox\":\"Profile_profileRightBox__9ndwE\",\"profileRightBoxWrapper\":\"Profile_profileRightBoxWrapper__1N_x9\",\"profileRightBoxTitle\":\"Profile_profileRightBoxTitle__jKhVp\",\"profilePersonal\":\"Profile_profilePersonal__2Cq-n\",\"profilePersonalTitle\":\"Profile_profilePersonalTitle__3Yfeo\",\"profilePersonalPhotoWrapper\":\"Profile_profilePersonalPhotoWrapper__ExiPQ\",\"profilePersonalSelectPhoto\":\"Profile_profilePersonalSelectPhoto__WE7ss\",\"profileBtnBox\":\"Profile_profileBtnBox__3stTa\",\"profileBtnCancel\":\"Profile_profileBtnCancel__2NjtV\",\"passwordRecoveryButton\":\"Profile_passwordRecoveryButton__3xGQA\",\"profileBtnSave\":\"Profile_profileBtnSave__29A_X\",\"profilePersonalNameRow\":\"Profile_profilePersonalNameRow__3FDOQ\",\"profilePersonalRowTitle\":\"Profile_profilePersonalRowTitle__1LuIY\",\"profilePersonalEmailRow\":\"Profile_profilePersonalEmailRow__1tXYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"container\":\"Navbar_container__2nGDv\",\"navWrapper\":\"Navbar_navWrapper__2oHhB\",\"navLogo\":\"Navbar_navLogo__3gBOH\",\"navRight\":\"Navbar_navRight__2SOLo\",\"navTabs\":\"Navbar_navTabs__1Bdoi\",\"navTabsItem\":\"Navbar_navTabsItem__1a0YR\",\"navTabsImg\":\"Navbar_navTabsImg__wibr_\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2mqH2\",\"loginWrapper\":\"Login_loginWrapper__tXurm\",\"loginTitle\":\"Login_loginTitle__iv6EC\",\"loginSubtitle\":\"Login_loginSubtitle__3L4G1\",\"loginInput\":\"Login_loginInput__1Mk5v\",\"loginLabel\":\"Login_loginLabel__2eoJf\",\"loginCheckbox\":\"Login_loginCheckbox__tDjCu\",\"loginEmailWrap\":\"Login_loginEmailWrap__3kmfr\",\"loginPasswordWrap\":\"Login_loginPasswordWrap__3ovPw\",\"loginPasswordControl\":\"Login_loginPasswordControl__2R5LK\",\"loginLinkForgot\":\"Login_loginLinkForgot__3uymc\",\"loginBottom\":\"Login_loginBottom__1XGTA\",\"loginBtn\":\"Login_loginBtn__xEWcl\",\"animate\":\"Login_animate__ILZUN\",\"btn\":\"Login_btn__WTCLf\",\"loginText\":\"Login_loginText__2Ph6x\",\"loginLinkSignUp\":\"Login_loginLinkSignUp__2xTPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnPage\":\"LearnPage_learnPage__2bT7h\",\"learnPageWrapper\":\"LearnPage_learnPageWrapper__1r9uz\",\"learnPageTitle\":\"LearnPage_learnPageTitle__2ZnPo\",\"learnPageRow\":\"LearnPage_learnPageRow__1K5ix\",\"learnPageRowText\":\"LearnPage_learnPageRowText__D-tbI\",\"learnPageBtnBox\":\"LearnPage_learnPageBtnBox__dT_t2\",\"learnPageBtnCancel\":\"LearnPage_learnPageBtnCancel__fLBqa\",\"learnPageBtnShow\":\"LearnPage_learnPageBtnShow__2FL23\",\"learnPageRadioWrap\":\"LearnPage_learnPageRadioWrap__qWCkm\",\"learnPageRadioGroup\":\"LearnPage_learnPageRadioGroup__1OndH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"PasswordRecovery_error__34ns3\",\"passwordRecovery\":\"PasswordRecovery_passwordRecovery___9m5-\",\"passwordRecoveryWrapper\":\"PasswordRecovery_passwordRecoveryWrapper__AcShL\",\"passwordRecoveryTitle\":\"PasswordRecovery_passwordRecoveryTitle__1WDNK\",\"passwordRecoverySubTitle\":\"PasswordRecovery_passwordRecoverySubTitle__3fAZc\",\"passwordRecoveryEmail\":\"PasswordRecovery_passwordRecoveryEmail__3lwaL\",\"passwordRecoveryText\":\"PasswordRecovery_passwordRecoveryText__30svz\",\"passwordRecoveryBottom\":\"PasswordRecovery_passwordRecoveryBottom__2Q_cM\",\"passwordRecoveryButton\":\"PasswordRecovery_passwordRecoveryButton__3uTQ3\",\"passwordRecoveryTextButton\":\"PasswordRecovery_passwordRecoveryTextButton__3CRfk\",\"passwordRecoveryLink\":\"PasswordRecovery_passwordRecoveryLink__3TIXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPassword\":\"setPassword_setPassword__39uOB\",\"setPasswordWrapper\":\"setPassword_setPasswordWrapper__2Xf0k\",\"setPasswordTitle\":\"setPassword_setPasswordTitle__CCicB\",\"setPasswordSubTitle\":\"setPassword_setPasswordSubTitle__1YEEu\",\"passwordRecoveryPassword\":\"setPassword_passwordRecoveryPassword__1m-By\",\"setPasswordText\":\"setPassword_setPasswordText__1RyNH\",\"setPasswordBtn\":\"setPassword_setPasswordBtn__2rmwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__HbYQc\",\"checkEmailTitle\":\"CheckEmail_checkEmailTitle__1rpLL\",\"checkEmailWrapImg\":\"CheckEmail_checkEmailWrapImg__Zlva9\",\"checkEmailSubTitle\":\"CheckEmail_checkEmailSubTitle__7Mi1K\",\"checkEmailBottom\":\"CheckEmail_checkEmailBottom__lPZ6r\",\"checkEmailText\":\"CheckEmail_checkEmailText__22h-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};"],"sourceRoot":""}