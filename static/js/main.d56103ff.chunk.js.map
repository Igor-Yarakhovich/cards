{"version":3,"sources":["features/navbar/Navbar.module.css","components/page404/Page404.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css","components/packs/Packs.module.css","components/setPassword/setPassword.module.css","components/superComponents/superCheckbox/SuperCheckbox.module.css","features/main/Main.module.css","components/registration/Registration.module.css","components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","components/profile/editableSpan.tsx","components/login/Login.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/images/email.png","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","components/packs/packsPage-api.ts","components/packs/packsReducer.ts","components/packs/Packs.tsx","features/main/Main.tsx","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","passwordValidate","value","type","setStatus","setPasswordValidate","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","error","dispatch","useDispatch","useEffect","setTimeout","validatePassword","length","token","useParams","to","pathname","errorClass","styles","onSubmit","e","preventDefault","a","response","message","getPassword","id","onChange","target","color","className","authAPI","dat","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","meAPI","name","put","delete","initialised","setDataAC","initialiseTC","then","res","catch","finally","Preloader","src","spinner","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","placeholder","currentTarget","autoFocus","onBlur","onDoubleClick","Login","login","formik","useFormik","initialValues","email","rememberMe","validate","values","errors","test","resetForm","handleSubmit","getFieldProps","touched","style","disabled","Profile","profile","photo","avatar","startValueHandler","useCallback","setNameAC","updatedUser","newNameTC","alt","onClick","passwordRecoveryError","emailValidate","passwordRecoveryStatus","passwordRecoveryEmailValidate","PasswordRecovery","from","passwordRecovery","validateEmail","emailPhoto","console","log","recoveryPassword","registrationAPI","confirmPassword","isLoading","isRegistration","hidePassword","hideConfirmPassword","setEmail","payload","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","registrationBtnReg","registrationOverlay","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","htmlFor","SuperComponents","Page404","body404","container","h2404","h3404","p404","packAPI","get","packUserId","getPacksTC","Packs","packs","addCardsPacKHandler","header","table","cardPacks","map","index","row","cardsCount","created","updated","_id","Main","path","element","Navbar","nav","isActive","activeStyle","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","copyState","page404","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d56103ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"PasswordRecovery_email__2WOUN\",\"emailPhoto\":\"PasswordRecovery_emailPhoto__2rAXy\",\"error\":\"PasswordRecovery_error__34ns3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Packs_header__m8sGr\",\"table\":\"Packs_table__x_FNF\",\"row\":\"Packs_row__3bTRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"setPassword_error__1c7QR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n});\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle',\r\n    passwordValidate: ''\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n            case \"SET-PASSWORD/PASSWORD_VALIDATE\":\r\n            return {...state, passwordValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\nexport const setPasswordValidate = (value: string) => ({type: \"SET-PASSWORD/PASSWORD_VALIDATE\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n         await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n    passwordValidate: string\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setPasswordValidate>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {getPassword, setPasswordError, setPasswordValidate} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport styles from \"../setPassword/setPassword.module.css\";\r\n\r\ntype UseStateType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n    const passwordValidate = useSelector<AppRootStateType, string>(state => state.setPassword.passwordValidate);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordError(''))\r\n            }, 4000)\r\n        }\r\n        if (passwordValidate) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [passwordValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validatePassword()\r\n        if (isValidate) {\r\n            e.preventDefault();\r\n            dispatch(getPassword(data))\r\n        } else {\r\n            setData({...data, password: ''})\r\n        }\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        if (!data.password) {\r\n            dispatch(setPasswordValidate('Required password'))\r\n            return false\r\n        } else if (data.password.length > 15) {\r\n            dispatch(setPasswordValidate('Your password should be not longer then 15 characters'));\r\n            return false\r\n        } else {\r\n            dispatch(setPasswordValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const {token} = useParams<string>();\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || passwordValidate ? styles.error : ''\r\n\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <h2>Create new password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={data.password}\r\n                    onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                />\r\n                <button\r\n                    color='dark-blue'\r\n                    type={\"submit\"}>\r\n                    send\r\n                </button>\r\n                <p>Create new password and we will send you further instructions to email</p>\r\n                <div className={errorClass}>{error}</div>\r\n                <div className={errorClass}>{passwordValidate}</div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType, ResponseType} from \"./loginPage-api\";\r\nimport {setDataAC, SetDataType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    status: 'idle',\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n}\r\n","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n                dispatch(setAppErrorAC(null))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\n\r\nexport let Preloader = ( )=>{\r\n\r\n    return <div>\r\n        <img src={spinner}/>\r\n\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC} from \"./loginReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport {Profile} from \"../profile/Profile\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Profile/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <p>Sign in</p>\r\n            {error ? error : (status === 'loading') && <Preloader/>}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div>\r\n                    <input type={\"email\"} placeholder={'email'}\r\n                           {...formik.getFieldProps('email')}/>\r\n                </div>\r\n                {formik.touched.email &&\r\n                formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                <div>\r\n                    <input type={\"password\"} placeholder={'password'}\r\n                           {...formik.getFieldProps('password')}/>\r\n                </div>\r\n                {formik.touched.password &&\r\n                formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                <div>\r\n                    <input type={'checkbox'}/> Remember me\r\n                </div>\r\n                <NavLink to='/passwordRecovery'>Forgot password</NavLink>\r\n                <div>\r\n                    <button type={'submit'} disabled={status === 'loading'}>login</button>\r\n                </div>\r\n                <NavLink to='/registration'>Sign up</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {initialiseTC, logOutTC, newNameTC} from \"./profileReducer\";\r\n\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport {ErrorType, setAppErrorAC} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\nimport {Login} from \"../login/Login\";\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    useEffect(()=>{\r\n        if(error){\r\n            setTimeout(()=>{\r\n                setAppErrorAC(null)\r\n            },4000)\r\n        }\r\n    },[error])\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n    if (!initialised ) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Personal information</h1>\r\n            {error && initialised ? error : (status === 'loading') }\r\n            <div> {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}</div>\r\n            <div>email: {email}  </div>\r\n            <div>name: <EditableSpan value={name} onChange={startValueHandler}/></div>\r\n            <button onClick={logOutHandler}>LogOut</button>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle',\r\n    emailValidate: ''\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        case \"PASSWORD_RECOVERY/EMAIL_VALIDATE\":\r\n            return {...state, emailValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryEmailValidate = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/EMAIL_VALIDATE\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType = {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n    emailValidate: string\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n    | ReturnType<typeof passwordRecoveryEmailValidate>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/email.2c4865f1.png\";","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {\r\n    passwordRecoveryEmailValidate,\r\n    passwordRecoveryError,\r\n    recoveryPassword,\r\n    recoveryStatusType\r\n} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport email from './../../assets/images/email.png'\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport styles from './PasswordRecovery.module.css'\r\nimport {SetPassword} from \"../setPassword/setPassword\";\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n    const emailValidate = useSelector<AppRootStateType, string>(state => state.passwordRecovery.emailValidate)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryError(''))\r\n            }, 4000)\r\n        }\r\n        if (emailValidate) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryEmailValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [emailValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validateEmail()\r\n        if (isValidate) {\r\n            dispatch(recoveryPassword(data));\r\n            e.preventDefault();\r\n        } else {\r\n            setData({...data, email: ''})\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!data.email) {\r\n            dispatch(passwordRecoveryEmailValidate('Required email'))\r\n            return false\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n            dispatch(passwordRecoveryEmailValidate('Invalid email address'))\r\n            return false\r\n        } else {\r\n            dispatch(passwordRecoveryEmailValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || emailValidate ? styles.error : ''\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n\r\n        dispatch(passwordRecoveryError(''))\r\n        return <div className={styles.email}>\r\n            <h2>Check your email and follow the link</h2>\r\n            <img alt='' className={styles.emailPhoto} src={email}/>\r\n        </div>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <h2>Forgot your password?</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    id=\"email\"\r\n                    value={data.email}\r\n                    onChange={setDataHandler}\r\n                />\r\n                <button\r\n                    color='dark-blue'\r\n                    type={\"submit\"}\r\n                >\r\n                    send\r\n                </button>\r\n            </form>\r\n            <p>Enter your email address and we will send you further instructions</p>\r\n            <div className={errorClass}>{error}</div>\r\n            <div className={errorClass}>{emailValidate}</div>\r\n\r\n            <NavLink to={'/login'}>Try logging in</NavLink>\r\n\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials:true\r\n})\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}></button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}></button>\r\n                        {error}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={false} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={false} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\n\r\nexport const packAPI = {\r\n    getPack() {\r\n        return instance.get<PacksResponseType>('cards/pack')\r\n    },\r\n\r\n    createPack(newCard: CardsPackType) {\r\n        return instance.post<CardsPackType>('cards/pack',{newCard})\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n}\r\n\r\nexport type PacksResponseType = {\r\n    cardPacks: [\r\n        {\r\n            _id: string\r\n            user_id: string\r\n            name: string\r\n            path: string // папка\r\n            cardsCount: number\r\n            grade: number // средняя оценка карточек\r\n            shots: number // количество попыток\r\n            rating: number // лайки\r\n            type: string // ещё будет \"folder\" (папка)\r\n            created: string\r\n            updated: string\r\n            __v: number\r\n        },\r\n    ]\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}","import {Dispatch} from \"redux\";\r\nimport {CardsPackType, packAPI, PacksResponseType} from \"./packsPage-api\";\r\nimport {setStatusAC, SetStatusType} from \"../login/loginReducer\";\r\n\r\n\r\nconst initialState = {\r\n    data: null as null | PacksResponseType,\r\n    packUserId: ''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACK-USER-ID\":\r\n            return {...state, packUserId: action.packUserId}\r\n        case \"packs/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setPacksDataAC = (data: PacksResponseType) =>\r\n    ({type: 'packs/SET-DATA', data} as const)\r\nexport const setPackUserIdAC = (packUserId: string) =>\r\n    ({type: \"packs/SET-PACK-USER-ID\", packUserId} as const)\r\n\r\n// types\r\nexport type SetPacksDataType = ReturnType<typeof setPacksDataAC>\r\nexport type SetPackUserIdType = ReturnType<typeof setPackUserIdAC>\r\n\r\n\r\nexport type ActionType = SetPacksDataType\r\n    | SetStatusType\r\n    | SetPackUserIdType\r\n\r\n// thunks\r\nexport const getPacksTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.getPack()\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(setPacksDataAC(res.data))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPacksTC} from \"./packsReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {PacksResponseType} from \"./packsPage-api\";\r\n\r\nimport s from \"./Packs.module.css\"\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\n\r\nexport const Packs = React.memo(() => {\r\n\r\n    const data = useSelector<AppRootStateType, null | PacksResponseType>(state => state.packs.data)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [dispatch])\r\n    const addCardsPacKHandler = useCallback(() => {\r\n        dispatch(getPacksTC())\r\n\r\n    }, [dispatch])\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>}\r\n\r\n\r\n\r\n        return <div>\r\n            <input type=\"checkbox\" //checked={setUserId}\r\n                   onChange={addCardsPacKHandler} /> My packs\r\n            <div className={s.header}>\r\n                <div>name</div>\r\n                <div>cardsCount</div>\r\n                <div>created</div>\r\n                <div>updated</div>\r\n                <div>\r\n                    <button onClick={addCardsPacKHandler}>add</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.table}>\r\n                {\r\n                    data.cardPacks.map((value, index) => (\r\n                        <div key={data.cardPacks[index]._id} className={s.row}>\r\n                            <div>{data.cardPacks[index].name}</div>\r\n                            <div>{data.cardPacks[index].cardsCount}</div>\r\n                            <div>{data.cardPacks[index].created}</div>\r\n                            <div>{data.cardPacks[index].updated}</div>\r\n                            <div> <button >del</button>\r\n                                <button >update</button></div>\r\n\r\n                        </div>\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    })\r\n\r\n","import React from \"react\";\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\nimport {Packs} from \"../../components/packs/Packs\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n\r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path='/packs' element={<Packs/>}/>\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return <nav className={styles.nav}>\r\n        <div>\r\n            <NavLink to='/profile'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/login'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Login</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/registration'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Registration</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/passwordRecovery'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >PasswordRecovery</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/packs'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Packs</NavLink>\r\n        </div>\r\n    </nav>\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/packsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n    packs:packsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}