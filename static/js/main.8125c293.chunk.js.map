{"version":3,"sources":["components/superComponents/superCheckbox/SuperCheckbox.module.css","components/searchProduct/slider/Slider.module.css","components/learnPage/radioButton/RadioButton.module.css","assets/Preloader/Preloader.module.css","features/main/Main.module.css","components/searchProduct/SearchProduct.module.css","components/cards/Cards.module.css","components/packs/Packs.module.css","app/instance.ts","components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","components/profile/editableSpan.tsx","assets/modal/Modal.tsx","components/starRating/StarRating.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/images/email.png","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/login/Login.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","components/packs/packsPage-api.ts","components/packs/packsReducer.ts","components/searchProduct/textField/TextField.tsx","components/searchProduct/slider/Slider.tsx","components/searchProduct/SearchProduct.tsx","components/pagination/Pagination.tsx","components/sortButton/SortButton.tsx","components/packs/Packs.tsx","components/cards/cardsApi.ts","components/cards/cardsReducer.ts","components/learnPage/radioButton/RadioButton.tsx","components/learnPage/LearnPage.tsx","components/cards/Cards.tsx","features/main/Main.tsx","assets/images/packsList.svg","assets/images/profileIcon.svg","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx","components/profile/Profile.module.css","components/registration/Registration.module.css","features/navbar/Navbar.module.css","components/login/Login.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/learnPage/LearnPage.module.css","components/setPassword/setPassword.module.css","components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","passwordValidate","value","type","setStatus","setPasswordValidate","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","button","default","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","dispatch","useDispatch","useEffect","setTimeout","validatePassword","length","token","useParams","to","pathname","styles","style","setPasswordWrapper","setPasswordTitle","setPasswordSubTitle","onSubmit","preventDefault","a","response","message","getPassword","passwordRecoveryPassword","placeholder","id","target","setPasswordText","setPasswordBtn","color","authAPI","dat","hidePassword","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","setHidePasswordAC","payload","meAPI","name","put","delete","initialised","isInitialisedAC","setDataAC","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","autoFocus","onBlur","onDoubleClick","Modal","enableBackground","backgroundStyle","backgroundOnClick","width","height","modalStyle","modalOnClick","show","children","top","left","position","background","opacity","zIndex","onClick","display","flexFlow","alignItems","justifyContent","MyRating","styled","Rating","root","fontSaze","StarRating","starRating","readOnly","precision","defaultValue","size","Profile","email","profile","photo","avatar","login","setShow","inputRef","useRef","startValueHandler","useCallback","then","res","setNameAC","updatedUser","catch","finally","newNameTC","container","profileWrapper","profileLeftBox","profileLeftTop","profileWrapImg","profileAvatarImg","src","alt","profileNameUser","profileUserProf","profilePersonalBtn","profileLeftBottom","profileRightBox","profileRightBoxWrapper","profileRightBoxTitle","TextField","fullWidth","sx","m","margin","focused","profilePersonal","profilePersonalTitle","profilePersonalPhotoWrapper","hidden","ref","profilePersonalSelectPhoto","current","click","profilePersonalNameRow","profilePersonalRowTitle","profilePersonalEmailRow","profileBtnBox","profileBtnCancel","profileBtnSave","passwordRecoveryError","emailValidate","passwordRecoveryStatus","passwordRecoveryEmailValidate","Preloader","preloader","spinner","PasswordRecovery","from","passwordRecovery","validateEmail","test","emailPhoto","passwordRecoveryWrapper","passwordRecoveryTitle","passwordRecoverySubTitle","console","log","recoveryPassword","passwordRecoveryEmail","passwordRecoveryText","passwordRecoveryBottom","passwordRecoveryButton","passwordRecoveryTextButton","passwordRecoveryLink","registrationAPI","confirmPassword","isLoading","isRegistration","hideConfirmPassword","setEmail","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","disabled","registrationBtnReg","registrationOverlay","Login","formik","useFormik","initialValues","rememberMe","validate","values","errors","resetForm","loginWrapper","loginTitle","loginSubtitle","handleSubmit","loginEmailWrap","loginLabel","loginInput","getFieldProps","touched","loginPasswordWrap","loginPasswordControl","loginLinkForgot","href","loginBottom","loginBtn","loginText","loginLinkSignUp","SuperCheckbox","onChangeChecked","checkbox","checked","htmlFor","SuperComponents","Page404","body404","h2404","h3404","p404","packAPI","params","get","cardsPack","packId","packUserId","page","pageCount","sortPacks","setSortPacksCountAC","setPackUserIdAC","getMyPacksTC","userId","getState","packData","packs","user_id","err","FullWidthTextField","Box","label","valuetext","RangeSlider","setValue","sliderWrapper","sliderTitle","Slider","getAriaLabel","event","newValue","valueLabelDisplay","getAriaValueText","SearchProduct","search","Button","variant","TablePaginationDemo","TablePagination","component","count","cardPacksTotalCount","onPageChange","newPage","rowsPerPage","onRowsPerPageChange","parseInt","SortButton","main","fontSize","valueTwo","valueOne","Packs","_id","myUserId","setMyUserId","addMyPacksHandler","addNewPackHandler","newCardsPack","deleteMyPackHandler","cardPacks","deletePackUserIdAC","showAll","showMy","header","sortBlock","sort","table","map","index","row","cardsCount","created","user_name","replace","cardsApi","cardAnswer","cardQuestion","cardsPack_id","min","max","sortCards","cards","cardsTotalCount","getAllCardsTC","RadioButton","radioButton","FormControl","FormLabel","radioButtonTitle","RadioGroup","FormControlLabel","control","Radio","getCard","sum","reduce","acc","card","grade","rand","Math","random","i","newSum","LearnPage","isChecked","setIsChecked","first","setFirst","store","answer","question","shots","rating","more_id","updated","setCard","learnPage","learnPageWrapper","learnPageTitle","learnPageRow","learnPageRowText","learnPageBtnBox","learnPageBtnCancel","learnPageBtnShow","Cards","searchValue","timer","setCardAnswerAC","clearTimeout","cardLearnModalBtnBox","Main","path","element","Navbar","loginHandler","item","isActive","activeStyle","nav","navWrapper","navLogo","navTabs","navTabsItem","navTabsImg","img1","img2","navRight","navTabsItem1","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","copyState","page404","filter","cardPack","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8125c293.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__3d2Wa\",\"sliderTitle\":\"Slider_sliderTitle__233pS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioButtonTitle\":\"RadioButton_radioButtonTitle__eo03K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3Amvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchProduct_search__ijYTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardLearnModalBtnBox\":\"Cards_cardLearnModalBtnBox__2U9s6\",\"cardLearnModalBtnCancel\":\"Cards_cardLearnModalBtnCancel__1_ncp\",\"cardLearnModalBtnNext\":\"Cards_cardLearnModalBtnNext__RnYCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__3z8jD\",\"showAll\":\"Packs_showAll__snDbY\",\"showMy\":\"Packs_showMy__2D1Sc\",\"header\":\"Packs_header__m8sGr\",\"sort\":\"Packs_sort__1E8gU\",\"sortBlock\":\"Packs_sortBlock__3ldNQ\",\"table\":\"Packs_table__x_FNF\",\"row\":\"Packs_row__3bTRS\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})","import axios from \"axios\";\r\nimport {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle',\r\n    passwordValidate: ''\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n            case \"SET-PASSWORD/PASSWORD_VALIDATE\":\r\n            return {...state, passwordValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\nexport const setPasswordValidate = (value: string) => ({type: \"SET-PASSWORD/PASSWORD_VALIDATE\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n         await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n    passwordValidate: string\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setPasswordValidate>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './setPassword.module.css';\r\nimport styles from './setPassword.module.css';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {getPassword, setPasswordError, setPasswordValidate} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\ntype UseStateType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n    const passwordValidate = useSelector<AppRootStateType, string>(state => state.setPassword.passwordValidate);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordError(''))\r\n            }, 4000)\r\n        }\r\n        if (passwordValidate) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [passwordValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validatePassword()\r\n        if (isValidate) {\r\n            e.preventDefault();\r\n            dispatch(getPassword(data))\r\n        } else {\r\n            setData({...data, password: ''})\r\n        }\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        if (!data.password) {\r\n            dispatch(setPasswordValidate('Required password'))\r\n            return false\r\n        } else if (data.password.length > 15) {\r\n            dispatch(setPasswordValidate('Your password should be not longer then 15 characters'));\r\n            return false\r\n        } else {\r\n            dispatch(setPasswordValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const {token} = useParams<string>();\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || passwordValidate ? styles.error : ''\r\n\r\n    return (\r\n\r\n        <div className={style.setPassword}>\r\n            <div className={style.setPasswordWrapper}>\r\n                <h2 className={style.setPasswordTitle}> IT-incubator</h2>\r\n                <h3 className={style.setPasswordSubTitle}>Create new password</h3>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryPassword}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={data.password}\r\n                        onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                    />\r\n\r\n                    <p className={style.setPasswordText}>Create new password and we will send you further instructions\r\n                        to email</p>\r\n\r\n                    <SuperButton\r\n                        className={style.setPasswordBtn}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Create new password\r\n                    </SuperButton>\r\n\r\n                    <div>{error}</div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import {instance} from \"../../app/instance\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType} from \"./loginPage-api\";\r\nimport {isInitialisedAC, setDataAC, SetDataType, SetInitialisedType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    hidePassword: 'text',\r\n    isLoggedIn: false,\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setHidePasswordAC = (hidePassword: string) => ({\r\n    type: 'APP/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\n\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetHidePasswordActionType = ReturnType<typeof setHidePasswordAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType | SetInitialisedType|SetHidePasswordActionType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import {AxiosResponse} from 'axios'\r\nimport {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(setAppErrorAC(null))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import React, {CSSProperties} from 'react';\r\n\r\ninterface IModal {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n}\r\n\r\nconst Modal: React.FC<IModal> = (\r\n    {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return(\r\n        <>\r\n            {enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 20,\r\n\r\n                    ...backgroundStyle,\r\n                }}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    // background: 'lime',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import style from './StarRating.module.css';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Rating from '@mui/material/Rating';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n\r\n\r\nconst MyRating = styled(Rating)({\r\n    root: {\r\n        fontSaze: 12 ,\r\n    },\r\n    '& .MuiRating-iconFilled': {\r\n        color: '#21268F',\r\n    },\r\n    '& .MuiRating-iconEmpty': {\r\n        color: '#D7D8EF',\r\n    },\r\n});\r\n\r\nfunction StarRating() {\r\n\r\n    return ( \r\n        <div className={style.starRating}>\r\n            <MyRating \r\n                readOnly\r\n                precision={0.5}\r\n                defaultValue={3.5}\r\n                size=\"small\"\r\n                />\r\n                \r\n\r\n        </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default StarRating;","import React, {useCallback, useEffect, useState, useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {newNameTC} from \"./profileReducer\";\r\nimport {ErrorType, setAppErrorAC} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\n\r\nimport style from './Profile.module.css';\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\nimport Slider from '../searchProduct/slider/Slider';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Modal from \"../../assets/modal/Modal\";\r\nimport { TextField } from \"@mui/material\";\r\n// import CheckEmail from \"../checkEmail/CheckEmail\";\r\n// import { Pagination } from \"../pagination/Pagination\";\r\nimport StarRating from '../starRating/StarRating';\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(initialiseTC())\r\n    // }, [dispatch])\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n    const handlerUploadClick = () => {\r\n        if (inputRef.current) {\r\n            inputRef.current.click();\r\n        }\r\n    };\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                setAppErrorAC(null)\r\n            }, 4000)\r\n        }\r\n    }, [error])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n    return (\r\n        <section className={style.profile}>\r\n            <div className={style.container}>\r\n                <div className={style.profileWrapper}>\r\n                    <div className={style.profileLeftBox}>\r\n                        <div className={style.profileLeftTop}>\r\n                            <div className={style.profileWrapImg}>\r\n                                <img className={style.profileAvatarImg} src={avatar} alt=\"\"/>\r\n                            </div>\r\n                            <div className={style.profileNameUser}><EditableSpan value={name}\r\n                                onChange={startValueHandler}/></div>\r\n                            <div className={style.profileUserProf}>Front-end developer</div>\r\n                            \r\n                            <SuperButton\r\n                                className={style.profilePersonalBtn}\r\n                                color='white'\r\n                                type={\"submit\"}\r\n                                onClick={() => setShow(true)}\r\n                            >\r\n                                Edit profile\r\n                            </SuperButton>\r\n                        </div>\r\n                        <div className={style.profileLeftBottom}>\r\n                        {/*<Slider/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.profileRightBox}>\r\n                        <div className={style.profileRightBoxWrapper}>\r\n                            <h2 className={style.profileRightBoxTitle}>My packs list</h2>\r\n                           <TextField \r\n                                fullWidth sx={{ m: 5}} \r\n                                placeholder=\"Search...\"\r\n                                style={{margin:0}}\r\n                                focused size=\"small\"/>\r\n                            Таблица\r\n                            Pagination\r\n                            <StarRating/>\r\n                            {/* <CheckEmail/> */}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <>\r\n                <Modal\r\n                    enableBackground={true}\r\n                    backgroundOnClick={() => setShow(false)}\r\n                    width={600}\r\n                    height={200}\r\n                    show={show}\r\n                >\r\n                    <section className={style.profilePersonal}>\r\n                        <h2 className={style.profilePersonalTitle}>Personal information</h2>\r\n\r\n                        {error && initialised ? error : (status === 'loading')}\r\n\r\n                        <div className={style.profilePersonalPhotoWrapper}>\r\n                            {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}\r\n                        </div>\r\n                        \r\n                        <input type=\"file\" hidden={true} ref={inputRef} /> \r\n                        <button className={style.profilePersonalSelectPhoto} onClick={handlerUploadClick}></button>\r\n\r\n                        <div className={style.profilePersonalNameRow}>\r\n                           <span className={style.profilePersonalRowTitle}>Nickname:</span> <br/>\r\n                           <EditableSpan value={name} onChange={startValueHandler}/>\r\n                        </div>\r\n                        <div className={style.profilePersonalEmailRow}>\r\n                            <span className={style.profilePersonalRowTitle}>Email:</span><br/>\r\n                            {email}\r\n                        </div>\r\n                            \r\n                        <div className={style.profileBtnBox}>\r\n                            <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button>\r\n                            <button className={style.profileBtnSave} >Save</button>\r\n                        </div>\r\n                    </section>\r\n                </Modal>\r\n            </>\r\n\r\n        </section>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle',\r\n    emailValidate: ''\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        case \"PASSWORD_RECOVERY/EMAIL_VALIDATE\":\r\n            return {...state, emailValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryEmailValidate = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/EMAIL_VALIDATE\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType = {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n    emailValidate: string\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n    | ReturnType<typeof passwordRecoveryEmailValidate>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/email.2c4865f1.png\";","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\nimport styles from './Preloader.module.css'\r\n\r\nexport let Preloader = () => {\r\n\r\n    return <div className={styles.preloader}>\r\n        <img alt='' src={spinner}/>\r\n    </div>\r\n}","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './PasswordRecovery.module.css';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {\r\n    passwordRecoveryEmailValidate,\r\n    passwordRecoveryError,\r\n    recoveryPassword,\r\n    recoveryStatusType\r\n} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport email from './../../assets/images/email.png'\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n    const emailValidate = useSelector<AppRootStateType, string>(state => state.passwordRecovery.emailValidate)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryError(''))\r\n            }, 4000)\r\n        }\r\n        if (emailValidate) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryEmailValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [emailValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validateEmail()\r\n        if (isValidate) {\r\n            dispatch(recoveryPassword(data));\r\n            e.preventDefault();\r\n        } else {\r\n            setData({...data, email: ''})\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!data.email) {\r\n            dispatch(passwordRecoveryEmailValidate('Required email'))\r\n            return false\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n            dispatch(passwordRecoveryEmailValidate('Invalid email address'))\r\n            return false\r\n        } else {\r\n            dispatch(passwordRecoveryEmailValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || emailValidate ? styles.error : ''\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n\r\n        dispatch(passwordRecoveryError(''))\r\n        return <div className={styles.email}>\r\n            <h2>Check your email and follow the link</h2>\r\n            <img alt='' className={styles.emailPhoto} src={email}/>\r\n        </div>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.passwordRecovery}>\r\n            <div className={style.passwordRecoveryWrapper}>\r\n                <h2 className={style.passwordRecoveryTitle}>IT-incubator</h2>\r\n                <h3 className={style.passwordRecoverySubTitle}>Forgot your password?</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryEmail}\r\n                        type=\"email\"\r\n\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={data.email}\r\n                        onChange={setDataHandler}/>\r\n                    <p className={style.passwordRecoveryText}>Enter your email address and we will send you further\r\n                        instructions</p>\r\n\r\n                </form>\r\n                <div className={style.passwordRecoveryBottom}>\r\n                    <SuperButton\r\n                        className={style.passwordRecoveryButton}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Send Instructions\r\n                    </SuperButton>\r\n                    <p className={style.passwordRecoveryTextButton}>Did you remember your password?</p>\r\n                    <div>{error}</div>\r\n                    <NavLink className={style.passwordRecoveryLink} to={'/login'}>Try logging in</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}> </button>\r\n                        <div style={{color: 'red'}}>{error}</div>\r\n                        {isLoading && <div>загрузка....</div>}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={isLoading} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={isLoading} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC, setHidePasswordAC} from './loginReducer';\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const hidePassword = useSelector<AppRootStateType, string>(state => state.login.hidePassword)\r\n    const dispatch = useDispatch()\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePasswordAC('text'))\r\n        else dispatch(setHidePasswordAC('password'))\r\n\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.loginWrapper}>\r\n                <h2 className={s.loginTitle}>It-incubator</h2>\r\n                <h3 className={s.loginSubtitle}>Sign In</h3>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.loginEmailWrap}>\r\n                        <label className={s.loginLabel}>Email</label>\r\n                        <input className={s.loginInput} type={\"email\"} placeholder={''}\r\n                        {...formik.getFieldProps('email')}/>\r\n                    </div>\r\n                    {formik.touched.email &&\r\n                    formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                    <div className={s.loginPasswordWrap}>\r\n                        <label className={s.loginLabel}>Password</label>\r\n                        <input className={s.loginInput} type={hidePassword} placeholder={''}\r\n                        {...formik.getFieldProps('password')}/>\r\n                        <button type={'button'} className={s.loginPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n\r\n                    </div>\r\n                    {formik.touched.password &&\r\n                    formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                    {/* <div className={s.loginCheckbox}>\r\n                        <input type={'checkbox'}/>\r\n                        <label>Remember me</label>\r\n                        \r\n                    </div> */}\r\n                    {error && error}\r\n                    {status === 'loading' && <Preloader/>}\r\n\r\n                    <a className={s.loginLinkForgot} href={\"#/passwordRecovery\"}>Forgot Password</a>\r\n\r\n                    <div className={s.loginBottom}>\r\n                        <button className={s.loginBtn} type={'submit'} disabled={status === 'loading'}>Login</button>\r\n\r\n                        <p className={s.loginText}>Don’t have an account?</p>\r\n                        <a className={s.loginLinkSignUp} href={'#/registration'}>Sign Up</a>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n// api\r\n\r\nexport const packAPI = {\r\n    getPack(params:ParamsType) {\r\n        return instance.get<PacksResponseType>('cards/pack', {params})\r\n    },\r\n    createPack() {\r\n        return instance.post<NewCardsPackType>('cards/pack', {cardsPack: {name: '7777'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<PacksResponseType>('cards/pack', {params: {id: packId}})\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n\r\n}\r\nexport type NewCardsPackType = {\r\n    newCardsPack: PackUserType\r\n    token: string,\r\n    tokenDeathTime: number\r\n}\r\nexport type PackUserType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    user_name:string\r\n}\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<PackUserType>,\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}\r\nexport type ParamsType={\r\n    page:number\r\n    pageCount:number\r\n    user_id:string\r\n    sortPacks:string\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {packAPI, PacksResponseType, PackUserType} from \"./packsPage-api\";\r\nimport {setStatusAC, SetStatusType} from \"../login/loginReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\n\r\nconst initialState = {\r\n    data: null as null | PacksResponseType,\r\n    packUserId:'',\r\n    page:0,\r\n    pageCount:10,\r\n    sortPacks:''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACK-USER-ID\":\r\n            return {...state, packUserId: action.packUserId}\r\n        case \"packs/SET-SORT-PACKS\":\r\n            return {...state, sortPacks: action.sortPacks}\r\n        case \"packs/SET-PAGE\":\r\n            return {...state, page: action.page}\r\n        case \"packs/SET-PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"packs/DELETE-PACK-USER-ID\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    cardPacks: state.data?.cardPacks.filter(cardPack => cardPack._id !== action.packId) as PackUserType[]\r\n                } as PacksResponseType\r\n            }\r\n        case \"packs/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setPacksDataAC = (data: PacksResponseType) =>\r\n    ({type: 'packs/SET-DATA', data} as const)\r\nexport const setPageAC = (page: number) =>\r\n    ({type: \"packs/SET-PAGE\", page} as const)\r\nexport const setPageCountAC = (pageCount: number) =>\r\n    ({type: \"packs/SET-PAGE-COUNT\", pageCount} as const)\r\nexport const setSortPacksCountAC = (sortPacks: string) =>\r\n    ({type: \"packs/SET-SORT-PACKS\", sortPacks} as const)\r\nexport const setPackUserIdAC = (packUserId: string) =>\r\n    ({type: \"packs/SET-PACK-USER-ID\", packUserId} as const)\r\n\r\nexport const deletePackUserIdAC = (packId: string) =>\r\n    ({type: \"packs/DELETE-PACK-USER-ID\", packId} as const)\r\n\r\n\r\n\r\n// types\r\nexport type SetPacksDataType = ReturnType<typeof setPacksDataAC>\r\nexport type SetPackUserIdType = ReturnType<typeof setPackUserIdAC>\r\nexport type DeletePackUserIdType = ReturnType<typeof deletePackUserIdAC>\r\n\r\nexport type ActionType = SetPacksDataType\r\n    | SetStatusType\r\n    | SetPackUserIdType\r\n    | DeletePackUserIdType\r\n    |ReturnType<typeof setPageAC>\r\n    |ReturnType<typeof setPageCountAC>\r\n    |ReturnType<typeof setSortPacksCountAC>\r\n\r\n// thunks\r\nexport const getMyPacksTC = (userId: string) => (dispatch: Dispatch,getState:() => AppRootStateType ) => {\r\nconst packData = getState().packs\r\nconst params ={page: packData.page + 1,\r\n    pageCount:packData.pageCount,\r\n    user_id:userId,\r\n    sortPacks:packData.sortPacks\r\n    }\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.getPack(params)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(setPacksDataAC(res.data))\r\n            dispatch(setPackUserIdAC(userId))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const addPacksTC = (): ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.createPack()\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(getMyPacksTC(res.data.newCardsPack.user_id))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const deleteMyPacksTC = (packId: string):ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.deletePack(packId)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(deletePackUserIdAC(packId))\r\n            dispatch(getMyPacksTC(''))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n\r\nexport default function FullWidthTextField() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n\r\n            }}\r\n        >\r\n            <TextField fullWidth sx={{ m: 5}}  label=\"Search\" placeholder=\"Product name\" focused size=\"small\"/>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport style from './Slider.module.css';\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const [value, setValue] = React.useState<number[]>([0, 100]);\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div className={style.sliderWrapper}>\r\n\r\n           <h3 className={style.sliderTitle}>Number of cards</h3>\r\n\r\n            <Box sx={{ width: 600}}>\r\n                <Slider\r\n                    color={'primary'}\r\n                getAriaLabel={() => 'Temperature range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                />\r\n            </Box>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport TextField from './textField/TextField';\r\nimport Slider from './slider/Slider';\r\nimport {Button} from '@mui/material';\r\nimport style from './SearchProduct.module.css';\r\n\r\nexport default function SearchProduct() {\r\n    return <div className={style.search}>\r\n        <TextField/>\r\n        <Slider/>\r\n\r\n            <Button  variant='outlined' size=\"large\" color={'primary'}>\r\n                Search\r\n            </Button>\r\n\r\n\r\n    </div>\r\n\r\n\r\n}\r\n","import * as React from 'react';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setPageAC, setPageCountAC} from '../packs/packsReducer';\r\n\r\ntype PageCountPropsType = {\r\n    cardPacksTotalCount: number,\r\n    page: number,\r\n    pageCount: number\r\n}\r\n\r\nexport default function TablePaginationDemo(props: PageCountPropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChangePage = (\r\n        event: React.MouseEvent<HTMLButtonElement> | null,\r\n        newPage: number,\r\n    ) => {\r\n        dispatch(setPageAC(newPage))\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        dispatch(setPageCountAC(parseInt(event.target.value, 10)))\r\n    };\r\n\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            count={props.cardPacksTotalCount}\r\n            page={props.page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={props.pageCount}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './SortButton.module.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setSortPacksCountAC} from '../packs/packsReducer';\r\n\r\ntype PropsSort = {\r\n    valueOne:string,\r\n    valueTwo:string\r\n}\r\n\r\nexport const SortButton = (props:PropsSort) => {\r\n    const dispatch = useDispatch()\r\n    const onClickSorUptHandler =()=>dispatch(setSortPacksCountAC(props.valueOne))\r\n    const onClickSorDowntHandler =()=>dispatch(setSortPacksCountAC(props.valueTwo))\r\n    return (\r\n        <div className={style.main}>\r\n            <span> <ArrowDropDownIcon color={'primary'} fontSize={'large'} onClick={onClickSorDowntHandler}/> </span>\r\n            <span> <ArrowDropUpIcon color={'primary'} fontSize={'large'} onClick={onClickSorUptHandler}/> </span>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {addPacksTC, deleteMyPacksTC, getMyPacksTC, setPackUserIdAC} from './packsReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {Preloader} from '../../assets/Preloader/Preloader';\r\nimport s from './Packs.module.css'\r\nimport SearchProduct from '../searchProduct/SearchProduct';\r\nimport TablePaginationDemo from '../pagination/Pagination';\r\nimport {Navigate, useNavigate} from 'react-router-dom'\r\nimport {SortButton} from '../sortButton/SortButton';\r\nimport {Button} from '@mui/material';\r\n\r\n\r\nexport const Packs = React.memo(() => {\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {data, page, pageCount, sortPacks} = useAppSelector(state => state.packs)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.profile.data._id)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const dispatch = useDispatch();\r\n    let navigate = useNavigate();\r\n\r\n    const [myUserId, setMyUserId] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (myUserId) {\r\n            dispatch(getMyPacksTC(''))\r\n        }\r\n    }, [dispatch, myUserId])\r\n\r\n    const addMyPacksHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyUserId(e.currentTarget.checked)\r\n        dispatch(getMyPacksTC(myUserId ? userId : ''))\r\n        dispatch(setPackUserIdAC(myUserId ? userId : ''));\r\n    }, [dispatch, setMyUserId, myUserId, userId])\r\n\r\n    const addNewPackHandler = useCallback(() => {\r\n        dispatch(addPacksTC())\r\n    }, [dispatch])\r\n\r\n    const deleteMyPackHandler = useCallback(() => {\r\n        if (data) {\r\n            dispatch(deleteMyPacksTC(data.cardPacks[0]._id))\r\n        }\r\n    }, [dispatch, data])\r\n\r\n    function handleClick(packId: string) {\r\n        navigate(`/cards/${packId}`, {replace: true});\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n    console.log(data.cardPacks)\r\n    return <div className={s.main}>\r\n        <SearchProduct/>\r\n\r\n        <div><input type=\"checkbox\" checked={myUserId} onChange={addMyPacksHandler}/> All packs / My packs\r\n            {myUserId ? <span className={s.showAll}>ALL PACKS</span> : <span className={s.showMy}>MY PACKS</span>}\r\n        </div>\r\n\r\n        <div className={s.header}>\r\n            <div className={s.sortBlock}>Name <span className={s.sort}> <SortButton valueOne={'1name'}\r\n                                                                                    valueTwo={'0name'}/> </span></div>\r\n            <div className={s.sortBlock}>Cards <span className={s.sort}> <SortButton valueOne={'1cardsCount'}\r\n                                                                                     valueTwo={'0cardsCount'}/> </span>\r\n            </div>\r\n            <div className={s.sortBlock}>Updated <span className={s.sort}><SortButton valueOne={'1updated'}\r\n                                                                                      valueTwo={'0updated'}/></span>\r\n            </div>\r\n            <div className={s.sortBlock}>Created by</div>\r\n            <div>\r\n                <Button variant=\"outlined\" onClick={addNewPackHandler}>Add pack </Button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.table}>\r\n            {\r\n                data.cardPacks.map((value, index) => (\r\n                    <div key={data.cardPacks[index]._id} className={s.row}>\r\n                        <div>{data.cardPacks[index].name}</div>\r\n                        <div>{data.cardPacks[index].cardsCount}</div>\r\n                        <div>{data.cardPacks[index].created}</div>\r\n                        <div>{data.cardPacks[index].user_name}</div>\r\n                        <div>\r\n                            <Button color={'success'} variant=\"contained\"\r\n                                    onClick={() => handleClick(data.cardPacks[index]._id)}\r\n                            > Cards</Button>\r\n\r\n                            {!myUserId ?\r\n                                <span>\r\n                                <Button variant=\"contained\"> Update</Button>\r\n                                <Button color={'error'} variant=\"contained\" onClick={deleteMyPackHandler}> del</Button>\r\n                            </span>\r\n                                : ''\r\n                            }\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n\r\n        <TablePaginationDemo cardPacksTotalCount={data.cardPacksTotalCount} page={page} pageCount={pageCount}/>\r\n    </div>\r\n})\r\n\r\n\r\n","import {instance} from \"../../app/instance\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\nexport const cardsApi = {\r\n    getCards(cardAnswer: string, cardQuestion: string,\r\n             pageCount: number, cardsPack_id: string, min: number, max: number, sortCards: string,\r\n             page: number) {\r\n        return instance.get<ResponseType>(`/cards/card/`,\r\n            {params: {cardAnswer, cardQuestion, pageCount, cardsPack_id, min, max, sortCards, page}})\r\n    },\r\n    postCard({cardsPack_id, answer, question, grade, shots}: CreateCardType) {\r\n        return instance.post<CardsType, AxiosResponse<ResponseType>>(`/cards/card`,\r\n            {card: {cardsPack_id, answer, question, grade, shots}})\r\n    },\r\n    deleteCard(_id: string) {\r\n        return instance.delete<CardsType, AxiosResponse<ResponseType>>(`/cards/card/?id=${_id}`)\r\n    },\r\n    updateCard({_id, question, answer}: UpdateCardType) {\r\n        return instance.put<CardsType, AxiosResponse<ResponseType>>(`/cards/card/`,\r\n            {card: {_id, question, answer}})\r\n    },\r\n\r\n    getParam(params: ParamsType) {\r\n        return instance.get(`cards/card/${params.cardsPack_id}`)\r\n    },\r\n\r\n    gradeCard(grade: number, card_id: string) {\r\n        return instance.put<AxiosResponse<GradeCardType>>('/cards/grade', {grade, card_id})\r\n    }\r\n}\r\nexport type GradeCardType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id:string\r\n    user_id:string\r\n    grade:number\r\n    shots:number\r\n}\r\nexport type CreateCardType = {\r\n    cardsPack_id: string\r\n    answer: string\r\n    question: string\r\n    grade: number\r\n    shots: number\r\n}\r\nexport type CardsType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\ntype UpdateCardType = {\r\n    _id: string\r\n    question: string\r\n    answer: string\r\n}\r\nexport type ResponseType = {\r\n    cards: CardsType[],\r\n    cardsTotalCount: number,\r\n    maxGrade: number,\r\n    mainGrade: number,\r\n    page: number,\r\n    pageCount: number,\r\n    packUserId: string,\r\n}\r\nexport type ParamsType = {\r\n    cardsPack_id: string\r\n}","import {setAppErrorAC, setStatusAC} from \"../login/loginReducer\";\r\nimport {cardsApi, CardsType} from \"./cardsApi\";\r\nimport {AppThunk} from \"../../app/store\";\r\n\r\n\r\nconst initialState = {\r\n    data: null,\r\n    packUserId: '',\r\n    page: 1,\r\n    pageCount: 10,\r\n    sortPacks: '',\r\n    cards: [] as Array<CardsType>,\r\n    min: 0,\r\n    max: 6,\r\n    id: \"\",\r\n    cardAnswer: \"\",\r\n    cardQuestion: \"\",\r\n    cardsPack_id: \"\",\r\n    sortCards: \"0update\",\r\n    cardsTotalCount: 15,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/SET_ANSWER\":\r\n        case \"cards/SET_QUESTION\":\r\n        case \"cards/SET_MAX_CARDS_COUNT\":\r\n        case \"cards/SET_MIN_CARDS_COUNT\":\r\n        case \"cards/SET_CARD_ANSWER\":\r\n        case \"cards/SET_CARD_QUESTION\":\r\n        case \"cards/SET_PAGE_COUNT\":\r\n        case \"cards/SET_PAGE\":\r\n        case \"cards/SET_CARDS_PACK_ID\":\r\n        case \"cards/SET_SORT_CARDS\":\r\n        case \"cards/DELETE_ALL_CARDS\": {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case \"cards/SET_ALL_CARDS\":{\r\n            //@ts-ignore\r\n            return {...state, ...action.cards, cardQuestion: state.cardQuestion, cardAnswer: state.cardAnswer}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// AC\r\nexport const setGradeAC = (value: number, id: string) => (({type: \"cards/SET_GRADE\", value, id} as const))\r\nexport const setQuestionAC = (question: string) => ({type: \"cards/SET_QUESTION\", payload: {question}} as const)\r\nexport const setAnswerAC = (answer: string) => ({type: \"cards/SET_ANSWER\", payload: {answer}} as const)\r\nexport const setAllCardsAC = (cards: ResponseType) => ({type: \"cards/SET_ALL_CARDS\", cards} as const)\r\nexport const setCardAnswerAC = (cardAnswer: string) => ({type: \"cards/SET_CARD_ANSWER\", payload: {cardAnswer}} as const)\r\nexport const setCardQuestionAC = (cardQuestion: string) => ({\r\n    type: \"cards/SET_CARD_QUESTION\",\r\n    payload: {cardQuestion}\r\n} as const)\r\nexport const setPageCountAC = (pageCount: number) => ({type: \"cards/SET_PAGE_COUNT\", payload: {pageCount}} as const)\r\nexport const setMinCardsCountAC = (min: number) => ({type: \"cards/SET_MIN_CARDS_COUNT\", payload: {min}} as const)\r\nexport const setMaxCardsCountAC = (max: number) => ({type: \"cards/SET_MAX_CARDS_COUNT\", payload: {max}} as const)\r\nexport const setSortCardsAC = (sortCards: string) => ({type: \"cards/SET_SORT_CARDS\", payload: {sortCards}} as const)\r\nexport const setPageAC = (page: number) => ({type: \"cards/SET_PAGE\", payload: {page}} as const)\r\nexport const deleteAllCardsAC = () => ({\r\n    type: \"cards/DELETE_ALL_CARDS\",\r\n    payload: {cards: [] as Array<CardsType>}\r\n} as const)\r\n\r\nexport const setCardsPack_idAC = (params: string) => ({\r\n    type: \"cards/SET_CARDS_PACK_ID\",\r\n    payload: {cardsPack_id: params}\r\n} as const)\r\n\r\n// Thunk\r\n\r\nexport const getAllCardsTC = (id: string): AppThunk =>\r\n    async (dispatch, getState) => {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        let {cardAnswer, cardQuestion, pageCount, cardsPack_id, min, max, sortCards, page} = getState().cards\r\n        await cardsApi.getCards(cardQuestion, cardAnswer, pageCount, id, min, max, sortCards, page)\r\n            .then(res => {\r\n                //@ts-ignore\r\n                dispatch(setAllCardsAC(res.data))\r\n                dispatch(setStatusAC(\"succeeded\"))\r\n            }).catch(err => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : (err.message + 'some message from backend')\r\n                dispatch(setAppErrorAC(error))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            })\r\n    }\r\n\r\nexport const createNewCardTC = (cardsPack_id: string, question: string, answer: string, grade: number, shots: number): AppThunk =>\r\n    async (dispatch) => {\r\n        dispatch(setStatusAC(\"loading\"))\r\n        await cardsApi.postCard({cardsPack_id, question, answer, grade, shots})\r\n            .then(res => {\r\n                dispatch(setStatusAC(\"succeeded\"))\r\n            }).catch(err => {\r\n                const error = err.response\r\n                    ? err.response.data.error\r\n                    : (err.message + 'some message from backend')\r\n                dispatch(setAppErrorAC(error))\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            })\r\n        dispatch(getAllCardsTC(cardsPack_id))\r\n    }\r\n\r\nexport const deleteCardTC = (id: string, cardsPack_id: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.deleteCard(id)\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        }).catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\nexport const updateCardTC = (cardsPack_id: string, _id: string, question: string, answer: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.updateCard({_id, question, answer})\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\nexport const gradeCardTC = (grade: number, card_id: string, cardsPack_id: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatusAC(\"loading\"))\r\n    await cardsApi.gradeCard(grade, card_id)\r\n        .then(res => {\r\n            dispatch(setStatusAC(\"succeeded\"))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + 'some message from backend')\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n    dispatch(getAllCardsTC(cardsPack_id))\r\n}\r\n\r\n// Types\r\ntype ActionType =\r\n    ReturnType<typeof setAllCardsAC> |\r\n    ReturnType<typeof setGradeAC> |\r\n    ReturnType<typeof setStatusAC> |\r\n    ReturnType<typeof setAppErrorAC> |\r\n    ReturnType<typeof setCardAnswerAC> |\r\n    ReturnType<typeof setCardQuestionAC> |\r\n    ReturnType<typeof setPageCountAC> |\r\n    ReturnType<typeof setMinCardsCountAC> |\r\n    ReturnType<typeof setMaxCardsCountAC> |\r\n    ReturnType<typeof setSortCardsAC> |\r\n    ReturnType<typeof setPageAC> |\r\n    ReturnType<typeof setCardsPack_idAC> |\r\n    ReturnType<typeof setQuestionAC> |\r\n    ReturnType<typeof setAnswerAC> |\r\n    ReturnType<typeof deleteAllCardsAC>\r\n\r\n","import * as React from 'react';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\n\r\nimport style from './RadioButton.module.css';\r\n\r\n\r\n\r\nfunction RadioButton() {\r\n\r\n    return ( \r\n        <div className={style.radioButton}>\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel className={style.radioButtonTitle} component=\"legend\">Rate yourself:</FormLabel>\r\n                    <RadioGroup\r\n                        aria-label=\"gender\"\r\n                        defaultValue=\"female\"\r\n                        name=\"radio-buttons-group\"\r\n                        >\r\n                        <FormControlLabel value=\"Did not know\" control={<Radio />} label=\"Did not know\" />\r\n                        <FormControlLabel value=\"Forgot\" control={<Radio />} label=\"Forgot\" />\r\n                        <FormControlLabel value=\"A lot of thought\" control={<Radio />} label=\"A lot of thought\" />\r\n                        <FormControlLabel value=\"Сonfused\" control={<Radio />} label=\"Сonfused\" />\r\n                        <FormControlLabel value=\"Knew the answer\" control={<Radio />} label=\"Knew the answer\" />\r\n                    </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RadioButton;","import {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {getAllCardsTC} from \"../cards/cardsReducer\";\r\n\r\nimport style from './LearnPage.module.css';\r\nimport RadioButton from \"./radioButton/RadioButton\";\r\n\r\nexport type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const {cards} = useSelector((store: AppRootStateType) => store.cards);\r\n    const {id} = useParams();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (id) {\r\n            dispatch(getAllCardsTC(id));\r\n            setFirst(false);\r\n        }\r\n\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    console.log('render LearnPage');\r\n    return (\r\n        <div className={style.learnPage}>             \r\n            <div className={style.learnPageWrapper}>\r\n                <h2 className={style.learnPageTitle}>Learn <q>Pack Name</q></h2>\r\n\r\n            <div className={style.learnPageRow}>\r\n                <b className={style.learnPageRowText}>Question:   </b>\r\n                <q>{card.question}</q>\r\n            </div>\r\n            {/* <div className={style.learnPageRow}>\r\n                <b className={style.learnPageRowText}>Answer:   </b>\r\n                <q>{card.answer}</q>\r\n            </div> */}\r\n            \r\n            <div className={style.learnPageBtnBox} >\r\n                <button className={style.learnPageBtnCancel}>Cancel</button> \r\n                {/* <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button> */}\r\n                <button className={style.learnPageBtnShow} onClick={() => setIsChecked(true)}>Show answer</button>   \r\n                \r\n               \r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                <div className={style.learnPageRow}>\r\n                    <b className={style.learnPageRowText}>Answer:   </b>\r\n                    <q>{card.answer}</q>\r\n                </div> \r\n                         <RadioButton/>\r\n                    {/* {grades.map((g, i) => (\r\n                        <button className={style.learnPageRadioGroup} \r\n                        key={'grade-' + i} onClick={() => {\r\n                        }}>{g}\r\n                        </button>\r\n                    ))} */}\r\n                    <div className={style.learnPageBtnBox}>\r\n                        <button className={style.learnPageBtnCancel}>Cancel</button> \r\n                        {/* <button className={style.profileBtnCancel} onClick={() => setShow(false)}>Cancel</button> */}   \r\n                        <button className={style.learnPageBtnShow} onClick={onNext}>Next</button>\r\n                    </div>\r\n                </>\r\n\r\n                \r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;","import React, {useEffect, useState} from \"react\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {PacksResponseType} from \"../packs/packsPage-api\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport s from \"../packs/Packs.module.css\";\r\nimport SearchProduct from \"../searchProduct/SearchProduct\";\r\nimport {SortButton} from \"../sortButton/SortButton\";\r\nimport {Button} from \"@mui/material\";\r\nimport {getAllCardsTC, setCardAnswerAC} from \"./cardsReducer\";\r\nimport TablePaginationDemo from \"../pagination/Pagination\";\r\nimport LearnPage from \"../learnPage/LearnPage\";\r\nimport Modal from \"../../assets/modal/Modal\";\r\n\r\nimport style from './Cards.module.css';\r\n\r\nexport const Cards = React.memo(() => {\r\n\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const [cardId, setCardId] = useState(\"\")\r\n    const {\r\n        cards, page, pageCount, cardsTotalCount,\r\n        sortCards, cardAnswer, cardQuestion\r\n    } = useAppSelector(state => state.cards)\r\n    const data = useSelector<AppRootStateType, null | PacksResponseType>(state => state.packs.data)\r\n\r\n    const dispatch = useDispatch()\r\n    let {packId} = useParams<string>()\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        let timer = setTimeout(() => {\r\n            dispatch(setCardAnswerAC(searchValue))\r\n        }, 500)\r\n        return () => clearTimeout(timer)\r\n    }, [searchValue, dispatch])\r\n\r\n    useEffect(() => {\r\n        packId && dispatch(getAllCardsTC(packId))\r\n    }, [cardQuestion, cardAnswer, sortCards, page, pageCount, dispatch, packId])\r\n\r\n    // const createCardHandler = () => {\r\n    //     dispatch(createNewCardTC(cardsPack_id, cardQuestion, cardAnswer, grade, shots))\r\n    // }\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <SearchProduct/>\r\n        <div className={s.header}>\r\n            <div className={s.sortBlock}>Question <span className={s.sort}> <SortButton valueOne={'1question'}\r\n                                                                                        valueTwo={'0question'}/> </span>\r\n            </div>\r\n            <div className={s.sortBlock}>Answer <span className={s.sort}><SortButton valueOne={'1answer'}\r\n                                                                                     valueTwo={'0answer'}/></span></div>\r\n            <div className={s.sortBlock}>Grade \r\n                <span className={s.sort}>\r\n                    <SortButton valueOne={'1grade'}\r\n                                valueTwo={'0grade'}/>\r\n                </span>\r\n            </div>\r\n            <div className={s.sortBlock}>Updated <span className={s.sort}><SortButton valueOne={'1updated'}\r\n                                                                                      valueTwo={'0updated'}/></span>\r\n            </div>\r\n            <div>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                }}>Create card</Button>\r\n                <Button color={'success'} variant=\"contained\" onClick={() => setShow(true)}> Learn</Button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.table}>\r\n            {\r\n                cards.map((value, index) => (\r\n                    <div key={cards[index]._id} className={s.row}>\r\n                        <div>{cards[index].question}</div>\r\n                        <div>{cards[index].answer}</div>\r\n                        <div>{cards[index].grade}</div>\r\n                        <div>{cards[index].updated}</div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n        <TablePaginationDemo cardPacksTotalCount={data.cardPacksTotalCount} page={page} pageCount={pageCount}/>\r\n        <>\r\n            <Modal\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={600}\r\n                height={200}\r\n                // modalOnClick={() => setShow(false)}\r\n\r\n                show={show}\r\n            >\r\n                <LearnPage/>\r\n            <div className={style.cardLearnModalBtnBox}>\r\n                {/* <button className={style.cardLearnModalBtnCancel} onClick={() => setShow(false)}>Cancel</button>\r\n                <button className={style.cardLearnModalBtnNext}>Next</button> */}\r\n            </div>\r\n                \r\n                \r\n            </Modal>\r\n        </>\r\n\r\n    </div>\r\n})","import React from \"react\";\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\nimport {Packs} from \"../../components/packs/Packs\";\r\nimport {Cards} from \"../../components/cards/Cards\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n               \r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path='/packs' element={<Packs/>}/>\r\n                <Route path='/cards/:packId/*' element={<Cards/>}/>\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packsList.b2280a70.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.36eee9e3.svg\";","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport img1 from '../../assets/images/packsList.svg';\r\nimport img2 from '../../assets/images/profileIcon.svg';\r\nimport {logOutTC} from \"../../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const loginHandler = isLoggedIn\r\n        ? <span\r\n                   onClick={logOutHandler}\r\n                   className={styles.item}\r\n        >LogOut</span>\r\n        : <NavLink to='/login'\r\n                   className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n        >Login</NavLink>\r\n\r\n\r\n    return <nav className={styles.nav}>\r\n\r\n        <div className={styles.container}>\r\n            <div className={styles.navWrapper}>\r\n\r\n                <div>\r\n                    <h2 className={styles.navLogo}>It-incubator</h2>\r\n                </div>\r\n\r\n                <div className={styles.navTabs}>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/packs'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img1} alt=\"\"/>\r\n                            <span>Packs list</span>\r\n                            \r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/profile'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img2} alt=\"\"/>\r\n                            <span>Profile</span>\r\n                            \r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.navRight}>\r\n\r\n                    <div className={styles.navTabsItem1}>\r\n                        {loginHandler}\r\n                    </div>\r\n                    {/* <div className={styles.navTabsItem}>\r\n                        <NavLink to='/registration'\r\n                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >Registration</NavLink>\r\n                    </div> */}\r\n                    {/* <div className={styles.navTabsItem}>\r\n                        <NavLink to='/passwordRecovery'\r\n                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >PasswordRecovery</NavLink>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {Preloader} from \"../assets/Preloader/Preloader\";\r\n\r\nconst App = () => {\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    if (!initialised) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import {AnyAction, applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/packsReducer\";\r\nimport {cardsReducer} from \"../components/cards/cardsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n    packs:packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AnyAction>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2k3lE\",\"container\":\"Profile_container__2arr8\",\"profileWrapper\":\"Profile_profileWrapper__1SbwQ\",\"profileLeftBox\":\"Profile_profileLeftBox__2wC7R\",\"profileLeftTop\":\"Profile_profileLeftTop__2W404\",\"profileWrapImg\":\"Profile_profileWrapImg__3zGz_\",\"profileNameUser\":\"Profile_profileNameUser__bPAkn\",\"profileUserProf\":\"Profile_profileUserProf__1adsL\",\"profilePersonalBtn\":\"Profile_profilePersonalBtn__3PJp8\",\"profileRightBox\":\"Profile_profileRightBox__9ndwE\",\"profileRightBoxWrapper\":\"Profile_profileRightBoxWrapper__1N_x9\",\"profileRightBoxTitle\":\"Profile_profileRightBoxTitle__jKhVp\",\"profilePersonal\":\"Profile_profilePersonal__2Cq-n\",\"profilePersonalTitle\":\"Profile_profilePersonalTitle__3Yfeo\",\"profilePersonalPhotoWrapper\":\"Profile_profilePersonalPhotoWrapper__ExiPQ\",\"profilePersonalSelectPhoto\":\"Profile_profilePersonalSelectPhoto__WE7ss\",\"profileBtnBox\":\"Profile_profileBtnBox__3stTa\",\"profileBtnCancel\":\"Profile_profileBtnCancel__2NjtV\",\"passwordRecoveryButton\":\"Profile_passwordRecoveryButton__3xGQA\",\"profileBtnSave\":\"Profile_profileBtnSave__29A_X\",\"profilePersonalNameRow\":\"Profile_profilePersonalNameRow__3FDOQ\",\"profilePersonalRowTitle\":\"Profile_profilePersonalRowTitle__1LuIY\",\"profilePersonalEmailRow\":\"Profile_profilePersonalEmailRow__1tXYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"container\":\"Navbar_container__2nGDv\",\"navWrapper\":\"Navbar_navWrapper__2oHhB\",\"navLogo\":\"Navbar_navLogo__3gBOH\",\"navRight\":\"Navbar_navRight__2SOLo\",\"navTabs\":\"Navbar_navTabs__1Bdoi\",\"navTabsItem\":\"Navbar_navTabsItem__1a0YR\",\"navTabsImg\":\"Navbar_navTabsImg__wibr_\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2mqH2\",\"loginWrapper\":\"Login_loginWrapper__tXurm\",\"loginTitle\":\"Login_loginTitle__iv6EC\",\"loginSubtitle\":\"Login_loginSubtitle__3L4G1\",\"loginInput\":\"Login_loginInput__1Mk5v\",\"loginLabel\":\"Login_loginLabel__2eoJf\",\"loginCheckbox\":\"Login_loginCheckbox__tDjCu\",\"loginEmailWrap\":\"Login_loginEmailWrap__3kmfr\",\"loginPasswordWrap\":\"Login_loginPasswordWrap__3ovPw\",\"loginPasswordControl\":\"Login_loginPasswordControl__2R5LK\",\"loginLinkForgot\":\"Login_loginLinkForgot__3uymc\",\"loginBottom\":\"Login_loginBottom__1XGTA\",\"loginBtn\":\"Login_loginBtn__xEWcl\",\"animate\":\"Login_animate__ILZUN\",\"btn\":\"Login_btn__WTCLf\",\"loginText\":\"Login_loginText__2Ph6x\",\"loginLinkSignUp\":\"Login_loginLinkSignUp__2xTPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery___9m5-\",\"passwordRecoveryWrapper\":\"PasswordRecovery_passwordRecoveryWrapper__AcShL\",\"passwordRecoveryTitle\":\"PasswordRecovery_passwordRecoveryTitle__1WDNK\",\"passwordRecoverySubTitle\":\"PasswordRecovery_passwordRecoverySubTitle__3fAZc\",\"passwordRecoveryEmail\":\"PasswordRecovery_passwordRecoveryEmail__3lwaL\",\"passwordRecoveryText\":\"PasswordRecovery_passwordRecoveryText__30svz\",\"passwordRecoveryBottom\":\"PasswordRecovery_passwordRecoveryBottom__2Q_cM\",\"passwordRecoveryButton\":\"PasswordRecovery_passwordRecoveryButton__3uTQ3\",\"passwordRecoveryTextButton\":\"PasswordRecovery_passwordRecoveryTextButton__3CRfk\",\"passwordRecoveryLink\":\"PasswordRecovery_passwordRecoveryLink__3TIXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"learnPage\":\"LearnPage_learnPage__2bT7h\",\"learnPageWrapper\":\"LearnPage_learnPageWrapper__1r9uz\",\"learnPageTitle\":\"LearnPage_learnPageTitle__2ZnPo\",\"learnPageRow\":\"LearnPage_learnPageRow__1K5ix\",\"learnPageRowText\":\"LearnPage_learnPageRowText__D-tbI\",\"learnPageBtnBox\":\"LearnPage_learnPageBtnBox__dT_t2\",\"learnPageBtnCancel\":\"LearnPage_learnPageBtnCancel__fLBqa\",\"learnPageBtnShow\":\"LearnPage_learnPageBtnShow__2FL23\",\"learnPageRadioWrap\":\"LearnPage_learnPageRadioWrap__qWCkm\",\"learnPageRadioGroup\":\"LearnPage_learnPageRadioGroup__1OndH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPassword\":\"setPassword_setPassword__39uOB\",\"setPasswordWrapper\":\"setPassword_setPasswordWrapper__2Xf0k\",\"setPasswordTitle\":\"setPassword_setPasswordTitle__CCicB\",\"setPasswordSubTitle\":\"setPassword_setPasswordSubTitle__1YEEu\",\"passwordRecoveryPassword\":\"setPassword_passwordRecoveryPassword__1m-By\",\"setPasswordText\":\"setPassword_setPasswordText__1RyNH\",\"setPasswordBtn\":\"setPassword_setPasswordBtn__2rmwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};"],"sourceRoot":""}