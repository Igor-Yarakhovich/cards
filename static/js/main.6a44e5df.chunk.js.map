{"version":3,"sources":["components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","components/profile/editableSpan.tsx","components/login/Login.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/images/email.png","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","components/packs/packsPage-api.ts","components/packs/packsReducer.ts","components/searchProduct/textField/TextField.tsx","components/searchProduct/slider/Slider.tsx","components/searchProduct/SearchProduct.tsx","components/packs/Packs.tsx","features/main/Main.tsx","assets/images/packsList.svg","assets/images/profileIcon.svg","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx","features/navbar/Navbar.module.css","components/registration/Registration.module.css","components/login/Login.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/setPassword/setPassword.module.css","components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/packs/Packs.module.css","components/superComponents/superButton/SuperButton.module.css","components/superComponents/superCheckbox/SuperCheckbox.module.css","features/main/Main.module.css","components/searchProduct/SearchProduct.module.css"],"names":["instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","passwordValidate","value","type","setStatus","setPasswordValidate","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","button","default","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","dispatch","useDispatch","useEffect","setTimeout","validatePassword","length","token","useParams","to","pathname","styles","style","setPasswordWrapper","setPasswordTitle","setPasswordSubTitle","onSubmit","preventDefault","a","response","message","getPassword","passwordRecoveryPassword","placeholder","id","target","setPasswordText","setPasswordBtn","color","authAPI","dat","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","meAPI","name","put","delete","initialised","isInitialisedAC","setDataAC","initialiseTC","then","res","catch","finally","Preloader","src","spinner","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","autoFocus","onBlur","onDoubleClick","Login","login","formik","useFormik","initialValues","email","rememberMe","validate","values","errors","test","resetForm","loginWrapper","loginTitle","loginSubtitle","handleSubmit","loginEmailWrap","loginLabel","loginInput","getFieldProps","touched","loginPasswordWrap","loginPasswordControl","loginLinkForgot","href","loginBottom","loginBtn","disabled","loginText","loginLinkSignUp","Profile","profile","photo","avatar","startValueHandler","useCallback","setNameAC","updatedUser","newNameTC","console","log","alt","onClick","passwordRecoveryError","emailValidate","passwordRecoveryStatus","passwordRecoveryEmailValidate","PasswordRecovery","from","passwordRecovery","validateEmail","emailPhoto","passwordRecoveryWrapper","passwordRecoveryTitle","passwordRecoverySubTitle","recoveryPassword","passwordRecoveryEmail","passwordRecoveryText","passwordRecoveryBottom","passwordRecoveryButton","passwordRecoveryTextButton","passwordRecoveryLink","registrationAPI","confirmPassword","isLoading","isRegistration","hidePassword","hideConfirmPassword","setEmail","payload","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","registrationBtnReg","registrationOverlay","SuperCheckbox","onChangeChecked","children","checkbox","checked","htmlFor","SuperComponents","Page404","body404","container","h2404","h3404","p404","packAPI","userId","get","params","user_id","cardsPack","packUserId","setPackUserIdAC","getMyPacksTC","FullWidthTextField","Box","sx","TextField","label","focused","size","valuetext","RangeSlider","setValue","width","paddingLeft","paddingRight","Slider","getAriaLabel","event","newValue","valueLabelDisplay","getAriaValueText","SearchProduct","search","Button","variant","Packs","packs","_id","myUserId","setMyUserId","addMyPacksHandler","addNewPackHandler","newCardsPack","main","header","table","cardPacks","map","index","row","cardsCount","created","updated","Main","path","element","Navbar","nav","navWrapper","navLogo","navTabs","navTabsItem","navTabsImg","img1","isActive","activeStyle","item","img2","navRight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","copyState","page404","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6a44e5df.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n});\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle',\r\n    passwordValidate: ''\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n            case \"SET-PASSWORD/PASSWORD_VALIDATE\":\r\n            return {...state, passwordValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\nexport const setPasswordValidate = (value: string) => ({type: \"SET-PASSWORD/PASSWORD_VALIDATE\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n         await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n    passwordValidate: string\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setPasswordValidate>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","\r\nimport React, {FormEvent, useState, useEffect} from \"react\";\r\nimport style from './setPassword.module.css';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {getPassword, setPasswordError, setPasswordValidate} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport styles from \"./setPassword.module.css\";\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\ntype UseStateType ={\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n    const passwordValidate = useSelector<AppRootStateType, string>(state => state.setPassword.passwordValidate);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordError(''))\r\n            }, 4000)\r\n        }\r\n        if (passwordValidate) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [passwordValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validatePassword()\r\n        if (isValidate) {\r\n            e.preventDefault();\r\n            dispatch(getPassword(data))\r\n        } else {\r\n            setData({...data, password: ''})\r\n        }\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        if (!data.password) {\r\n            dispatch(setPasswordValidate('Required password'))\r\n            return false\r\n        } else if (data.password.length > 15) {\r\n            dispatch(setPasswordValidate('Your password should be not longer then 15 characters'));\r\n            return false\r\n        } else {\r\n            dispatch(setPasswordValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const {token} = useParams<string>();\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || passwordValidate ? styles.error : ''\r\n\r\n    return (\r\n\r\n        <div className={style.setPassword}>            \r\n            <div className={style.setPasswordWrapper}>\r\n                <h2 className={style.setPasswordTitle}> IT-incubator</h2>\r\n                <h3 className={style.setPasswordSubTitle}>Create new password</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    \r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryPassword}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={data.password}\r\n                        onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                    />\r\n                     \r\n                    <p className={style.setPasswordText}>Create new password and we will send you further instructions to email</p>\r\n\r\n                    <SuperButton\r\n                        className={style.setPasswordBtn}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Create new password\r\n                    </SuperButton>\r\n                \r\n                <div>{error}</div>\r\n\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType, ResponseType} from \"./loginPage-api\";\r\nimport {isInitialisedAC, setDataAC, SetDataType, SetInitialisedType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    status: 'idle',\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType | SetInitialisedType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n                dispatch(setAppErrorAC(null))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\n\r\nexport let Preloader = ( )=>{\r\n\r\n    return <div>\r\n        <img src={spinner}/>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC} from \"./loginReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.loginWrapper}>\r\n                <h2 className={s.loginTitle}>It-incubator</h2>\r\n                <h3 className={s.loginSubtitle}>Sign In</h3>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.loginEmailWrap}>\r\n                        <label className={s.loginLabel}>Email</label>\r\n                        <input className={s.loginInput} type={\"email\"} placeholder={''}\r\n                               {...formik.getFieldProps('email')}/>\r\n                    </div>\r\n                    {formik.touched.email &&\r\n                    formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                    <div className={s.loginPasswordWrap}>\r\n                        <label className={s.loginLabel}>Password</label>\r\n                        <input className={s.loginInput} type={\"password\"} placeholder={''}\r\n                               {...formik.getFieldProps('password')}/>\r\n                        <button className={s.loginPasswordControl}></button>\r\n\r\n                    </div>\r\n                    {formik.touched.password &&\r\n                    formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                    {/* <div className={s.loginCheckbox}>\r\n                        <input type={'checkbox'}/>\r\n                        <label>Remember me</label>\r\n                        \r\n                    </div> */}\r\n                    {error && error}\r\n                    {status === 'loading' && <Preloader/>}\r\n\r\n                    <a className={s.loginLinkForgot} href={\"#/passwordRecovery\"}>Forgot Password</a>\r\n\r\n                    <div className={s.loginBottom}>\r\n                        <button className={s.loginBtn} type={'submit'} disabled={status === 'loading'}>Login</button>\r\n\r\n                        <p className={s.loginText}>Don’t have an account?</p>\r\n                        <a className={s.loginLinkSignUp} href={'#/registration'}>Sign Up</a>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {initialiseTC, logOutTC, newNameTC} from \"./profileReducer\";\r\n\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport {ErrorType, setAppErrorAC} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\nimport {Login} from \"../login/Login\";\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                setAppErrorAC(null)\r\n            }, 4000)\r\n        }\r\n    }, [error])\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n    console.log('initialised: ', initialised )\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login/>\r\n    }\r\n\r\n    if (!initialised) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Personal information</h1>\r\n            {error && initialised ? error : (status === 'loading')}\r\n            <div> {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}</div>\r\n            <div>email: {email}  </div>\r\n            <div>name: <EditableSpan value={name} onChange={startValueHandler}/></div>\r\n            <button onClick={logOutHandler}>LogOut</button>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle',\r\n    emailValidate: ''\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        case \"PASSWORD_RECOVERY/EMAIL_VALIDATE\":\r\n            return {...state, emailValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryEmailValidate = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/EMAIL_VALIDATE\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType = {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n    emailValidate: string\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n    | ReturnType<typeof passwordRecoveryEmailValidate>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/email.2c4865f1.png\";","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './PasswordRecovery.module.css';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {\r\n    passwordRecoveryEmailValidate,\r\n    passwordRecoveryError,\r\n    recoveryPassword,\r\n    recoveryStatusType\r\n} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport email from './../../assets/images/email.png'\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n    const emailValidate = useSelector<AppRootStateType, string>(state => state.passwordRecovery.emailValidate)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryError(''))\r\n            }, 4000)\r\n        }\r\n        if (emailValidate) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryEmailValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [emailValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validateEmail()\r\n        if (isValidate) {\r\n            dispatch(recoveryPassword(data));\r\n            e.preventDefault();\r\n        } else {\r\n            setData({...data, email: ''})\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!data.email) {\r\n            dispatch(passwordRecoveryEmailValidate('Required email'))\r\n            return false\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n            dispatch(passwordRecoveryEmailValidate('Invalid email address'))\r\n            return false\r\n        } else {\r\n            dispatch(passwordRecoveryEmailValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || emailValidate ? styles.error : ''\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n\r\n        dispatch(passwordRecoveryError(''))\r\n        return <div className={styles.email}>\r\n            <h2>Check your email and follow the link</h2>\r\n            <img alt='' className={styles.emailPhoto} src={email}/>\r\n        </div>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.passwordRecovery}>\r\n            <div className={style.passwordRecoveryWrapper}>\r\n                <h2 className={style.passwordRecoveryTitle}>IT-incubator</h2>\r\n                <h3 className={style.passwordRecoverySubTitle}>Forgot your password?</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryEmail}\r\n                        type=\"email\"\r\n\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={data.email}\r\n                        onChange={setDataHandler}/>\r\n                    <p className={style.passwordRecoveryText}>Enter your email address and we will send you further\r\n                        instructions</p>\r\n\r\n                </form>\r\n                <div className={style.passwordRecoveryBottom}>\r\n                    <SuperButton\r\n                        className={style.passwordRecoveryButton}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Send Instructions\r\n                    </SuperButton>\r\n                    <p className={style.passwordRecoveryTextButton}>Did you remember your password?</p>\r\n                    <div>{error}</div>\r\n                    <NavLink className={style.passwordRecoveryLink} to={'/login'}>Try logging in</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials:true\r\n})\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}> </button>\r\n                        <div style={{color: 'red'}}>{error}</div>\r\n                        {isLoading && <div>загрузка....</div>}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={isLoading} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={isLoading} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\n\r\nexport const packAPI = {\r\n    getPack(userId?: string) {\r\n        return instance.get<PacksResponseType>('cards/pack', {params: {user_id: (userId ? userId : '')}})\r\n    },\r\n\r\n\r\n    createPack() {\r\n        return instance.post<NewCardsPackType>('cards/pack', {cardsPack:{name:'4oKavoNaNa'}})\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n}\r\nexport type NewCardsPackType ={\r\n    newCardsPack: PackUserType\r\n    token: string,\r\n    tokenDeathTime: number\r\n}\r\nexport type PackUserType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<PackUserType>,\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}","import {Dispatch} from \"redux\";\r\nimport {packAPI, PacksResponseType} from \"./packsPage-api\";\r\nimport {setStatusAC, SetStatusType} from \"../login/loginReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\nconst initialState = {\r\n    data: null as null | PacksResponseType,\r\n    packUserId: ''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACK-USER-ID\":\r\n            return {...state, packUserId: action.packUserId}\r\n        case \"packs/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setPacksDataAC = (data: PacksResponseType) =>\r\n    ({type: 'packs/SET-DATA', data} as const)\r\nexport const setPackUserIdAC = (packUserId: string) =>\r\n    ({type: \"packs/SET-PACK-USER-ID\", packUserId} as const)\r\n\r\n// types\r\nexport type SetPacksDataType = ReturnType<typeof setPacksDataAC>\r\nexport type SetPackUserIdType = ReturnType<typeof setPackUserIdAC>\r\n\r\nexport type ActionType = SetPacksDataType\r\n    | SetStatusType\r\n    | SetPackUserIdType\r\n\r\n// thunks\r\nexport const getMyPacksTC = (userId: string) => (dispatch:Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.getPack(userId)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(setPacksDataAC(res.data))\r\n            dispatch(setPackUserIdAC(userId))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\nexport const addPacksTC = ():  ThunkAction<void,AppRootStateType, unknown, any> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.createPack()\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(getMyPacksTC(res.data.newCardsPack.user_id))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function FullWidthTextField() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n\r\n            }}\r\n        >\r\n            <TextField label=\"Search\" placeholder=\"Product name\" focused size=\"small\"/>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const [value, setValue] = React.useState<number[]>([20, 37]);\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: 500, paddingLeft:3, paddingRight:3}}>\r\n            <Slider\r\n\r\n                getAriaLabel={() => 'Temperature range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport TextField from './textField/TextField';\r\nimport Slider from './slider/Slider';\r\nimport {Button} from '@mui/material';\r\nimport style from './SearchProduct.module.css';\r\n\r\nexport default function SearchProduct() {\r\n    return <div className={style.search}>\r\n        <TextField/>\r\n        <Slider/>\r\n        <Button variant=\"contained\" size=\"medium\">\r\n            Search\r\n        </Button>\r\n    </div>\r\n\r\n\r\n}\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPacksTC, getMyPacksTC, setPackUserIdAC} from \"./packsReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {PacksResponseType} from \"./packsPage-api\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport s from \"./Packs.module.css\"\r\nimport SearchProduct from \"../searchProduct/SearchProduct\";\r\nimport {Login} from \"../login/Login\";\r\n\r\n\r\nexport const Packs = React.memo(() => {\r\n\r\n    const data = useSelector<AppRootStateType, null | PacksResponseType>(state => state.packs.data)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.profile.data._id)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [myUserId, setMyUserId] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyPacksTC(''))\r\n    }, [dispatch])\r\n\r\n    const addMyPacksHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyUserId(e.currentTarget.checked)\r\n        dispatch(getMyPacksTC(myUserId ? \"\" : userId))\r\n        dispatch(setPackUserIdAC(myUserId ? \"\" : userId));\r\n    }, [dispatch, setMyUserId, myUserId, userId])\r\n\r\n    const addNewPackHandler = useCallback(() => {\r\n        dispatch(addPacksTC())\r\n    }, [dispatch])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <SearchProduct/>\r\n\r\n\r\n        return <div>\r\n        <input type=\"checkbox\" checked={myUserId}\r\n               onChange={addMyPacksHandler}/> My packs\r\n\r\n        <div className={s.header}>\r\n            <div>name</div>\r\n            <div>cardsCount</div>\r\n            <div>created</div>\r\n            <div>updated</div>\r\n            <div>\r\n\r\n                <button onClick={addNewPackHandler}>add</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.table}>\r\n            {\r\n                data.cardPacks.map((value, index) => (\r\n                    <div key={data.cardPacks[index]._id} className={s.row}>\r\n                        <div>{data.cardPacks[index].name}</div>\r\n                        <div>{data.cardPacks[index].cardsCount}</div>\r\n                        <div>{data.cardPacks[index].created}</div>\r\n                        <div>{data.cardPacks[index].updated}</div>\r\n\r\n                        <div>\r\n                            <button>del</button>\r\n                            <button>update</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\nimport {Packs} from \"../../components/packs/Packs\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n\r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path='/packs' element={<Packs/>}/>\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packsList.b2280a70.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.36eee9e3.svg\";","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport img1 from '../../assets/images/packsList.svg';\r\nimport img2 from '../../assets/images/profileIcon.svg';\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return <nav className={styles.nav}>\r\n\r\n                <div className={styles.container}>\r\n                    <div className={styles.navWrapper}>\r\n\r\n                        <div>\r\n                            <h2 className={styles.navLogo}>It-incubator</h2>\r\n                        </div>\r\n                        <div className={styles.navTabs}>\r\n                           \r\n                            <div className={styles.navTabsItem}>\r\n                                <img className={styles.navTabsImg} src={img1} alt=\"\" />\r\n                                <NavLink\r\n                                    to='/packs'\r\n                                    className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                                >Packs list</NavLink>\r\n                            </div>\r\n                           <div className={styles.navTabsItem}>\r\n                                <img className={styles.navTabsImg} src={img2} alt=\"\" />\r\n                                <NavLink\r\n                                        to='/profile'\r\n                                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                                    >Profile</NavLink>\r\n                           </div>\r\n                           \r\n                            \r\n\r\n\r\n                        </div>\r\n                        <div className={styles.navRight}>\r\n                            \r\n                            <div className={styles.navTabsItem}>\r\n                                <NavLink to='/login'\r\n                                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                                >Login</NavLink>\r\n                            </div>\r\n                            <div className={styles.navTabsItem}>\r\n                                <NavLink to='/registration'\r\n                                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                                >Registration</NavLink>\r\n                            </div>\r\n                            <div className={styles.navTabsItem}>\r\n                                <NavLink to='/passwordRecovery'\r\n                                        className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                                >PasswordRecovery</NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/packsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n    packs:packsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"container\":\"Navbar_container__2nGDv\",\"navWrapper\":\"Navbar_navWrapper__2oHhB\",\"navLogo\":\"Navbar_navLogo__3gBOH\",\"navRight\":\"Navbar_navRight__2SOLo\",\"navTabs\":\"Navbar_navTabs__1Bdoi\",\"navTabsItem\":\"Navbar_navTabsItem__1a0YR\",\"navTabsImg\":\"Navbar_navTabsImg__wibr_\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2mqH2\",\"loginWrapper\":\"Login_loginWrapper__tXurm\",\"loginTitle\":\"Login_loginTitle__iv6EC\",\"loginSubtitle\":\"Login_loginSubtitle__3L4G1\",\"loginInput\":\"Login_loginInput__1Mk5v\",\"loginLabel\":\"Login_loginLabel__2eoJf\",\"loginCheckbox\":\"Login_loginCheckbox__tDjCu\",\"loginEmailWrap\":\"Login_loginEmailWrap__3kmfr\",\"loginPasswordWrap\":\"Login_loginPasswordWrap__3ovPw\",\"loginPasswordControl\":\"Login_loginPasswordControl__2R5LK\",\"loginLinkForgot\":\"Login_loginLinkForgot__3uymc\",\"loginBottom\":\"Login_loginBottom__1XGTA\",\"loginBtn\":\"Login_loginBtn__xEWcl\",\"loginText\":\"Login_loginText__2Ph6x\",\"loginLinkSignUp\":\"Login_loginLinkSignUp__2xTPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery___9m5-\",\"passwordRecoveryWrapper\":\"PasswordRecovery_passwordRecoveryWrapper__AcShL\",\"passwordRecoveryTitle\":\"PasswordRecovery_passwordRecoveryTitle__1WDNK\",\"passwordRecoverySubTitle\":\"PasswordRecovery_passwordRecoverySubTitle__3fAZc\",\"passwordRecoveryEmail\":\"PasswordRecovery_passwordRecoveryEmail__3lwaL\",\"passwordRecoveryText\":\"PasswordRecovery_passwordRecoveryText__30svz\",\"passwordRecoveryBottom\":\"PasswordRecovery_passwordRecoveryBottom__2Q_cM\",\"passwordRecoveryButton\":\"PasswordRecovery_passwordRecoveryButton__3uTQ3\",\"passwordRecoveryTextButton\":\"PasswordRecovery_passwordRecoveryTextButton__3CRfk\",\"passwordRecoveryLink\":\"PasswordRecovery_passwordRecoveryLink__3TIXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPassword\":\"setPassword_setPassword__39uOB\",\"setPasswordWrapper\":\"setPassword_setPasswordWrapper__2Xf0k\",\"setPasswordTitle\":\"setPassword_setPasswordTitle__CCicB\",\"setPasswordSubTitle\":\"setPassword_setPasswordSubTitle__1YEEu\",\"passwordRecoveryPassword\":\"setPassword_passwordRecoveryPassword__1m-By\",\"setPasswordText\":\"setPassword_setPasswordText__1RyNH\",\"setPasswordBtn\":\"setPassword_setPasswordBtn__2rmwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__3z8jD\",\"header\":\"Packs_header__m8sGr\",\"table\":\"Packs_table__x_FNF\",\"row\":\"Packs_row__3bTRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchProduct_search__ijYTl\"};"],"sourceRoot":""}