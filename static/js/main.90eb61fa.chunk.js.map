{"version":3,"sources":["assets/Preloader/Preloader.module.css","features/main/Main.module.css","components/searchProduct/SearchProduct.module.css","app/instance.ts","components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","components/profile/editableSpan.tsx","components/searchProduct/slider/Slider.tsx","assets/modal/Modal.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/images/email.png","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/login/Login.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","components/packs/packsPage-api.ts","components/packs/packsReducer.ts","components/searchProduct/textField/TextField.tsx","components/searchProduct/SearchProduct.tsx","components/pagination/Pagination.tsx","components/sortButton/SortButton.tsx","components/packs/Packs.tsx","features/main/Main.tsx","assets/images/packsList.svg","assets/images/profileIcon.svg","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx","features/navbar/Navbar.module.css","components/registration/Registration.module.css","components/profile/Profile.module.css","components/login/Login.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/packs/Packs.module.css","components/setPassword/setPassword.module.css","components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css","components/searchProduct/slider/Slider.module.css","components/superComponents/superCheckbox/SuperCheckbox.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","passwordValidate","value","type","setStatus","setPasswordValidate","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","button","default","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","dispatch","useDispatch","useEffect","setTimeout","validatePassword","length","token","useParams","to","pathname","styles","style","setPasswordWrapper","setPasswordTitle","setPasswordSubTitle","onSubmit","preventDefault","a","response","message","getPassword","passwordRecoveryPassword","placeholder","id","target","setPasswordText","setPasswordBtn","color","authAPI","dat","hidePassword","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","setHidePasswordAC","payload","meAPI","name","put","delete","initialised","isInitialisedAC","setDataAC","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","autoFocus","onBlur","onDoubleClick","valuetext","RangeSlider","setValue","sliderWrapper","sliderTitle","Box","sx","width","paddingLeft","paddingRight","Slider","getAriaLabel","event","newValue","valueLabelDisplay","getAriaValueText","Modal","enableBackground","backgroundStyle","backgroundOnClick","height","modalStyle","modalOnClick","show","children","top","left","position","background","opacity","zIndex","onClick","display","flexFlow","alignItems","justifyContent","Profile","email","profile","photo","avatar","login","setShow","startValueHandler","useCallback","then","res","setNameAC","updatedUser","catch","finally","newNameTC","container","profileWrapper","profileLeftBox","profileLeftTop","profileWrapImg","profileAvatarImg","src","alt","profileNameUser","profileUserProf","profilePersonalBtn","profileLeftBottom","profileRightBox","action","profilePersonal","profilePersonalTitle","profileBtnBox","profileBtnCancel","profileBtnSave","passwordRecoveryError","emailValidate","passwordRecoveryStatus","passwordRecoveryEmailValidate","Preloader","preloader","spinner","PasswordRecovery","from","passwordRecovery","validateEmail","test","emailPhoto","passwordRecoveryWrapper","passwordRecoveryTitle","passwordRecoverySubTitle","console","log","recoveryPassword","passwordRecoveryEmail","passwordRecoveryText","passwordRecoveryBottom","passwordRecoveryButton","passwordRecoveryTextButton","passwordRecoveryLink","registrationAPI","confirmPassword","isLoading","isRegistration","hideConfirmPassword","setEmail","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","disabled","registrationBtnReg","registrationOverlay","Login","formik","useFormik","initialValues","rememberMe","validate","values","errors","resetForm","loginWrapper","loginTitle","loginSubtitle","handleSubmit","loginEmailWrap","loginLabel","loginInput","getFieldProps","touched","loginPasswordWrap","loginPasswordControl","loginLinkForgot","href","loginBottom","loginBtn","loginText","loginLinkSignUp","SuperCheckbox","onChangeChecked","checkbox","checked","htmlFor","SuperComponents","Page404","body404","h2404","h3404","p404","packAPI","userId","get","params","cardsPack","packId","packUserId","setPackUserIdAC","getMyPacksTC","err","FullWidthTextField","TextField","label","focused","size","SearchProduct","search","Button","variant","TablePaginationDemo","page","setPage","rowsPerPage","setRowsPerPage","TablePagination","component","count","onPageChange","newPage","onRowsPerPageChange","parseInt","SortButton","main","fontSize","Packs","packs","_id","myUserId","setMyUserId","addMyPacksHandler","addNewPackHandler","newCardsPack","user_id","deleteMyPackHandler","cardPacks","deletePackUserIdAC","header","sortBlock","sort","table","map","index","row","cardsCount","created","updated","Main","path","element","Navbar","loginHandler","item","isActive","activeStyle","nav","navWrapper","navLogo","navTabs","navTabsItem","navTabsImg","img1","img2","navRight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","copyState","page404","filter","cardPack","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90eb61fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3Amvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchProduct_search__ijYTl\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})","import axios from \"axios\";\r\nimport {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle',\r\n    passwordValidate: ''\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n            case \"SET-PASSWORD/PASSWORD_VALIDATE\":\r\n            return {...state, passwordValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\nexport const setPasswordValidate = (value: string) => ({type: \"SET-PASSWORD/PASSWORD_VALIDATE\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n         await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n    passwordValidate: string\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setPasswordValidate>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './setPassword.module.css';\r\nimport styles from './setPassword.module.css';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {getPassword, setPasswordError, setPasswordValidate} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\ntype UseStateType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n    const passwordValidate = useSelector<AppRootStateType, string>(state => state.setPassword.passwordValidate);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordError(''))\r\n            }, 4000)\r\n        }\r\n        if (passwordValidate) {\r\n            setTimeout(() => {\r\n                dispatch(setPasswordValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [passwordValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validatePassword()\r\n        if (isValidate) {\r\n            e.preventDefault();\r\n            dispatch(getPassword(data))\r\n        } else {\r\n            setData({...data, password: ''})\r\n        }\r\n    };\r\n\r\n    const validatePassword = () => {\r\n        if (!data.password) {\r\n            dispatch(setPasswordValidate('Required password'))\r\n            return false\r\n        } else if (data.password.length > 15) {\r\n            dispatch(setPasswordValidate('Your password should be not longer then 15 characters'));\r\n            return false\r\n        } else {\r\n            dispatch(setPasswordValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const {token} = useParams<string>();\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || passwordValidate ? styles.error : ''\r\n\r\n    return (\r\n\r\n        <div className={style.setPassword}>\r\n            <div className={style.setPasswordWrapper}>\r\n                <h2 className={style.setPasswordTitle}> IT-incubator</h2>\r\n                <h3 className={style.setPasswordSubTitle}>Create new password</h3>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryPassword}\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={data.password}\r\n                        onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                    />\r\n\r\n                    <p className={style.setPasswordText}>Create new password and we will send you further instructions\r\n                        to email</p>\r\n\r\n                    <SuperButton\r\n                        className={style.setPasswordBtn}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Create new password\r\n                    </SuperButton>\r\n\r\n                    <div>{error}</div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import {instance} from \"../../app/instance\";\r\nimport {AxiosResponse} from \"axios\";\r\n\r\n\r\n// api\r\n\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType} from \"./loginPage-api\";\r\nimport {isInitialisedAC, setDataAC, SetDataType, SetInitialisedType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded'\r\n\r\nconst initialState = {\r\n    hidePassword: 'text',\r\n    isLoggedIn: false,\r\n    status: 'loading' as RequestStatusType,\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setHidePasswordAC = (hidePassword: string) => ({\r\n    type: 'APP/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\n\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetHidePasswordActionType = ReturnType<typeof setHidePasswordAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType | SetInitialisedType|SetHidePasswordActionType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(()=>{\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import {AxiosResponse} from 'axios'\r\nimport {instance} from \"../../app/instance\";\r\n\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(setAppErrorAC(null))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(false))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\nimport style from './Slider.module.css';\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const [value, setValue] = React.useState<number[]>([20, 37]);\r\n\r\n    const handleChange = (event: Event, newValue: number | number[]) => {\r\n        setValue(newValue as number[]);\r\n    };\r\n\r\n    return (\r\n        <div className={style.sliderWrapper}>\r\n\r\n           <h3 className={style.sliderTitle}>Number of cards</h3>\r\n\r\n            <Box sx={{ width: 300, paddingLeft:1, paddingRight:3}}>\r\n                <Slider\r\n                getAriaLabel={() => 'Temperature range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                />\r\n            </Box>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React, {CSSProperties} from 'react';\r\n\r\ninterface IModal {\r\n    enableBackground?: boolean;\r\n    backgroundStyle?: CSSProperties;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalStyle?: CSSProperties;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n}\r\n\r\nconst Modal: React.FC<IModal> = (\r\n    {\r\n        enableBackground,\r\n        backgroundStyle,\r\n        backgroundOnClick = () => {},\r\n\r\n        width,\r\n        height,\r\n        modalStyle,\r\n        modalOnClick = () => {},\r\n\r\n        show,\r\n        children,\r\n    }\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return(\r\n        <>\r\n            {enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 20,\r\n\r\n                    ...backgroundStyle,\r\n                }}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'lime',\r\n                    zIndex: 21,\r\n\r\n                    ...modalStyle,\r\n                }}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {logOutTC, newNameTC} from \"./profileReducer\";\r\n\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport {ErrorType, setAppErrorAC} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\nimport {Login} from \"../login/Login\";\r\n\r\nimport style from './Profile.module.css';\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\nimport Slider from '../searchProduct/slider/Slider';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport Modal from \"../../assets/modal/Modal\";\r\n// import { Pagination } from \"../pagination/Pagination\";\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(initialiseTC())\r\n    // }, [dispatch])\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                setAppErrorAC(null)\r\n            }, 4000)\r\n        }\r\n    }, [error])\r\n\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to='/login'/>\r\n    }\r\n\r\n\r\n    return (\r\n        <section className={style.profile}>\r\n            <div className={style.container}>\r\n                <div className={style.profileWrapper}>\r\n                    <div className={style.profileLeftBox}>\r\n                        <div className={style.profileLeftTop}>\r\n                            <div className={style.profileWrapImg}>\r\n                                <img className={style.profileAvatarImg} src={avatar} alt=\"\"/>\r\n                            </div>\r\n                            <div className={style.profileNameUser}><EditableSpan value={name}\r\n                                                                                 onChange={startValueHandler}/></div>\r\n                            <div className={style.profileUserProf}>Front-end developer</div>\r\n                            <SuperButton\r\n                                className={style.profilePersonalBtn}\r\n                                color='white'\r\n                                type={\"submit\"}\r\n                                onClick={() => setShow(true)}\r\n                            >\r\n                                Edit profile\r\n                            </SuperButton>\r\n                        </div>\r\n                        <div className={style.profileLeftBottom}>\r\n                            <Slider/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.profileRightBox}>\r\n                        <h2>My packs list</h2>\r\n                        <form action=\"\">\r\n                            <input type=\"search\" name=\"\" id=\"\"/>\r\n                        </form>\r\n                        Таблица\r\n                        Pagination\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/*<section className={style.profilePersonal}>*/}\r\n            {/*    <h2 className={style.profilePersonalTitle}>Personal information</h2>*/}\r\n\r\n            {/*    {error && initialised ? error : (status === 'loading')}*/}\r\n\r\n            {/*    <div> {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}</div>*/}\r\n\r\n\r\n            {/*    <div>name: <EditableSpan value={name} onChange={startValueHandler}/></div>*/}\r\n            {/*    <div>email: {email}  </div>*/}\r\n\r\n            {/*    <div className={style.profileBtnBox}>*/}\r\n            {/*        <button className={style.profileBtnCancel}>Cancel</button>*/}\r\n            {/*        <button className={style.profileBtnSave}>Save</button>*/}\r\n            {/*    </div>*/}\r\n            {/*</section>*/}\r\n\r\n            <>\r\n                <Modal\r\n                    enableBackground={true}\r\n                    backgroundOnClick={() => setShow(false)}\r\n\r\n                    width={300}\r\n                    height={200}\r\n                    modalOnClick={() => setShow(false)}\r\n\r\n                    show={show}\r\n                >\r\n                    <section className={style.profilePersonal}>\r\n                        <h2 className={style.profilePersonalTitle}>Personal information</h2>\r\n\r\n                        {error && initialised ? error : (status === 'loading')}\r\n\r\n                        <div> {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}</div>\r\n\r\n\r\n                        <div>name: <EditableSpan value={name} onChange={startValueHandler}/></div>\r\n                        <div>email: {email}  </div>\r\n\r\n                        <div className={style.profileBtnBox}>\r\n                            <button className={style.profileBtnCancel}>Cancel</button>\r\n                            <button className={style.profileBtnSave}>Save</button>\r\n                        </div>\r\n                    </section>\r\n                    <button onClick={() => setShow(false)}>Close</button>\r\n                </Modal>\r\n            </>\r\n\r\n        </section>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle',\r\n    emailValidate: ''\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        case \"PASSWORD_RECOVERY/EMAIL_VALIDATE\":\r\n            return {...state, emailValidate: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\nexport const passwordRecoveryEmailValidate = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/EMAIL_VALIDATE\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType = {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n    emailValidate: string\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n    | ReturnType<typeof passwordRecoveryEmailValidate>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/email.2c4865f1.png\";","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\nimport styles from './Preloader.module.css'\r\n\r\nexport let Preloader = () => {\r\n\r\n    return <div className={styles.preloader}>\r\n        <img alt='' src={spinner}/>\r\n    </div>\r\n}","import React, {FormEvent, useEffect, useState} from \"react\";\r\nimport style from './PasswordRecovery.module.css';\r\nimport styles from './PasswordRecovery.module.css';\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {\r\n    passwordRecoveryEmailValidate,\r\n    passwordRecoveryError,\r\n    recoveryPassword,\r\n    recoveryStatusType\r\n} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport email from './../../assets/images/email.png'\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n    const emailValidate = useSelector<AppRootStateType, string>(state => state.passwordRecovery.emailValidate)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryError(''))\r\n            }, 4000)\r\n        }\r\n        if (emailValidate) {\r\n            setTimeout(() => {\r\n                dispatch(passwordRecoveryEmailValidate(''))\r\n            }, 4000)\r\n        }\r\n    }, [emailValidate, error, dispatch])\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        const isValidate = validateEmail()\r\n        if (isValidate) {\r\n            dispatch(recoveryPassword(data));\r\n            e.preventDefault();\r\n        } else {\r\n            setData({...data, email: ''})\r\n        }\r\n    };\r\n\r\n    const validateEmail = () => {\r\n        if (!data.email) {\r\n            dispatch(passwordRecoveryEmailValidate('Required email'))\r\n            return false\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(data.email)) {\r\n            dispatch(passwordRecoveryEmailValidate('Invalid email address'))\r\n            return false\r\n        } else {\r\n            dispatch(passwordRecoveryEmailValidate(''))\r\n            return true\r\n        }\r\n    }\r\n\r\n    const errorClass = error ? styles.error : '' || emailValidate ? styles.error : ''\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n\r\n        dispatch(passwordRecoveryError(''))\r\n        return <div className={styles.email}>\r\n            <h2>Check your email and follow the link</h2>\r\n            <img alt='' className={styles.emailPhoto} src={email}/>\r\n        </div>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.passwordRecovery}>\r\n            <div className={style.passwordRecoveryWrapper}>\r\n                <h2 className={style.passwordRecoveryTitle}>IT-incubator</h2>\r\n                <h3 className={style.passwordRecoverySubTitle}>Forgot your password?</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <SuperInputText\r\n                        className={style.passwordRecoveryEmail}\r\n                        type=\"email\"\r\n\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={data.email}\r\n                        onChange={setDataHandler}/>\r\n                    <p className={style.passwordRecoveryText}>Enter your email address and we will send you further\r\n                        instructions</p>\r\n\r\n                </form>\r\n                <div className={style.passwordRecoveryBottom}>\r\n                    <SuperButton\r\n                        className={style.passwordRecoveryButton}\r\n                        color='dark-blue'\r\n                        type={\"submit\"}>\r\n                        Send Instructions\r\n                    </SuperButton>\r\n                    <p className={style.passwordRecoveryTextButton}>Did you remember your password?</p>\r\n                    <div>{error}</div>\r\n                    <NavLink className={style.passwordRecoveryLink} to={'/login'}>Try logging in</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}> </button>\r\n                        <div style={{color: 'red'}}>{error}</div>\r\n                        {isLoading && <div>загрузка....</div>}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={isLoading} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={isLoading} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}> </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Login.module.css';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC, setHidePasswordAC} from './loginReducer';\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const hidePassword = useSelector<AppRootStateType, string>(state => state.login.hidePassword)\r\n    const dispatch = useDispatch()\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePasswordAC('text'))\r\n        else dispatch(setHidePasswordAC('password'))\r\n\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <div className={s.loginWrapper}>\r\n                <h2 className={s.loginTitle}>It-incubator</h2>\r\n                <h3 className={s.loginSubtitle}>Sign In</h3>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.loginEmailWrap}>\r\n                        <label className={s.loginLabel}>Email</label>\r\n                        <input className={s.loginInput} type={\"email\"} placeholder={''}\r\n                        {...formik.getFieldProps('email')}/>\r\n                    </div>\r\n                    {formik.touched.email &&\r\n                    formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                    <div className={s.loginPasswordWrap}>\r\n                        <label className={s.loginLabel}>Password</label>\r\n                        <input className={s.loginInput} type={hidePassword} placeholder={''}\r\n                        {...formik.getFieldProps('password')}/>\r\n                        <button type={'button'} className={s.loginPasswordControl} onClick={onClickHidePasswordHandler}> </button>\r\n\r\n                    </div>\r\n                    {formik.touched.password &&\r\n                    formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                    {/* <div className={s.loginCheckbox}>\r\n                        <input type={'checkbox'}/>\r\n                        <label>Remember me</label>\r\n                        \r\n                    </div> */}\r\n                    {error && error}\r\n                    {status === 'loading' && <Preloader/>}\r\n\r\n                    <a className={s.loginLinkForgot} href={\"#/passwordRecovery\"}>Forgot Password</a>\r\n\r\n                    <div className={s.loginBottom}>\r\n                        <button className={s.loginBtn} type={'submit'} disabled={status === 'loading'}>Login</button>\r\n\r\n                        <p className={s.loginText}>Don’t have an account?</p>\r\n                        <a className={s.loginLinkSignUp} href={'#/registration'}>Sign Up</a>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {instance} from \"../../app/instance\";\r\n\r\n// api\r\n\r\nexport const packAPI = {\r\n    getPack(userId: string) {\r\n        return instance.get<PacksResponseType>('cards/pack', {params: {userId}})\r\n    },\r\n    createPack() {\r\n        return instance.post<NewCardsPackType>('cards/pack', {cardsPack: {name: '4oKavoNaNa'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete<PacksResponseType>('cards/pack', {params: {id: packId}})\r\n    }\r\n}\r\n\r\nexport type CardsPackType = {\r\n    name?: string // если не отправить будет таким\r\n    path?: string // если не отправить будет такой\r\n    grade?: number // не обязателен\r\n    shots?: number // не обязателен\r\n    rating?: number // не обязателен\r\n    deckCover?: string // не обязателен\r\n    private?: boolean // если не отправить будет такой\r\n    type?: string // если не отправить будет таким\r\n}\r\nexport type NewCardsPackType = {\r\n    newCardsPack: PackUserType\r\n    token: string,\r\n    tokenDeathTime: number\r\n}\r\nexport type PackUserType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string // папка\r\n    cardsCount: number\r\n    grade: number // средняя оценка карточек\r\n    shots: number // количество попыток\r\n    rating: number // лайки\r\n    type: string // ещё будет \"folder\" (папка)\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\nexport type PacksResponseType = {\r\n    cardPacks: Array<PackUserType>,\r\n    cardPacksTotalCount: number // количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number // выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n}","import {Dispatch} from \"redux\";\r\nimport {packAPI, PacksResponseType, PackUserType} from \"./packsPage-api\";\r\nimport {setStatusAC, SetStatusType} from \"../login/loginReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {ThunkAction} from 'redux-thunk';\r\n\r\n\r\nconst initialState = {\r\n    data: null as null | PacksResponseType,\r\n    packUserId: ''\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACK-USER-ID\":\r\n            return {...state, packUserId: action.packUserId}\r\n        case \"packs/DELETE-PACK-USER-ID\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    cardPacks: state.data?.cardPacks.filter(cardPack => cardPack._id !== action.packId) as PackUserType[]\r\n                } as PacksResponseType\r\n            }\r\n        case \"packs/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\nexport const setPacksDataAC = (data: PacksResponseType) =>\r\n    ({type: 'packs/SET-DATA', data} as const)\r\n\r\nexport const setPackUserIdAC = (packUserId: string) =>\r\n    ({type: \"packs/SET-PACK-USER-ID\", packUserId} as const)\r\n\r\nexport const deletePackUserIdAC = (packId: string) =>\r\n    ({type: \"packs/DELETE-PACK-USER-ID\", packId} as const)\r\n\r\n// types\r\nexport type SetPacksDataType = ReturnType<typeof setPacksDataAC>\r\nexport type SetPackUserIdType = ReturnType<typeof setPackUserIdAC>\r\nexport type DeletePackUserIdType = ReturnType<typeof deletePackUserIdAC>\r\n\r\nexport type ActionType = SetPacksDataType\r\n    | SetStatusType\r\n    | SetPackUserIdType\r\n    | DeletePackUserIdType\r\n\r\n// thunks\r\nexport const getMyPacksTC = (userId: string) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.getPack(userId)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(setPacksDataAC(res.data))\r\n            dispatch(setPackUserIdAC(userId))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const addPacksTC = (): ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.createPack()\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(getMyPacksTC(res.data.newCardsPack.user_id))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n\r\nexport const deleteMyPacksTC = (packId: string):ThunkAction<void, AppRootStateType, unknown, ActionType> => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    packAPI.deletePack(packId)\r\n        .then(res => {\r\n            dispatch(setStatusAC('succeeded'))\r\n            dispatch(deletePackUserIdAC(packId))\r\n            dispatch(getMyPacksTC(''))\r\n        })\r\n        .catch(err => console.log(err))\r\n        .finally(() => {\r\n            dispatch(setStatusAC('idle'))\r\n        })\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function FullWidthTextField() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n\r\n\r\n            }}\r\n        >\r\n            <TextField  label=\"Search\" placeholder=\"Product name\" focused size=\"small\"/>\r\n        </Box>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport TextField from './textField/TextField';\r\nimport Slider from './slider/Slider';\r\nimport {Button} from '@mui/material';\r\nimport style from './SearchProduct.module.css';\r\n\r\nexport default function SearchProduct() {\r\n    return <div className={style.search}>\r\n        <TextField/>\r\n        <Slider/>\r\n        <Button variant=\"contained\" size=\"medium\">\r\n            Search\r\n        </Button>\r\n    </div>\r\n\r\n\r\n}\r\n","import * as React from 'react';\r\nimport TablePagination from '@mui/material/TablePagination';\r\n\r\nexport default function TablePaginationDemo() {\r\n    const [page, setPage] = React.useState(2);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (\r\n        event: React.MouseEvent<HTMLButtonElement> | null,\r\n        newPage: number,\r\n    ) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (\r\n        event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    ) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <TablePagination\r\n            component=\"div\"\r\n            count={100}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n\r\n\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './SortButton.module.css'\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\r\nexport const SortButton = () => {\r\n    return (\r\n        <div className={style.main}>\r\n            <span> <ArrowDropDownIcon color={'primary'} fontSize={'large'} /> </span>\r\n            <span> <ArrowDropUpIcon color={'primary'} fontSize={'large'}/> </span>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPacksTC, deleteMyPacksTC, getMyPacksTC, setPackUserIdAC} from './packsReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {PacksResponseType} from './packsPage-api';\r\nimport {Preloader} from '../../assets/Preloader/Preloader';\r\nimport s from './Packs.module.css'\r\nimport SearchProduct from '../searchProduct/SearchProduct';\r\nimport TablePaginationDemo from '../pagination/Pagination';\r\nimport {Navigate} from 'react-router-dom'\r\nimport {SortButton} from '../sortButton/SortButton';\r\nimport {Button} from '@mui/material';\r\n\r\n\r\nexport const Packs = React.memo(() => {\r\n\r\n    const data = useSelector<AppRootStateType, null | PacksResponseType>(state => state.packs.data)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.profile.data._id)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [myUserId, setMyUserId] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMyPacksTC(''))\r\n    }, [dispatch])\r\n\r\n    // const addCardsPacKHandler = useCallback(() => {\r\n    //     dispatch(getMyPacksTC(''))\r\n    // }, [dispatch])\r\n\r\n    const addMyPacksHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        setMyUserId(e.currentTarget.checked)\r\n        dispatch(getMyPacksTC(myUserId ? '' : userId))\r\n        dispatch(setPackUserIdAC(myUserId ? '' : userId));\r\n    }, [dispatch, setMyUserId, myUserId, userId])\r\n\r\n    const addNewPackHandler = useCallback(() => {\r\n        dispatch(addPacksTC())\r\n    }, [dispatch])\r\n\r\n    const deleteMyPackHandler = useCallback(() => {\r\n        if (data) {\r\n            dispatch(deleteMyPacksTC(data.cardPacks[0]._id))\r\n        }\r\n    }, [dispatch, data])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    if (!data) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div className={s.main}>\r\n        <SearchProduct/>\r\n        <div><input type=\"checkbox\"/> All packs</div>\r\n        <div><input type=\"checkbox\" onChange={addMyPacksHandler}/> My packs</div>\r\n        <div className={s.header}>\r\n            <div className={s.sortBlock}>Name <span className={s.sort}><SortButton/></span></div>\r\n            <div className={s.sortBlock}>Cards <span className={s.sort}><SortButton/></span></div>\r\n            <div className={s.sortBlock}>Updated <span className={s.sort}><SortButton/></span></div>\r\n            <div className={s.sortBlock}>Created by<span className={s.sort}><SortButton/></span></div>\r\n            <div>\r\n                <Button variant=\"contained\" onClick={addNewPackHandler}>Add pack</Button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className={s.table}>\r\n            {\r\n                data.cardPacks.map((value, index) => (\r\n                    <div key={data.cardPacks[index]._id} className={s.row}>\r\n                        <div>{data.cardPacks[index].name}</div>\r\n                        <div>{data.cardPacks[index].cardsCount}</div>\r\n                        <div>{data.cardPacks[index].created}</div>\r\n                        <div>{data.cardPacks[index].updated}</div>\r\n                        <div>\r\n                            <Button color={'success'} variant=\"contained\"> Learn</Button>\r\n                            <Button  variant=\"contained\"> Update</Button>\r\n                            <Button color={'error'} variant=\"contained\" onClick={deleteMyPackHandler}> del</Button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n        <TablePaginationDemo/>\r\n    </div>\r\n})\r\n\r\n\r\n","import React from \"react\";\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\nimport {Packs} from \"../../components/packs/Packs\";\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n\r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n                <Route path='/packs' element={<Packs/>}/>\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packsList.b2280a70.svg\";","export default __webpack_public_path__ + \"static/media/profileIcon.36eee9e3.svg\";","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport img1 from '../../assets/images/packsList.svg';\r\nimport img2 from '../../assets/images/profileIcon.svg';\r\nimport {logOutTC} from \"../../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const loginHandler = isLoggedIn\r\n        ? <span\r\n                   onClick={logOutHandler}\r\n                   className={styles.item}\r\n        >LogOut</span>\r\n        : <NavLink to='/login'\r\n                   className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n        >Login</NavLink>\r\n\r\n\r\n    return <nav className={styles.nav}>\r\n\r\n        <div className={styles.container}>\r\n            <div className={styles.navWrapper}>\r\n\r\n                <div>\r\n                    <h2 className={styles.navLogo}>It-incubator</h2>\r\n                </div>\r\n\r\n                <div className={styles.navTabs}>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/packs'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img1} alt=\"\"/>\r\n                            Packs list\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink\r\n                            to='/profile'\r\n                            className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}>\r\n                            <img className={styles.navTabsImg} src={img2} alt=\"\"/>\r\n                            Profile\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.navRight}>\r\n\r\n                    <div className={styles.navTabsItem}>\r\n                        {loginHandler}\r\n                    </div>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink to='/registration'\r\n                                 className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >Registration</NavLink>\r\n                    </div>\r\n                    <div className={styles.navTabsItem}>\r\n                        <NavLink to='/passwordRecovery'\r\n                                 className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n                        >PasswordRecovery</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {Preloader} from \"../assets/Preloader/Preloader\";\r\n\r\nconst App = () => {\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    if (!initialised) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\nimport {packsReducer} from \"../components/packs/packsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n    packs:packsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"container\":\"Navbar_container__2nGDv\",\"navWrapper\":\"Navbar_navWrapper__2oHhB\",\"navLogo\":\"Navbar_navLogo__3gBOH\",\"navRight\":\"Navbar_navRight__2SOLo\",\"navTabs\":\"Navbar_navTabs__1Bdoi\",\"navTabsItem\":\"Navbar_navTabsItem__1a0YR\",\"navTabsImg\":\"Navbar_navTabsImg__wibr_\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2k3lE\",\"container\":\"Profile_container__2arr8\",\"profileWrapper\":\"Profile_profileWrapper__1SbwQ\",\"profileLeftBox\":\"Profile_profileLeftBox__2wC7R\",\"profileLeftTop\":\"Profile_profileLeftTop__2W404\",\"profileWrapImg\":\"Profile_profileWrapImg__3zGz_\",\"profileNameUser\":\"Profile_profileNameUser__bPAkn\",\"profileUserProf\":\"Profile_profileUserProf__1adsL\",\"profilePersonalBtn\":\"Profile_profilePersonalBtn__3PJp8\",\"profileRightBox\":\"Profile_profileRightBox__9ndwE\",\"profilePersonal\":\"Profile_profilePersonal__2Cq-n\",\"profilePersonalTitle\":\"Profile_profilePersonalTitle__3Yfeo\",\"profileBtnBox\":\"Profile_profileBtnBox__3stTa\",\"profileBtnCancel\":\"Profile_profileBtnCancel__2NjtV\",\"passwordRecoveryButton\":\"Profile_passwordRecoveryButton__3xGQA\",\"profileBtnSave\":\"Profile_profileBtnSave__29A_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2mqH2\",\"loginWrapper\":\"Login_loginWrapper__tXurm\",\"loginTitle\":\"Login_loginTitle__iv6EC\",\"loginSubtitle\":\"Login_loginSubtitle__3L4G1\",\"loginInput\":\"Login_loginInput__1Mk5v\",\"loginLabel\":\"Login_loginLabel__2eoJf\",\"loginCheckbox\":\"Login_loginCheckbox__tDjCu\",\"loginEmailWrap\":\"Login_loginEmailWrap__3kmfr\",\"loginPasswordWrap\":\"Login_loginPasswordWrap__3ovPw\",\"loginPasswordControl\":\"Login_loginPasswordControl__2R5LK\",\"loginLinkForgot\":\"Login_loginLinkForgot__3uymc\",\"loginBottom\":\"Login_loginBottom__1XGTA\",\"loginBtn\":\"Login_loginBtn__xEWcl\",\"animate\":\"Login_animate__ILZUN\",\"btn\":\"Login_btn__WTCLf\",\"loginText\":\"Login_loginText__2Ph6x\",\"loginLinkSignUp\":\"Login_loginLinkSignUp__2xTPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecovery\":\"PasswordRecovery_passwordRecovery___9m5-\",\"passwordRecoveryWrapper\":\"PasswordRecovery_passwordRecoveryWrapper__AcShL\",\"passwordRecoveryTitle\":\"PasswordRecovery_passwordRecoveryTitle__1WDNK\",\"passwordRecoverySubTitle\":\"PasswordRecovery_passwordRecoverySubTitle__3fAZc\",\"passwordRecoveryEmail\":\"PasswordRecovery_passwordRecoveryEmail__3lwaL\",\"passwordRecoveryText\":\"PasswordRecovery_passwordRecoveryText__30svz\",\"passwordRecoveryBottom\":\"PasswordRecovery_passwordRecoveryBottom__2Q_cM\",\"passwordRecoveryButton\":\"PasswordRecovery_passwordRecoveryButton__3uTQ3\",\"passwordRecoveryTextButton\":\"PasswordRecovery_passwordRecoveryTextButton__3CRfk\",\"passwordRecoveryLink\":\"PasswordRecovery_passwordRecoveryLink__3TIXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Packs_main__3z8jD\",\"header\":\"Packs_header__m8sGr\",\"sort\":\"Packs_sort__1E8gU\",\"sortBlock\":\"Packs_sortBlock__3ldNQ\",\"table\":\"Packs_table__x_FNF\",\"row\":\"Packs_row__3bTRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setPassword\":\"setPassword_setPassword__39uOB\",\"setPasswordWrapper\":\"setPassword_setPasswordWrapper__2Xf0k\",\"setPasswordTitle\":\"setPassword_setPasswordTitle__CCicB\",\"setPasswordSubTitle\":\"setPassword_setPasswordSubTitle__1YEEu\",\"passwordRecoveryPassword\":\"setPassword_passwordRecoveryPassword__1m-By\",\"setPasswordText\":\"setPassword_setPasswordText__1RyNH\",\"setPasswordBtn\":\"setPassword_setPasswordBtn__2rmwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderWrapper\":\"Slider_sliderWrapper__3d2Wa\",\"sliderTitle\":\"Slider_sliderTitle__233pS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};"],"sourceRoot":""}