{"version":3,"sources":["features/navbar/Navbar.module.css","components/page404/Page404.module.css","components/superComponents/superInputText/SuperInputText.module.css","components/superComponents/superButton/SuperButton.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/superComponents/superCheckbox/SuperCheckbox.module.css","features/main/Main.module.css","components/registration/Registration.module.css","components/passwordRecovery/passwordRecovery-api.ts","components/setPassword/setPasswordReducer.ts","components/superComponents/superInputText/SuperInputText.tsx","components/superComponents/superButton/SuperButton.tsx","components/setPassword/setPassword.tsx","assets/images/avatar.png","components/login/loginPage-api.ts","components/login/loginReducer.ts","components/profile/profilePage-api.ts","components/profile/profileReducer.ts","assets/Preloader/preloader.gif","assets/Preloader/Preloader.tsx","components/profile/editableSpan.tsx","components/login/Login.tsx","components/profile/Profile.tsx","components/passwordRecovery/passwordRecoveryReducer.ts","assets/images/email.png","components/passwordRecovery/PasswordRecovery.tsx","components/registration/registrationApi.ts","components/registration/registrationReducer.ts","components/registration/Registration.tsx","components/superComponents/superCheckbox/SuperCheckbox.tsx","components/superComponents/SuperComponents.tsx","components/page404/Page404.tsx","features/main/Main.tsx","features/navbar/Navbar.tsx","app/App.tsx","reportWebVitals.ts","app/appReducer.ts","components/page404/page404Reducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","recoveryAPI","data","post","initialState","setPasswordError","status","value","type","setStatus","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","key","SuperButton","red","finalClassName","button","default","SetPassword","useState","password","resetPasswordToken","setData","useSelector","state","setPassword","dispatch","useDispatch","token","useParams","console","log","to","pathname","onSubmit","preventDefault","a","response","message","getPassword","id","target","color","authAPI","dat","isLoggedIn","setIsLoggedInAC","setStatusAC","setAppErrorAC","meAPI","name","put","delete","initialised","setDataAC","initialiseTC","then","res","catch","finally","Preloader","src","spinner","EditableSpan","React","memo","props","editMode","setEditMode","title","setTitle","placeholder","autoFocus","onBlur","onDoubleClick","Login","login","formik","useFormik","initialValues","email","rememberMe","validate","values","errors","length","test","resetForm","handleSubmit","getFieldProps","touched","style","disabled","Profile","useEffect","profile","photo","avatar","startValueHandler","useCallback","setNameAC","updatedUser","newNameTC","alt","onClick","passwordRecoveryError","passwordRecoveryStatus","PasswordRecovery","from","passwordRecovery","errorClass","styles","emailPhoto","recoveryPassword","registrationAPI","confirmPassword","isLoading","isRegistration","hidePassword","hideConfirmPassword","setEmail","payload","setConfirmPassword","setError","setIsLoading","setHidePassword","setHideConfirmPassword","setIsRegistration","Registration","navigate","useNavigate","useAppSelector","registration","registrationWrapper","registrationTitle","registrationSubTitle","registrationEmailWrap","registrationLabel","registrationInput","registrationPasswordWrap","registrationPasswordControl","registrationBtnBox","registrationBtnCancel","registrationBtnReg","registrationOverlay","SuperCheckbox","onChangeChecked","children","checkbox","checked","htmlFor","SuperComponents","Page404","body404","container","h2404","h3404","p404","Main","path","element","Navbar","nav","isActive","activeStyle","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","app","action","copyState","page404","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9645c060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3Z5BO\",\"item\":\"Navbar_item__1eKQk\",\"activeStyle\":\"Navbar_activeStyle__1SgSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body404\":\"Page404_body404__1ODDF\",\"container\":\"Page404_container__2UJEM\",\"h2404\":\"Page404_h2404__2eN8n\",\"h3404\":\"Page404_h3404__3aeT2\",\"p404\":\"Page404_p404__zsWO1\",\"a404\":\"Page404_a404__3HGZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dVvt\",\"errorInput\":\"SuperInputText_errorInput__3umyy\",\"error\":\"SuperInputText_error__2-Oun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3HbWL\",\"red\":\"SuperButton_red__1jCQv\",\"button\":\"SuperButton_button__iLVpd\",\"blink\":\"SuperButton_blink__31Ohe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"PasswordRecovery_email__2WOUN\",\"emailPhoto\":\"PasswordRecovery_emailPhoto__2rAXy\",\"error\":\"PasswordRecovery_error__34ns3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2Dnx4\",\"spanClassName\":\"SuperCheckbox_spanClassName__qAObu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__2eAJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__UUaPN\",\"registrationWrapper\":\"Registration_registrationWrapper__12nUB\",\"registrationTitle\":\"Registration_registrationTitle__2xL8R\",\"registrationSubTitle\":\"Registration_registrationSubTitle__K8R84\",\"registrationInput\":\"Registration_registrationInput__3F69K\",\"registrationLabel\":\"Registration_registrationLabel__3CXnM\",\"registrationPasswordWrap\":\"Registration_registrationPasswordWrap__3QNLn\",\"registrationPasswordControl\":\"Registration_registrationPasswordControl__2BqWE\",\"registrationBtnBox\":\"Registration_registrationBtnBox__3d9hL\",\"registrationBtnCancel\":\"Registration_registrationBtnCancel__2q74Y\",\"registrationBtnReg\":\"Registration_registrationBtnReg__3kYCC\"};","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n});\r\n\r\n// api\r\nexport const recoveryAPI = {\r\n    forgot(data: ForgotType) {\r\n        return instance.post<ForgotResponseType>(\"auth/forgot\", data);\r\n    },\r\n    setNewPassword(data: SetType) {\r\n        return instance.post<ResponseType>(\"auth/set-new-password\", data);\r\n    },\r\n};\r\n\r\n\r\n// types\r\nexport type ForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n};\r\nexport type ResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ForgotResponseType =ResponseType & {\r\n    answer: boolean\r\n    html: boolean\r\n    success: boolean\r\n};\r\nexport type SetType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n};","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../passwordRecovery/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    setPasswordError: '',\r\n    status: 'idle'\r\n} as setPasswordType;\r\n\r\nexport const setPasswordReducer = (state: InitialStateType = initialState, action: AppActionType): setPasswordType => {\r\n    switch (action.type) {\r\n        case \"SET-PASSWORD/SET-ERROR\":\r\n            return {...state, setPasswordError: action.value};\r\n        case \"SET-PASSWORD/SET-STATUS\":\r\n            return {...state, status: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const setPasswordError = (value: string) => ({type: \"SET-PASSWORD/SET-ERROR\", value} as const)\r\nexport const setStatus = (value: setStatusType) => ({type: \"SET-PASSWORD/SET-STATUS\", value} as const)\r\n\r\n// thunks\r\nexport const getPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setStatus(\"loading\"));\r\n        let res = await recoveryAPI.setNewPassword(data);\r\n        dispatch(setStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(setStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(setPasswordError(error))\r\n    }\r\n};\r\n// types\r\nexport type setPasswordType = {\r\n    setPasswordError: string\r\n    status: setStatusType\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type AppActionType = ReturnType<typeof setPasswordError>\r\n    | ReturnType<typeof setStatus>\r\n\r\nexport type setStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {FormEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {StatusType} from \"../../app/appReducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {getPassword, setPasswordError} from \"./setPasswordReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport SuperInputText from \"../superComponents/superInputText/SuperInputText\";\r\nimport SuperButton from \"../superComponents/superButton/SuperButton\";\r\n\r\ntype UseStateType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport const SetPassword: React.FC = () => {\r\n\r\n    const [data, setData] = useState<UseStateType>({\r\n        password: '',\r\n        resetPasswordToken: ''\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, StatusType>(state => state.setPassword.status);\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.setPassword.setPasswordError);\r\n\r\n    const dispatch: Dispatch<any> = useDispatch();\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        dispatch(getPassword(data))\r\n    };\r\n\r\n    const {token} = useParams<string>();\r\n    console.log(token)\r\n\r\n    if (status === \"succeeded\") {\r\n        dispatch(setPasswordError(''))\r\n        return <Navigate to={{\r\n            pathname: '/login'\r\n        }}\r\n        />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <h2>Create new password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <SuperInputText\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    value={data.password}\r\n                    onChange={e => setData({resetPasswordToken: token, password: e.target.value})}\r\n                />\r\n                <SuperButton\r\n                    color='dark-blue'\r\n                    type={\"submit\"}>\r\n                    send\r\n                </SuperButton>\r\n                <p>Create new password and we will send you further instructions to email</p>\r\n                <div>{error}</div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/avatar.ae88cd5b.png\";","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const authAPI = {\r\n    login(dat: FormikErrorType) {\r\n        return instance.post <FormikErrorType, AxiosResponse<ResponseType>>('auth/login', dat)\r\n    }\r\n}\r\nexport type FormikErrorType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\nexport type ResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI, FormikErrorType} from \"./loginPage-api\";\r\nimport {setDataAC, SetDataType} from \"../profile/profileReducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | \"failed\"\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    status: 'idle',\r\n    error: null as ErrorType,\r\n    /*data: {} as ResponseType*/\r\n};\r\nexport type ErrorType = string | null\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        /*case \"login/SET-DATA\":\r\n            return {...state, data: action.data}*/\r\n        case \"login/SET-STATUS\":\r\n            return {...state, status: action.status}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\n\r\n/*export const setDataAC = (data: ResponseType) =>\r\n    ({type: 'login/SET-DATA', data} as const)*/\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) =>\r\n    ({type: 'login/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) =>\r\n    ({type: 'APP/SET-ERROR', error} as const)\r\n// types\r\nexport type SetIsLoggedInType = ReturnType<typeof setIsLoggedInAC>\r\nexport type SetStatusType = ReturnType<typeof setStatusAC>\r\n/*export type SetDataType = ReturnType<typeof setDataAC>*/\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type ActionType = SetDataType | SetIsLoggedInType | SetStatusType | SetAppErrorActionType\r\n// thunks\r\nexport const loginTC = (dat: FormikErrorType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    authAPI.login(dat)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n\r\n}\r\n","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\n// api\r\nexport const meAPI = {\r\n    me() {\r\n        return instance.post <UserData>('auth/me')\r\n    },\r\n    setNewName(name: string) {\r\n        return instance.put <{ name: string }, AxiosResponse<NewNameResponseType>>('auth/me', {name})\r\n    },\r\n    logOut() {\r\n        return instance.delete<LogOutType>('auth/me')\r\n    }\r\n}\r\n\r\nexport type LogOutType = {\r\n    info: string,\r\n    error: string\r\n}\r\nexport type NewNameResponseType = NewResponseType & { error?: string }\r\nexport type NewResponseType = {\r\n    updatedUser: UserData\r\n}\r\nexport type UserData = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {\r\n    setAppErrorAC, SetAppErrorActionType,\r\n    setIsLoggedInAC,\r\n    SetIsLoggedInType,\r\n    setStatusAC,\r\n    SetStatusType\r\n} from \"../login/loginReducer\";\r\nimport {meAPI} from \"./profilePage-api\";\r\nimport {ResponseType} from \"../login/loginPage-api\";\r\n\r\nconst initialState = {\r\n    data: {} as ResponseType,\r\n    initialised: false\r\n};\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"profile/SET-DATA\":\r\n            return {...state, data: action.data}\r\n        case \"profile/SET-NAME\":\r\n            return {...state, data: {...state.data, name: action.name}}\r\n        case \"profile/SET-INITIALISED\":\r\n            return {...state, initialised: action.initialised}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const isInitialisedAC = (initialised: boolean) =>\r\n    ({type: 'profile/SET-INITIALISED', initialised} as const)\r\nexport const setNameAC = (name: string) =>\r\n    ({type: 'profile/SET-NAME', name} as const)\r\nexport const setDataAC = (data: ResponseType) =>\r\n    ({type: 'profile/SET-DATA', data} as const)\r\n// thunks\r\nexport const initialiseTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.me()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setDataAC(res.data))\r\n                dispatch(isInitialisedAC(true))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const newNameTC = (name: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.setNewName(name)\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setStatusAC('succeeded'))\r\n                dispatch(setNameAC(res.data.updatedUser.name))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('idle'))\r\n            }\r\n        )\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(setStatusAC('loading'))\r\n    meAPI.logOut()\r\n        .then(res => {\r\n            if (res.data) {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n                dispatch(setStatusAC('succeeded'))\r\n            }\r\n        )\r\n}\r\n// types\r\nexport type SetInitialisedType = ReturnType<typeof isInitialisedAC>\r\nexport type SetDataType = ReturnType<typeof setDataAC>\r\nexport type SetNameType = ReturnType<typeof setNameAC>\r\ntype InitialStateType = typeof initialState;\r\nexport type ActionType =\r\n    SetInitialisedType\r\n    | SetDataType\r\n    | SetNameType\r\n    | SetIsLoggedInType\r\n    | SetStatusType\r\n    | SetAppErrorActionType\r\n","export default __webpack_public_path__ + \"static/media/preloader.d8baec16.gif\";","import React from \"react\";\r\nimport spinner from \"./preloader.gif\"\r\n\r\nexport let Preloader = ( )=>{\r\n\r\n    return <div>\r\n        <img src={spinner}/>\r\n\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n\r\n}\r\nexport const EditableSpan = React.memo(function (props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n    return <div>\r\n        {editMode\r\n            ? <input value={title} placeholder={'name'} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n            : <span onDoubleClick={activateEditMode}>{props.value}</span>}\r\n    </div>\r\n});\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {FormikErrorType} from \"./loginPage-api\";\r\nimport {ErrorType, loginTC} from \"./loginReducer\";\r\nimport {NavLink, Navigate} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\n\r\nexport const Login: React.FC = () => {\r\n\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (values.password.length > 15) {\r\n                errors.password = 'Your password should be not longer then 15 characters';\r\n            }\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            formik.resetForm();\r\n            dispatch(loginTC(values))\r\n        }\r\n    })\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to='/profile'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <p>Sign in</p>\r\n            {error ? error : (status === 'loading') && <Preloader/>}\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div>\r\n                    <input type={\"email\"} placeholder={'email'}\r\n                           {...formik.getFieldProps('email')}/>\r\n                </div>\r\n                {formik.touched.email &&\r\n                formik.errors.email && <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                <div>\r\n                    <input type={\"password\"} placeholder={'password'}\r\n                           {...formik.getFieldProps('password')}/>\r\n                </div>\r\n                {formik.touched.password &&\r\n                formik.errors.password && <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                <div>\r\n                    <input type={'checkbox'}/> Remember me\r\n                </div>\r\n                <NavLink to='/passwordRecovery'>Forgot password</NavLink>\r\n                <div>\r\n                    <button type={'submit'} disabled={status === 'loading'}>login</button>\r\n                </div>\r\n                <NavLink to='/registration'>Sign up</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\nimport {initialiseTC, logOutTC, newNameTC} from \"./profileReducer\";\r\n\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport {ErrorType} from \"../login/loginReducer\";\r\n\r\nimport {EditableSpan} from \"./editableSpan\";\r\nimport {Login} from \"../login/Login\";\r\n\r\nexport const Profile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.profile.data.email)\r\n    const photo = useSelector<AppRootStateType, string | undefined>(state => state.profile.data.avatar)\r\n    const name = useSelector<AppRootStateType, string>(state => state.profile.data.name)\r\n    const status = useSelector<AppRootStateType, string>(state => state.login.status)\r\n    const error = useSelector<AppRootStateType, ErrorType>(state => state.login.error)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const initialised = useSelector<AppRootStateType, boolean>(state => state.profile.initialised)\r\n\r\n    const startValueHandler = useCallback((title: string) => {\r\n        dispatch(newNameTC(title))\r\n    }, [dispatch])\r\n\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n    if (!initialised && isLoggedIn) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Login/>\r\n    }\r\n\r\n    /*useEffect(()=>{\r\n        if(error){\r\n            setTimeout(()=>{\r\n                setAppErrorAC(null)\r\n            },500)\r\n        }\r\n    },[error])*/\r\n\r\n    return (\r\n        <div>\r\n            <h1>Personal information</h1>\r\n            {error && initialised ? error : (status === 'loading') && <Preloader/>}\r\n            <div> {photo ? <img alt='' src={photo}/> : <img alt='' src={avatar}/>}</div>\r\n            <div>email: {email}  </div>\r\n            <div>name: <EditableSpan value={name} onChange={startValueHandler}/></div>\r\n            <button onClick={logOutHandler}>LogOut</button>\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"./passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    passwordRecoveryError: '',\r\n    status: 'idle'\r\n} as passwordRecoveryType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"PASSWORD_RECOVERY/RECOVERY_ERROR\":\r\n            return {...state, passwordRecoveryError: action.value};\r\n        case \"PASSWORD_RECOVERY/RECOVERY_STATUS\":\r\n            return {...state, status: action.value};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nexport const passwordRecoveryError = (value: string) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_ERROR\",\r\n    value} as const)\r\n\r\nexport const passwordRecoveryStatus = (value: recoveryStatusType) => ({\r\n    type: \"PASSWORD_RECOVERY/RECOVERY_STATUS\",\r\n    value\r\n} as const)\r\n\r\n// thunks\r\n\r\nexport const recoveryPassword = (data: any) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(passwordRecoveryStatus(\"loading\"));\r\n        await recoveryAPI.forgot(data);\r\n        dispatch(passwordRecoveryStatus(\"succeeded\"));\r\n    } catch (e: any) {\r\n        dispatch(passwordRecoveryStatus(\"failed\"));\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(passwordRecoveryError(error))\r\n    }\r\n};\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport type passwordRecoveryType =  {\r\n    passwordRecoveryError: string\r\n    status: recoveryStatusType\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof passwordRecoveryError>\r\n    | ReturnType<typeof passwordRecoveryStatus>\r\n\r\nexport type recoveryStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","export default __webpack_public_path__ + \"static/media/email.2c4865f1.png\";","import React, {FormEvent, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {passwordRecoveryError, recoveryPassword, recoveryStatusType} from \"./passwordRecoveryReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport email from './../../assets/images/email.png'\r\nimport {Preloader} from \"../../assets/Preloader/Preloader\";\r\nimport styles from './PasswordRecovery.module.css'\r\n\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n    const [data, setData] = useState({\r\n        email: '',\r\n        from: 'test-front-admin <ai73a@yandex.by>',\r\n        message: `<div style=\"background-color: lime; padding: 15px;\">\r\n\r\n        <a href='https://igor-yarakhovich.github.io/cards/#/setPassword/$token$'>\r\n\r\n        Password recover link\r\n        </a></div>`\r\n    });\r\n\r\n    const status = useSelector<AppRootStateType, recoveryStatusType>(state => state.passwordRecovery.status)\r\n    const error = useSelector<AppRootStateType, string>(state => state.passwordRecovery.passwordRecoveryError)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        dispatch(recoveryPassword(data));\r\n        e.preventDefault();\r\n        data.email = ''\r\n    };\r\n\r\n    const errorClass = error ? styles.error : ''\r\n\r\n    const setDataHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({...data, email: e.target.value})\r\n    }\r\n\r\n    if (status === \"succeeded\") {\r\n\r\n        dispatch(passwordRecoveryError(''))\r\n        return <div className={styles.email}>\r\n            <h2>Check your email and follow the link</h2>\r\n            <img alt='' className={styles.emailPhoto} src={email}/>\r\n        </div>\r\n    }\r\n\r\n    if (status === \"loading\") {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> IT-incubator</h1>\r\n            <h2>Forgot your password?</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    value={data.email}\r\n                    onChange={setDataHandler}\r\n                />\r\n                <button\r\n                    color='dark-blue'\r\n                    type={\"submit\"}\r\n                >\r\n                    send\r\n                </button>\r\n            </form>\r\n            <p>Enter your email address and we will send you further instructions</p>\r\n            <div className={errorClass}>{error}</div>\r\n            <NavLink to={'/login'}>Try logging in</NavLink>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport type RegisterDataType = {\r\n    email: string\r\n    password: string\r\n};\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials:true\r\n})\r\n\r\nexport const registrationAPI = {\r\n    register(data: RegisterDataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data);\r\n    },\r\n};","import {RegisterDataType, registrationAPI} from './registrationApi';\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType =\r\n    ReturnType<typeof setEmail>\r\n    | ReturnType<typeof setPassword>\r\n    | ReturnType<typeof setConfirmPassword>\r\n    | ReturnType<typeof setError>\r\n    | ReturnType<typeof setIsLoading>\r\n    | ReturnType<typeof setHidePassword>\r\n    | ReturnType<typeof setHideConfirmPassword>\r\n    | ReturnType<typeof setIsRegistration>\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    error: '',\r\n    isLoading: false,\r\n    isRegistration: false,\r\n    hidePassword: 'text',\r\n    hideConfirmPassword: 'text'\r\n};\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'Registration/SET-EMAIL': {\r\n            const copyState = {...state}\r\n            copyState.email = action.payload.email\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Password': {\r\n            const copyState = {...state}\r\n            copyState.password = action.payload.password\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-ConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.confirmPassword = action.payload.confirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Error': {\r\n            const copyState = {...state}\r\n            copyState.error = action.payload.error\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-IsLoading': {\r\n            const copyState = {...state}\r\n            copyState.isLoading = action.payload.isLoading\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HidePassword': {\r\n            const copyState = {...state}\r\n            copyState.hidePassword = action.payload.hidePassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-HideConfirmPassword': {\r\n            const copyState = {...state}\r\n            copyState.hideConfirmPassword = action.payload.hideConfirmPassword\r\n            return copyState\r\n        }\r\n        case 'Registration/SET-Registration': {\r\n            const copyState = {...state}\r\n            copyState.isRegistration = action.payload.isRegistration\r\n            return copyState\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const setEmail = (email: string) => ({\r\n    type: 'Registration/SET-EMAIL',\r\n    payload: {\r\n        email\r\n    }\r\n} as const)\r\nexport const setPassword = (password: string) => ({\r\n    type: 'Registration/SET-Password',\r\n    payload: {\r\n        password\r\n    }\r\n} as const)\r\nexport const setConfirmPassword = (confirmPassword: string) => ({\r\n    type: 'Registration/SET-ConfirmPassword',\r\n    payload: {\r\n        confirmPassword\r\n    }\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: 'Registration/SET-Error',\r\n    payload: {\r\n        error\r\n    }\r\n} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({\r\n    type: 'Registration/SET-IsLoading',\r\n    payload: {\r\n        isLoading\r\n    }\r\n} as const)\r\nexport const setHidePassword = (hidePassword: string) => ({\r\n    type: 'Registration/SET-HidePassword',\r\n    payload: {\r\n        hidePassword\r\n    }\r\n} as const)\r\nexport const setHideConfirmPassword = (hideConfirmPassword: string) => ({\r\n    type: 'Registration/SET-HideConfirmPassword',\r\n    payload: {\r\n        hideConfirmPassword\r\n    }\r\n} as const)\r\nexport const setIsRegistration = (isRegistration: boolean) => ({\r\n    type: 'Registration/SET-Registration',\r\n    payload: {\r\n        isRegistration\r\n    }\r\n} as const)\r\n\r\nexport const getRegistration = (data: RegisterDataType) => async (dispatch: Dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch(setError(''))\r\n        dispatch(setIsLoading(true));\r\n        await registrationAPI.register(data)\r\n        dispatch(setIsLoading(false));\r\n        dispatch(setIsRegistration(true))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        dispatch(setIsRegistration(false))\r\n\r\n\r\n    } catch (e: any) {\r\n        dispatch(setIsLoading(false))\r\n        dispatch(setError(e.response?.data.error))\r\n        dispatch(setIsRegistration(false))\r\n\r\n    }\r\n}","import React, {ChangeEvent} from 'react';\r\nimport style from './Registration.module.css'\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    getRegistration,\r\n    setConfirmPassword,\r\n    setEmail, setError,\r\n    setHideConfirmPassword,\r\n    setHidePassword, setIsRegistration,\r\n    setPassword\r\n} from './registrationReducer';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const useAppSelector: TypedUseSelectorHook<AppRootStateType> = useSelector\r\n    const {\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        hidePassword,\r\n        hideConfirmPassword, error, isLoading, isRegistration\r\n    } = useAppSelector(state => state.registration)\r\n\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setEmail(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setConfirmPassword(e.currentTarget.value))\r\n        dispatch(setError(''))\r\n    }\r\n    const onClickHidePasswordHandler = () => {\r\n        if (hidePassword === 'password')\r\n            dispatch(setHidePassword('text'))\r\n        else dispatch(setHidePassword('password'))\r\n\r\n    }\r\n    const onClickHideConfirmPasswordHandler = () => {\r\n        if (hideConfirmPassword === 'password')\r\n            dispatch(setHideConfirmPassword('text'))\r\n        else dispatch(setHideConfirmPassword('password'))\r\n    }\r\n    const OnClickCancelHandler = () => {\r\n        dispatch(setIsRegistration(false))\r\n        dispatch(setError(''))\r\n        dispatch(setEmail(''))\r\n        dispatch(setPassword(''))\r\n        dispatch(setConfirmPassword(''))\r\n        return navigate('/login')\r\n    }\r\n    const OnClickRegistrationHandler = () => {\r\n        if (email && password && password === confirmPassword) {\r\n            dispatch(getRegistration({email, password: confirmPassword}))\r\n        } else {\r\n            dispatch(setError('not valid email/password '))\r\n        }\r\n    }\r\n    if (isRegistration) {\r\n        navigate('/login')\r\n    }\r\n    return (\r\n        <div className={style.registration}>             \r\n            <div className={style.registrationWrapper}>\r\n                <h2 className={style.registrationTitle}>It-incubator</h2>\r\n                <h3 className={style.registrationSubTitle}>Sign Up</h3>\r\n\r\n                <form>\r\n                    <div className={style.registrationEmailWrap}>\r\n                        <label className={style.registrationLabel}>Email</label>\r\n                        <input className={style.registrationInput} type=\"\" value={email} onChange={onChangeEmailHandler}/>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Password</label>\r\n                        <input className={style.registrationInput} type={hidePassword} placeholder={''} value={password} \r\n                        onChange={onChangePasswordHandler}/>\r\n\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHidePasswordHandler}></button>\r\n                    </div>\r\n                    <div className={style.registrationPasswordWrap}>\r\n                        <label className={style.registrationLabel}>Confirm password</label>\r\n                        <input className={style.registrationInput} type={hideConfirmPassword} placeholder={''} value={confirmPassword}\r\n                        onChange={onChangeConfirmPasswordHandler}/>\r\n                        <button className={style.registrationPasswordControl} onClick={onClickHideConfirmPasswordHandler}></button>\r\n                        {error}\r\n                    </div>\r\n                </form>\r\n                \r\n                <div className={style.registrationBtnBox}>\r\n                    <button className={style.registrationBtnCancel} disabled={false} onClick={OnClickCancelHandler}>Cancel</button>\r\n                    <button className={style.registrationBtnReg} disabled={false} onClick={OnClickRegistrationHandler}>Register</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.registrationOverlay}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                className={finalInputClassName}\r\n                type={'checkbox'}\r\n                id={'checkbox'}\r\n                name={'check'}\r\n                onChange={onChangeCallback}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            /> <label htmlFor={'checkbox'}/>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </div> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport SuperInputText from \"./superInputText/SuperInputText\";\r\nimport SuperButton from \"./superButton/SuperButton\";\r\nimport SuperCheckbox from \"./superCheckbox/SuperCheckbox\";\r\n\r\nexport const SuperComponents: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>SuperComponents</h2>\r\n            <SuperInputText/>\r\n            <SuperButton>\r\n                click\r\n            </SuperButton>\r\n            <div>\r\n                <SuperCheckbox/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Page404.module.css'\r\n\r\nexport const Page404: React.FC = () => {\r\n    return (\r\n        <div className={styles.body404}>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.h2404}>404</h2>\r\n                <h3 className={styles.h3404}>Oops, nothing here...</h3>\r\n                <p className={styles.p404}>Please Check the URL</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Navigate, Route, Routes } from 'react-router-dom';\r\nimport {SetPassword} from \"../../components/setPassword/setPassword\";\r\nimport {Profile} from \"../../components/profile/Profile\";\r\nimport {PasswordRecovery} from \"../../components/passwordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../../components/registration/Registration\";\r\nimport {Login} from \"../../components/login/Login\";\r\nimport {SuperComponents} from \"../../components/superComponents/SuperComponents\";\r\nimport {Page404} from \"../../components/page404/Page404\";\r\nimport styles from './Main.module.css'\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <div className={styles.Main}>\r\n            <Routes>\r\n\r\n                <Route path='/login' element={<Login/>}/>\r\n\r\n                <Route path='/' element={<Navigate to='/profile'/>}/>\r\n                <Route path='/profile' element={<Profile/>}/>\r\n\r\n                <Route path='/registration' element={<Registration/>}/>\r\n                <Route path='/passwordRecovery' element={<PasswordRecovery/>}/>\r\n                <Route path='/setPassword/:token/*' element={<SetPassword/>}/>\r\n                <Route path='/superComponents' element={<SuperComponents/>}/>\r\n\r\n                <Route path='404' element={<Page404/>}/>\r\n                <Route path='*' element={<Navigate to='/404'/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return <nav className={styles.nav}>\r\n        <div>\r\n            <NavLink to='/profile'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/login'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Login</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/registration'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >Registration</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/passwordRecovery'\r\n                     className={({isActive}) => (isActive ? styles.activeStyle : styles.item)}\r\n            >PasswordRecovery</NavLink>\r\n        </div>\r\n    </nav>\r\n\r\n}","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Main} from \"../features/main/Main\";\r\nimport {Navbar} from \"../features/navbar/Navbar\";\r\nimport {initialiseTC} from \"../components/profile/profileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseTC())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Main />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n\r\n};\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n//new thunk\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport type StatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\r\n","const initialState = {};\r\n\r\nexport const page404Reducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-STATUS\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// actions\r\nconst setAppStatusAC = () => ({type: \"APP/SET-STATUS\"} as const)\r\n\r\n// thunks\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\nexport type AppActionType = ReturnType<typeof setAppStatusAC>\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./appReducer\";\r\nimport {loginReducer} from \"../components/login/loginReducer\";\r\nimport {registrationReducer} from \"../components/registration/registrationReducer\";\r\nimport {profileReducer} from \"../components/profile/profileReducer\";\r\nimport {page404Reducer} from \"../components/page404/page404Reducer\";\r\nimport {setPasswordReducer} from \"../components/setPassword/setPasswordReducer\";\r\nimport {passwordRecoveryReducer} from \"../components/passwordRecovery/passwordRecoveryReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    page404: page404Reducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    setPassword: setPasswordReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./app/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n           </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}